{"version":3,"sources":["assets/CompanyDashboard.jpg","assets/UHLogo.png","assets/HomePageBackground.jpg","assets/LoginBackground.jpg","assets/StudentDashboard.jpg","assets/image.jpg","assets/location-icon-atlas.png","components/Navbar/Navbar.js","components/Footer/Footer.js","pages/Home/Home.js","components/Login/Login.js","components/ResetPassword/ResetPassword.js","components/ResetPassword/ResetPasswordTwo.js","components/ResetPassword/ResetPage.js","components/Signup/Signup.js","authConfig.js","components/AccountInfo/CompanyInfo.js","components/AccountInfo/StudentInfo.js","components/AccountInfo/AccountInfo.js","pages/NotFound/NotFound.js","reducers/dataReducer.js","contexts/dataContext.js","components/CompanyPublic/ProjectListTemplate.js","components/StudentProject/StudentProject.js","components/StudentProject/StudentProjectAdd.js","components/StudentProject/StudentProjectScroll.js","pages/StudentProfile/StudentProfile.js","components/CompanyPublic/ProjectsList.js","pages/StudentSearch/StudentSearch.js","pages/StudentSelected/ProjectCard.js","pages/StudentSelected/StudentSelected.js","pages/Dashboard/StudentRoutes.js","pages/Dashboard/StudentMenu.js","pages/CompanyProfile/CompanyProfile.js","pages/CompanyProject/CompanyProjectList.js","pages/CompanyProject/CompanyProjectTeam.js","pages/CompanyProject/CompanyProjectTemplate.js","pages/CompanyProject/CompanyProjectCreate.js","components/StudentPublic/SaveStudent.js","components/StudentPublic/StudentDetailed.js","components/StudentPublic/StudentsList.js","pages/CompanySearch/CompanySearch.js","pages/Dashboard/CompanyRoutes.js","pages/Dashboard/CompanyMenu.js","components/AdminMatchingTable/AdminMatchingTable.js","pages/AdminProfile/AdminProfile.js","pages/AdminMap/AdminMap.js","components/StudentPublic/AdminStudentView.js","components/CompanyPublic/AdminCompanyView.js","pages/AdminCompanyProjects/AdminCompanyProjects.js","pages/Dashboard/AdminRoutes.js","pages/Dashboard/AdminMenu.js","pages/Dashboard/Dashboard.js","pages/ReportBug/IssueForm.js","pages/ReportBug/ContactInfoForm.js","pages/ReportBug/ReviewSubmissionForm.js","pages/ReportBug/Success.js","pages/ReportBug/formValidation.js","pages/ReportBug/ReportBug.js","pages/AboutDevelopers/AboutDevelopers.js","components/ProtectedRoute/ProtectedRoute.js","App.js","customTheme.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","logo","objectFit","width","float","height","AppBar","background","display","borderRadius","margin","Login","SignUp","Navbar","classes","history","useHistory","Fragment","className","position","Toolbar","Grid","item","xs","Link","href","alt","src","UHLogo","Button","size","color","onClick","isLoggedIn","localStorage","getItem","axios","post","refresh","then","res","setItem","data","access","setTimeout","push","catch","err","Copyright","Typography","variant","style","fontWeight","Date","getFullYear","root","flexDirection","flex","rootGrid","flexGrow","footer","padding","marginTop","backgroundColor","footerRelated","footerText","image","Footer","container","direction","justify","alignItems","spacing","to","textDecoration","textAlign","text","paddingTop","title_1","letterSpacing","title_2","content","fontFamily","fontStyle","textShadow","Home","createMuiTheme","imageUrl","backgroundImage","Background","backgroundPosition","backgroundSize","backgroundRepeat","typography","h3","fontSize","breakpoints","up","component","loginbackground","paper","avatar","palette","secondary","main","form","submit","loginAlert","marginBottom","getNewToken","console","log","useState","error","setError","email","password","loginInfo","setLoginInfo","handleChange","e","target","name","value","CssBaseline","sm","md","Paper","elevation","square","severity","Avatar","onSubmit","preventDefault","role_id","email_id","slug","response","detail","TextField","required","fullWidth","id","label","autoComplete","autoFocus","onChange","type","Box","mt","ResetPassword","setValidEmail","emailInput","setEmailInput","Container","maxWidth","noValidate","ResetPasswordTwo","code","confirm_password","resetInput","setResetInput","getSplitUid","split","token","uidb64","patch","ResetPage","validEmail","alert","password1","password2","signUpInfo","setSignUpInfo","len","length","domain","substring","FormControl","FormLabel","RadioGroup","radio","aria-label","row","FormControlLabel","control","Radio","getConfig","headers","Authorization","justifyContent","formControl","checkLabel","CompanyInfo","states","firstStep","setFirstStep","disable","setDisable","industryType","phoneNumber","address","city","state","zip","mailingAddress","city2","state2","zip2","checkedAddress","contact_email","isSolo","companyFirst","setCompanyFirst","errorsFirst","setErrorsFirst","errorsSecond","setErrorsSecond","companyRep","companyType","website","mission","description","companySecond","setCompanySecond","industryTypes","setIndustryTypes","useEffect","get","industry_type","map","index","handleChangeFirst","handleChangeSecond","getAddress","values","handleSubmit","Object","entries","errorExists","keys","forEach","key","company_zip","company_name","company_phone_no","company_contact_email","representative_name","company_representative_type","parseInt","company_type","company_address","mailing_address","mailing_zip","company_website","company_mission","company_description","company_latitude","features","geometry","coordinates","company_longitude","username","maxwidth","Divider","inputProps","maxLength","FormHelperText","InputLabel","Select","MenuItem","Checkbox","checked","labelPlacement","disabled","placeholder","multiline","rows","helperText","skills","border","cursor","outline","boxSizing","transition","whiteSpace","verticalAlign","skillsContainer","sectionHeader","sectionContent","chips","flexWrap","chip","listStyle","boxShadow","resumeName","skillRoot","beginnerChip","primary","borderColor","intermediateChip","warning","expertChip","success","beginnerDeleteIcon","fill","intermediateDeleteIcon","expertDeleteIcon","StudentInfo","updateFailed","setUpdateFailed","handleCloseUpdateFailed","Alert","props","setAlert","first_name","last_name","student_id","date_of_birth","graduation_date","major","degree","zipcode","studentFirst","setStudentFirst","student_description","studentSecond","setStudentSecond","valueDateOfBirth","setDateOfBirth","valueTodaysDate","valueGraduationDate","setGraduationDate","setSkills","tempSkill","setTempSkill","experience","setExperience","mySkills","setMySkills","getSkills","a","errors","full_name","student_contact_email","student_phone_no","student_address","student_zip","student_db_id","returnArray","i","j","skill_name","skill_id","experience_level","replaceSkillIdWithName","defaultValue","calendarAriaLabel","clearAriaLabel","dayAriaLabel","monthAriaLabel","nativeInputAriaLabel","yearAriaLabel","native","maxDate","studentID","toJSON","skill","Chip","deleteIcon","onDelete","skillTodelete","filter","mySkill","unique","Snackbar","open","autoHideDuration","onClose","AccountInfo","student","company","userType","setUserType","role","NotFound","gutterBottom","dataReducer","action","profile","payload","students","DataContext","createContext","initialState","DataContextProvider","useReducer","dispatch","Provider","children","profileLogo","objectPosition","zIndex","opacity","right","studentName","gridList","subheader","skillsRoot","marginRight","chipLabel","qualification","textTransform","actionArea","fieldTitle","fieldValue","cardHeader","paddingLeft","paddingRight","cardContent","gridRoot","card","button","noPaddingTop","spinner","top","left","transform","buttonContainer","loader","imageDiv","divProjectName","companyInfo","companyIcon","projectInfo","companyInfoContainer","projectBody","bottomSpace","paddingBottom","speedDial","speedDialButton","wordBreak","actions","icon","ProjectsListTemplate","match","React","setOpen","useContext","saveSuccess","setSaveSuccess","saveFailed","setSaveFailed","handleCloseSaveSucess","handleCloseSaveFailed","saveProject","project_id","params","project","student_preference_for_project","profileInfo","setCompanyInfo","isLoading","setIsLoading","project_name","project_description","project_type","project_deadline","project_tech","date_added","LinearProgress","SpeedDial","ariaLabel","SpeedDialIcon","onOpen","FabProps","SpeedDialAction","tooltipTitle","tooltipOpen","animatedComponents","makeAnimated","verticalElementTitle","projectLabels","projectDescLabel","projectDesc","column","flexBasis","helper","borderLeft","divider","projectLink","link","delete","dialogDelete","edit","projectDate","projectTimeline","marginLeft","StudentProject","projects","setProjects","options","openEdit","setOpenEdit","openDelete","setOpenDelete","project_end_date","project_link","project_role","project_start_date","project_in_progress","currentProject","setCurrentProject","projectToDelete","setProjectToDelete","handleCurrentProjectChange","handleCloseEdit","handleCloseDelete","handleSave","validate","skillsSeparatedByCommas","tech","put","updated_projects","updatedItem","layout","IconStyle","iconStyle","contentArrowStyle","borderRight","clsx","includes","IconButton","handleClickOpenEdit","Dialog","aria-labelledby","DialogTitle","addNewTitle","DialogContent","AutoSize","closeMenuOnSelect","components","el","some","f","isMulti","isSearchable","InputLabelProps","shrink","FormGroup","DialogActions","projectAdd","handleClickOpenDelete","aria-describedby","DialogContentText","studentProjectsCurrent","message","addDiv","projectRole","selectTech","StudentProjectAdd","handleClose","studentInput","setStudentInput","classNames","leftIcon","iconSmall","Array","prototype","call","s","toString","newProject","toTop","bottom","StudentProjectScroll","showBelow","show","setShow","handleScroll","window","pageYOffset","addEventListener","removeEventListener","behavior","dialogInput","inline","dialogConfirm","select","myProjects","flexColumn","flexRow","labelAsterisk","StudentProfile","dialogOpen","setDialogOpen","setEmail","setPassword","authError","setAuthError","skillName","setSkillName","student_skills","streetAddress","studentInfo","setStudentInfo","getStreetAddress","getCity","getState","studentEditBool","studentEdit","showStudentEdit","setErrors","firstRender","useRef","getSkillsRepo","getStudentProjects","username_id","updateProfile","current","StudentDashboard","edge","List","ListItem","ListItemIcon","ListItemText","lg","skllToDelete","prevStudentInput","dialog","ProjectsList","loading","noProjectsFound","Card","CardHeader","title","CardContent","pathname","searchBackground","header","keywordHeading","keywordGrid","keywordSearch","searchButton","rootAccordion","accordionExpand","advancedSearchButton","SearchLabels","searchSelect","filterButton","ASGrid","customStyles","option","provided","singleValue","multiValue","ValueContainer","StudentSearch","setLoading","setNoProjectsFound","projectList","setProjectList","keywords","searchInput","setSearchInput","handleClickSearch","expanded","setExpanded","companyName","setCompanyName","compName","setIndustryType","projectName","setProjectName","projName","projectType","setProjectType","panel","projectTech","setProjectTech","OutlinedInput","onKeyPress","endAdornment","InputAdornment","Accordion","event","isExpanded","AccordionSummary","aria-controls","AccordionDetails","searchLabels","compNameSeparatedByCommas","styles","industryTypeSeparatedByCommas","projectNameSeparatedByCommas","projectTypeSeparatedByCommas","selectLable","projectMenu","ProjectCard","setModifiedProject","removeProject","changePreferenceOpen","setPreferenceChangeOpen","removeProjectOpen","setRemoveProjectOpen","preference","setPreference","changingPreference","setChangingPeference","removingProject","setRemovingProject","anchorEl","setAnchorEl","handleCloseMenu","aria-haspopup","currentTarget","keepMounted","Boolean","labelId","selection_id","selectionCard","cardTitle","cardMessgae","StudentSelected","selectedProjects","setSelectedProjects","studentSelection","selection","selections","allProjects","find","modifiedProject","getProjects","align","StudentRoutes","path","useRouteMatch","exact","render","StudentMenu","url","profileHeader","quarterWidth","formInput","formInput2","inputLabel","inputLabelBold","fontWeightBold","selectInput","CompanyProfile","loading2","setLoading2","inputref","companyMission","companyDescription","companyWebsite","streetAddress2","setProfileInfo","getTruncatedCoordinate","coordinate","slice","getProfile","useCallback","showEditFields","setShowEditFields","updateErrors","setUpdateErrors","handleConfirm","String","CompanyDashboard","asterisk","ref","download","profileImage","breadcrumbs","companyProjectCards","down","cardText","deadline","addProject","media","cardAction","CompanyProject","companyProjects","setCompanyProjects","Breadcrumbs","CardActionArea","cardActionArea","CardMedia","AvatarImage","CardActions","is_published","dialogTitle","disply","minWidth","dataGrid","maxHeight","overflowY","accordionContainer","accordionDetails","heading","MyDataGrid","styled","DataGrid","CompanyProjectTeam","teamMembers","setTeamMembers","teamMembersDelta","setTeamMembersDelta","getSavedStudents","team","showEditFieldsTemp","member","columns","field","headerName","renderCell","sortable","disableColumnMenu","student_name","num","project_preference_for_student","sortComparator","v1","v2","param1","param2","expandIcon","cellClassName","obj","filterValue","reduce","acc","val","handleDelete","autoPageSize","customTabRoot","customTabIndicator","tabs","active_tab","default_tab","textForm","tabsPanel","selectProjectType","selectCompanySkills","tabsItem","iconList","information","iconListGrid","deleteButton","TabPanel","other","hidden","a11yProps","setValue","openDeleteDialog","setOpenDeleteDialog","handleCloseDeleteDialog","updateSuccess","setUpdateSuccess","company_project_image","company_project_skill","company_project_team_capacity","company_project_students_selected","companyEdit","showCompanyEdit","companyInput","setCompanyInput","handleOpenEdit","handleCloseUpdateSucess","handleCancel","Tabs","newValue","centered","indicator","Tab","onFocus","setSelectionRange","onKeyDown","goBack","addCompanyProjectFields","CompanyProjectCreate","saveToDB","saveProfileContainer","containerTitle","SaveStudent","studentId","Id","companyProjectsToShow","setCompanyProjectsToShow","saveStudent","setSaveStudent","addSuccess","setAddSuccess","addFailed","setAddFailed","nameProjectToSave","setNameProjectToSave","handleCloseAddSucess","handleCloseAddFailed","getCompanyProjects","savedProjects","all","spread","companyProjectsRes","savedProjectsRes","sp","projectsToShow","element","test","capsLightLabel","projectDetails","starIcon","projectsContainer","projectTitle","StudentDetailed","setStudent","studentProjects","setStudentProjects","getStudent","studentRes","studentProjectRes","verticalElementSubtitle","StudentsList","studentsList","SearchButton","KeywordSearch","zipCode","MajorSearch","DegreeSearch","SkillSearch","chipRoot","ButtonHelp","CompanySearch","setStudentsList","degree_level","handleClick","JSON","stringify","parse","chipToDelete","newList","Tooltip","CompanyRoutes","CompanyMenu","exportButton","exportText","StyledTableRow","withStyles","hover","TableRow","StyledTableCell","head","common","white","TableCell","useStyles1","flexShrink","TablePaginationActions","useTheme","count","page","rowsPerPage","onChangePage","Math","ceil","max","AdminMatchingTable","matchingList","setPage","setRowsPerPage","filename","TableContainer","Table","stickyHeader","table","TableHead","TableBody","TableFooter","TablePagination","rowsPerPageOptions","colSpan","SelectProps","newPage","onChangeRowsPerPage","ActionsComponent","reportBackground","preferenceSearch","childGrid","AdminProfile","responsiveFontSizes","reportInput","setReportInput","ReplacePreferences","preferences","0","1","2","3","studentPreference","companyPreference","setMatchingList","companyNameList","setCompanyNameList","parentGrid","MAP_VIEW","MapView","repeat","INITIAL_VIEW_STATE","longitude","latitude","zoom","maxZoom","pitch","bearing","getTooltip","object","html","phone","AdminMap","iconMapping","locationIconMapping","iconAtlas","locationIconAtlas","setData","layerProps","pickable","getPosition","d","parseFloat","layer","IconLayer","getIcon","sizeUnits","sizeScale","sizeMinPixels","layers","views","initialViewState","controller","useDevicePixels","reuseMaps","mapStyle","mapboxApiAccessToken","preventStyleDiffing","AdminStudentView","AdminCompanyView","AdminCompanyProjects","AdminRoutes","AdminMenu","menuButton","appBar","drawer","drawerPaper","drawerContainer","overflow","Logout","toolbar","mixins","rightToolbar","Dashboard","mobileOpen","setMobileOpen","handleDrawerToggle","logout","clear","userOptions","menu","routes","admin_first_name","admin_last_name","p","Hidden","smUp","implementation","Drawer","anchor","ModalProps","xsDown","stepper","buttons","FirstStep","handleNext","handleBack","issue_summary","formErrors","isValid","backButton","SecondStep","contact_phone","firstName","lastName","grid","Confirm","disablePadding","box","Success","isText","RegExp","isEmail","isPhone","ReportBug","labels","fieldsValidation","minLength","activeStep","setActiveStep","formValues","setFormValues","setFormErrors","prev","schema","formValidation","Stepper","alternativeLabel","Step","StepLabel","step","handleSteps","details","cover","minHeight","MediaControlCard","ProtectedRoute","Component","rest","from","location","App","Signup","AboutDevelopers","customTheme","defaults","baseURL","ReactDOM","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.951b3727.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CompanyDashboard.51c962f8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/UHLogo.ab32729f.png\";","module.exports = __webpack_public_path__ + \"static/media/HomePageBackground.fe587f5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/LoginBackground.f8d53424.jpg\";","module.exports = __webpack_public_path__ + \"static/media/StudentDashboard.bbbefee8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image.882dccfd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/location-icon-atlas.37932833.png\";","import React from \"react\";\r\nimport { AppBar, Toolbar, Button, Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport UHLogo from \"../../assets/UHLogo.png\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  logo: {\r\n    objectFit: \"contain\",\r\n    width: \"70px\",\r\n    float: \"left\",\r\n    height: \"70px\",\r\n  },\r\n  AppBar: {\r\n    background: \"rgba(200,16,46,1)\",\r\n    display: \"flex\",\r\n    width: \"98%\",\r\n    borderRadius: \"10px\",\r\n    margin: \"10px 10px 10px 10px\",\r\n  },\r\n  Login: {\r\n    objectFit: \"contain\",\r\n  },\r\n  SignUp: {\r\n    objectFit: \"contain\",\r\n  },\r\n}));\r\n\r\nexport default function Navbar() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  //Check if token exists\r\n  const isLoggedIn = () => {\r\n    if (localStorage.getItem(\"token\") && localStorage.getItem(\"slug\")) {\r\n      axios\r\n        .post(\"/token/refresh/\", {\r\n          refresh: localStorage.getItem(\"refresh\"),\r\n        })\r\n        .then((res) => {\r\n          //Got new access token.\r\n          localStorage.setItem(\"token\", res.data.access);\r\n          setTimeout(isLoggedIn, 17900 * 1000);\r\n          history.push(\"/dashboard\");\r\n        })\r\n        .catch((err) => {\r\n          history.push(\"/login\");\r\n        });\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <React.Fragment>\r\n        <AppBar className={classes.AppBar} position=\"fixed\">\r\n          <Toolbar>\r\n            <Grid item xs={11}>\r\n              <Link href=\"/\">\r\n                <img alt=\"uh logo\" className={classes.logo} src={UHLogo} />\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <AccountCircleIcon />\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                size=\"small\"\r\n                color=\"inherit\"\r\n                onClick={isLoggedIn}\r\n                className={classes.Login}\r\n              >\r\n                Login\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                size=\"small\"\r\n                color=\"inherit\"\r\n                className={classes.SignUp}\r\n                href=\"/signup\"\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </Grid>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" style={{ color: \"white\", fontWeight: \"bold\" }}>\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"http://scmatch.cs.uh.edu/\">\r\n        UHCS Consulting Clinic\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    // minHeight: \"60vh\",\r\n    width: \"100%\",\r\n    flex: \"1 0 auto\",\r\n  },\r\n  rootGrid: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    padding: \"1em\",\r\n    marginTop: \"auto\",\r\n    backgroundColor: \"#C8102E\",\r\n  },\r\n  footerRelated: {\r\n    color: \"#FFFFFF\",\r\n  },\r\n  footerText: {\r\n    color: \"#FFFFFF\",\r\n  },\r\n  image: {\r\n    width: \"50%\",\r\n    float: \"left\",\r\n    objectFit: \"contain\",\r\n  },\r\n}));\r\n\r\nexport default function Footer() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <footer className={classes.footer}>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-around\"\r\n          alignItems=\"center\"\r\n          spacing={4}\r\n          className={classes.rootGrid}\r\n        >\r\n          <Grid item xs={3}>\r\n            <img\r\n              className={classes.image}\r\n              alt=\"\"\r\n              src=\"https://uh.edu/marcom/_images/brand/logo-uh-primary-black.svg\"\r\n            ></img>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Link\r\n              to=\"/developers\"\r\n              href=\"/developers\"\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <Typography variant=\"body1\" className={classes.footerText}>\r\n                About the Developers\r\n              </Typography>\r\n            </Link>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Link\r\n              to=\"/report-bug\"\r\n              href=\"/report-bug\"\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <Typography variant=\"body1\" className={classes.footerRelated}>\r\n                Report an Issue\r\n              </Typography>\r\n            </Link>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Copyright />\r\n          </Grid>\r\n        </Grid>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Navbar from \"../../components/Navbar/Navbar\";\r\nimport Background from \"../../assets/HomePageBackground.jpg\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nimport Footer from \"../../components/Footer/Footer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    textAlign: \"center\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flex: \"1 0 auto\"\r\n  },\r\n  text: {\r\n    position: \"relative\",\r\n    paddingTop: \"200px\",\r\n  },\r\n  title_1: {\r\n    color: \"black\",\r\n    letterSpacing: \"1px\"\r\n  },\r\n  title_2: {\r\n    color: \"rgba(200,16,46,1)\",\r\n    letterSpacing: \"1px\"\r\n  },\r\n  content: {\r\n    fontFamily: \"Lato\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"900\",\r\n    color: \"white\",\r\n    textShadow: \"1px 1px 5px #C8102E\",\r\n  },\r\n}));\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n  const theme = createMuiTheme();\r\n  const background = {\r\n    imageUrl: {\r\n      backgroundImage: `url(${Background})`,\r\n      backgroundPosition: \"center\",\r\n      backgroundSize: \"cover\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      height: \"100vh\",\r\n      width: \"100%\"\r\n    },\r\n  };\r\n  theme.typography.h3 = {\r\n    fontSize: \"1.4rem\",\r\n    \"@media (min-width:400px)\": {\r\n      fontSize: \"1.4rem\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      fontSize: \"2rem\",\r\n    },\r\n  };\r\n  return (\r\n    <div>\r\n      <React.Fragment>\r\n        <Grid\r\n          style={background.imageUrl}\r\n          item\r\n          xs={12}\r\n          className={classes.root}\r\n          component=\"main\">\r\n          <Navbar />\r\n          <div className={classes.text}>\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                className={classes.title_1}\r\n                display=\"inline\"\r\n                variant=\"h2\">\r\n                Welcome to\r\n              </Typography>\r\n              <Typography\r\n                className={classes.title_2}\r\n                display=\"inline\"\r\n                variant=\"h2\">\r\n                &nbsp;FutureStart\r\n              </Typography>\r\n            </Grid>\r\n            <br />\r\n            <Grid item xs={12}>\r\n              <Typography className={classes.content} xs={6} variant=\"h5\">\r\n                Apply for jobs using FutureStart. Get in touch with 1000's of\r\n              </Typography>\r\n              <Typography className={classes.content} xs={6} variant=\"h5\">\r\n                companies. Take the next step for your future\r\n              </Typography>\r\n            </Grid>\r\n          </div>\r\n          <Footer />\r\n        </Grid>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport loginbackground from \"../../assets/LoginBackground.jpg\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: `url(${loginbackground})`,\r\n    backgroundSize: \"cover\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  loginAlert: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst getNewToken = () => {\r\n  let token = localStorage.getItem(\"token\");\r\n  if (token) {\r\n    axios\r\n      .post(\"/token/refresh/\", {\r\n        refresh: localStorage.getItem(\"refresh\"),\r\n      })\r\n      .then((res) => {\r\n        localStorage.setItem(\"token\", res.data.access);\r\n        setTimeout(getNewToken, 17900 * 1000); //Get new token approxiamtey every 4 hrs and 58 min.\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n};\r\n\r\nfunction Login() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [loginInfo, setLoginInfo] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setLoginInfo({\r\n      ...loginInfo,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\"/token/\", loginInfo)\r\n      .then((res) => {\r\n        localStorage.setItem(\"token\", res.data.access);\r\n        localStorage.setItem(\"role_id\", res.data.role_id);\r\n        localStorage.setItem(\"email_id\", res.data.email_id);\r\n        localStorage.setItem(\"refresh\", res.data.refresh);\r\n        setTimeout(getNewToken, 17900 * 1000); //Get new token approxiamtey every 4 hrs and 58 min.\r\n        if (res.data.slug) {\r\n          console.log(\"Inside Login: \", res);\r\n          localStorage.setItem(\"slug\", res.data.slug);\r\n          history.push(\"/dashboard\");\r\n        } else {\r\n          history.push(\"/accountInfo\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setError(\r\n          err.response.data.detail +\r\n            \". Make sure your email and password is correct.\"\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            {error ? (\r\n              <Alert\r\n                className={classes.loginAlert}\r\n                variant=\"filled\"\r\n                severity=\"error\"\r\n              >\r\n                {error}\r\n              </Alert>\r\n            ) : null}\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={login}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                onChange={handleChange}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.submit}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Grid container justify=\"space-between\">\r\n                {/* <Grid item xs>\r\n                    <Link href=\"#\" variant=\"body2\">\r\n                      Forgot password?\r\n                    </Link>\r\n                  </Grid> */}\r\n                <Grid item>\r\n                  <Link to=\"/signup\" href=\"signup\" variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link\r\n                    to=\"/lost-password\"\r\n                    href=\"lost-password\"\r\n                    variant=\"body2\"\r\n                  >\r\n                    {\"Forgot Password?\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n              <Box mt={5}></Box>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function ResetPassword({ setValidEmail }) {\r\n  const classes = useStyles();\r\n\r\n  //takes in user email input\r\n  const [emailInput, setEmailInput] = useState({\r\n    email: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  //handleClick when user clicks on RequestResetCode button\r\n  const handleClickResetRequest = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\"/user_accounts/request_reset_email\", emailInput)\r\n      .then((res) => {\r\n        if (res.data.error) {\r\n          setError(res.data.error);\r\n        } else {\r\n          setEmailInput(res.data);\r\n          console.log(res.data);\r\n          setValidEmail(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setError(\r\n          \"Oops! Be sure to enter an existing email registered on FutureStart. Try again\"\r\n        );\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Forgot your password?\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Typography>\r\n            Enter your e-mail address and we'll send you a code to reset your\r\n            password\r\n          </Typography>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={(e) => {\r\n              setEmailInput({ ...emailInput, email: e.target.value });\r\n            }}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.submit}\r\n            onClick={handleClickResetRequest}\r\n          >\r\n            Request Reset Code\r\n          </Button>\r\n          {error ? (\r\n            <Alert\r\n              className={classes.loginAlert}\r\n              variant=\"filled\"\r\n              severity=\"error\"\r\n            >\r\n              {error}\r\n            </Alert>\r\n          ) : null}\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link to=\"/login\" href=\"login\" variant=\"body2\">\r\n                {\"Remember your password? Try signing in\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// import { getConfig } from \"../../authConfig\";\r\n\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(5),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function ResetPasswordTwo() {\r\n  const classes = useStyles();\r\n\r\n  //takes in the input from the user\r\n  const [resetInput, setResetInput] = useState({\r\n    code: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n\r\n  //splits the reset code for the Uid\r\n  const getSplitUid = (code) => {\r\n    if (code !== \"\") {\r\n      const res = code.split(\"/\");\r\n      return res[0];\r\n    }\r\n    return null;\r\n  };\r\n\r\n  //split the reset code for the token\r\n  const getSplitToken = (code) => {\r\n    if (code !== \"\") {\r\n      const res = code.split(\"/\");\r\n      return res[1];\r\n    }\r\n    return null;\r\n  };\r\n\r\n  //error can occur if user inputs wrong ResetCode or, new passwords don't match\r\n  const [error, setError] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  const resetPassword = (e) => {\r\n    //error is password & confirm_password do not match\r\n    if (resetInput.password !== resetInput.confirm_password) {\r\n      setError(\"Passwords do not match. Try again\");\r\n    } else {\r\n      setError(\"\");\r\n\r\n      const data = {\r\n        token: getSplitToken(resetInput.code),\r\n        uidb64: getSplitUid(resetInput.code),\r\n        password: resetInput.password,\r\n        confirm_password: resetInput.confirm_password,\r\n      };\r\n\r\n      console.log(data);\r\n      axios\r\n        .patch(\"/user_accounts/password_reset_complete\", data)\r\n        .then((res) => {\r\n          if (res.data.error) {\r\n            setError(res.data.error);\r\n          } else {\r\n            console.log(res.data);\r\n            history.push(\"/login\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setError(\"Error! Unable to reset password\");\r\n          console.log(err);\r\n        });\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          New Password\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={resetPassword}>\r\n          <Typography>\r\n            Enter the unique code given on the reset email to create a new\r\n            password\r\n          </Typography>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"token\"\r\n            label=\"Reset Code\"\r\n            name=\"reset code\"\r\n            autoComplete=\"token\"\r\n            autoFocus\r\n            onChange={(e) => {\r\n              setResetInput({ ...resetInput, code: e.target.value });\r\n            }}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"newPassword\"\r\n            label=\"New Password\"\r\n            name=\"newPassword\"\r\n            autoComplete=\"newPassword\"\r\n            autoFocus\r\n            onChange={(e) => {\r\n              setResetInput({ ...resetInput, password: e.target.value });\r\n            }}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"confirmPassword\"\r\n            label=\"Confirm Password\"\r\n            name=\"confirmPassword\"\r\n            autoComplete=\"confirmPassword\"\r\n            autoFocus\r\n            onChange={(e) => {\r\n              setResetInput({\r\n                ...resetInput,\r\n                confirm_password: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.submit}\r\n          >\r\n            RESET PASSWORD\r\n          </Button>\r\n          {error ? (\r\n            <Alert variant=\"filled\" severity=\"error\">\r\n              {error}\r\n            </Alert>\r\n          ) : null}\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link to=\"/login\" href=\"login\" variant=\"body2\">\r\n                {\"Remember your password? Try signing in\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport ResetPassword from \"./ResetPassword\";\r\nimport ResetPasswordTwo from \"./ResetPasswordTwo\";\r\n\r\nexport default function ResetPage() {\r\n  const [validEmail, setValidEmail] = useState(false);\r\n\r\n  return !validEmail ? (\r\n    <ResetPassword setValidEmail={setValidEmail} />\r\n  ) : (\r\n    <ResetPasswordTwo />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@material-ui/core/\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  alert: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const [signUpInfo, setSignUpInfo] = useState({\r\n    email: \"\",\r\n    role_id: \"\",\r\n    password1: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setSignUpInfo({ ...signUpInfo, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  let history = useHistory();\r\n  const signUp = (e) => {\r\n    const len = signUpInfo.email.length;\r\n    const domain = signUpInfo.email.substring(len - 6); //must be @uh.edu\r\n\r\n    if (signUpInfo.role_id === \"\") {\r\n      setError(\"Please select an account type\");\r\n    } else if (signUpInfo.role_id === \"0\" && domain !== \"uh.edu\") {\r\n      setError('You must use a \"username@uh.edu email\" for a student account');\r\n    } else {\r\n      setError(\"\");\r\n      axios\r\n        .post(\"/user_accounts/signup\", signUpInfo)\r\n        .then((res) => {\r\n          if (res.data.error) {\r\n            setError(res.data.error);\r\n          } else {\r\n            //authenticate again after the user is created\r\n            const email = signUpInfo.email;\r\n            const password = signUpInfo.password1;\r\n            axios.post(\"/token/\", { email, password }).then((res) => {\r\n              localStorage.setItem(\"token\", res.data.access);\r\n              localStorage.setItem(\"role_id\", res.data.role_id);\r\n              localStorage.setItem(\"email_id\", res.data.email_id);\r\n              history.push(\"/accountInfo\");\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      {error ? (\r\n        <Alert className={classes.alert} variant=\"filled\" severity=\"error\">\r\n          {error}\r\n        </Alert>\r\n      ) : null}\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={signUp}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password1\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password2\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                id=\"confirm-password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl>\r\n                <FormLabel>Choose account type</FormLabel>\r\n                <RadioGroup\r\n                  className={classes.radio}\r\n                  aria-label=\"account_type\"\r\n                  name=\"role_id\"\r\n                  row\r\n                  color=\"secondary\"\r\n                  onChange={handleChange}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"0\"\r\n                    control={<Radio />}\r\n                    label=\"Student\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"1\"\r\n                    control={<Radio />}\r\n                    label=\"Company\"\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","export const getConfig = () => {\r\n  return {\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n  };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Divider,\r\n  Button,\r\n  RadioGroup,\r\n  Radio,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { getConfig } from \"../../authConfig\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: theme.spacing(7),\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(6),\r\n    justifyContent: \"center\",\r\n  },\r\n  formControl: {\r\n    width: \"100%\",\r\n  },\r\n  checkLabel: {\r\n    color: theme.palette.secondary,\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst CompanyInfo = () => {\r\n  const states = [\r\n    \"AL\",\r\n    \"AK\",\r\n    \"AZ\",\r\n    \"AR\",\r\n    \"CA\",\r\n    \"CO\",\r\n    \"CT\",\r\n    \"DE\",\r\n    \"DC\",\r\n    \"FL\",\r\n    \"GA\",\r\n    \"HI\",\r\n    \"ID\",\r\n    \"IL\",\r\n    \"IN\",\r\n    \"IA\",\r\n    \"KS\",\r\n    \"KY\",\r\n    \"LA\",\r\n    \"ME\",\r\n    \"MD\",\r\n    \"MA\",\r\n    \"MI\",\r\n    \"MN\",\r\n    \"MS\",\r\n    \"MO\",\r\n    \"MT\",\r\n    \"NE\",\r\n    \"NV\",\r\n    \"NH\",\r\n    \"NJ\",\r\n    \"NM\",\r\n    \"NY\",\r\n    \"NC\",\r\n    \"ND\",\r\n    \"OH\",\r\n    \"OK\",\r\n    \"OR\",\r\n    \"PA\",\r\n    \"RI\",\r\n    \"SC\",\r\n    \"SD\",\r\n    \"TN\",\r\n    \"TX\",\r\n    \"UT\",\r\n    \"VT\",\r\n    \"VA\",\r\n    \"WA\",\r\n    \"WV\",\r\n    \"WI\",\r\n    \"WY\",\r\n  ];\r\n  let history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  const [firstStep, setFirstStep] = useState(true);\r\n  const [disable, setDisable] = useState(false);\r\n\r\n  const [companyFirst, setCompanyFirst] = useState({\r\n    name: \"\",\r\n    industryType: \"\",\r\n    phoneNumber: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    zip: \"\",\r\n    mailingAddress: \"\",\r\n    city2: \"\",\r\n    state2: \"\",\r\n    zip2: \"\",\r\n    checkedAddress: false,\r\n    contact_email: \"\",\r\n    isSolo: \"\",\r\n  });\r\n\r\n  const [errorsFirst, setErrorsFirst] = useState({});\r\n  const [errorsSecond, setErrorsSecond] = useState({});\r\n\r\n  const [companySecond, setCompanySecond] = useState({\r\n    companyRep: \"\",\r\n    companyType: \"\",\r\n    website: \"\",\r\n    mission: \"\",\r\n    description: \"\",\r\n  });\r\n  //api for select IndustryType\r\n  const [industryTypes, setIndustryTypes] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/company_profile/list_industry_type\", getConfig())\r\n      .then((res) => {\r\n        const data = res.data.industry_type.map((item, index) => {\r\n          return {\r\n            label: item,\r\n            value: index,\r\n          };\r\n        });\r\n        setIndustryTypes(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const handleChangeFirst = (e) => {\r\n    setCompanyFirst({\r\n      ...companyFirst,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChangeSecond = (e) => {\r\n    setCompanySecond({\r\n      ...companySecond,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const checkMailingAddress = () => {\r\n    if (companyFirst.checkedAddress === true) {\r\n      setCompanyFirst({\r\n        ...companyFirst,\r\n        checkedAddress: false,\r\n      });\r\n      setDisable(!disable);\r\n    } else {\r\n      setCompanyFirst({\r\n        ...companyFirst,\r\n        checkedAddress: true,\r\n      });\r\n      setDisable(!disable);\r\n    }\r\n  };\r\n\r\n  const getAddress = (values) => {\r\n    if (values.address && values.city && values.state) {\r\n      return `${values.address}|${values.city}|${values.state}`;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const getMailingAddress = (values) => {\r\n    if (values.mailingAddress && values.city2 && values.state2) {\r\n      return `${values.mailingAddress}|${values.city2}|${values.state2}`;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const nextStep = () => {\r\n    setErrorsFirst({\r\n      name: companyFirst.name === \"\" ? \"Required\" : null,\r\n      industryType: companyFirst.industryType === \"\" ? \"Required\" : null,\r\n      phoneNumber: companyFirst.phoneNumber === \"\" ? \"Required\" : null,\r\n      address: companyFirst.address === \"\" ? \"Required\" : null,\r\n      city: companyFirst.city === \"\" ? \"Required\" : null,\r\n      state: companyFirst.state === \"\" ? \"Required\" : null,\r\n      zip: companyFirst.zip === \"\" ? \"Required\" : null,\r\n      mailingAddress: companyFirst.checkedAddress\r\n        ? null\r\n        : companyFirst.mailingAddress === \"\"\r\n        ? \"Required\"\r\n        : null,\r\n      city2: companyFirst.checkedAddress\r\n        ? null\r\n        : companyFirst.city2 === \"\"\r\n        ? \"Required\"\r\n        : null,\r\n      state2: companyFirst.checkedAddress\r\n        ? null\r\n        : companyFirst.state2 === \"\"\r\n        ? \"Required\"\r\n        : null,\r\n      zip2: companyFirst.checkedAddress\r\n        ? null\r\n        : companyFirst.zip2 === \"\"\r\n        ? \"Required\"\r\n        : null,\r\n      contact_email: companyFirst.contact_email === \"\" ? \"Required\" : null,\r\n      isSolo: companyFirst.isSolo === \"\" ? \"Please select one\" : null,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setErrorsSecond({\r\n      companyRep: companySecond.companyRep === \"\" ? \"Required\" : null,\r\n      companyType: companySecond.companyType === \"\" ? \"Required\" : null,\r\n      mission: companySecond.mission === \"\" ? \"Required\" : null,\r\n      description: companySecond.description === \"\" ? \"Required\" : null,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.entries(errorsFirst).length !== 0) {\r\n      let errorExists = false;\r\n      Object.keys(errorsFirst).forEach((key) => {\r\n        if (errorsFirst[key] !== null) {\r\n          errorExists = true;\r\n        }\r\n      });\r\n      if (errorExists) {\r\n        setFirstStep(true);\r\n      } else {\r\n        setFirstStep(false);\r\n      }\r\n    }\r\n  }, [errorsFirst]);\r\n\r\n  useEffect(() => {\r\n    if (Object.entries(errorsSecond).length !== 0) {\r\n      let errorExists = false;\r\n      Object.keys(errorsSecond).forEach((key) => {\r\n        if (errorsSecond[key] !== null) {\r\n          errorExists = true;\r\n        }\r\n      });\r\n      if (!errorExists) {\r\n        let address = `${companyFirst.address}, ${companyFirst.city}, ${companyFirst.state} ${companyFirst.company_zip} `;\r\n        let token =\r\n          \"pk.eyJ1Ijoicm9oaXRzaGFyZGhhIiwiYSI6ImNrajIxcWVxaTIyZWgycXF0NWwxMG9wMTMifQ.NuOk3LeRP5b5Gvtso3MFrg\";\r\n        axios\r\n          .get(\r\n            `https://api.mapbox.com/geocoding/v5/mapbox.places/${address}.json?access_token=${token}`,\r\n            getConfig()\r\n          )\r\n\r\n          .then((response) => {\r\n            const data = {\r\n              company_name: companyFirst.name,\r\n              company_phone_no: companyFirst.phoneNumber,\r\n              industry_type: companyFirst.industryType,\r\n              company_contact_email: companyFirst.contact_email,\r\n              company_zip: companyFirst.zip,\r\n              representative_name: companySecond.companyRep,\r\n              company_representative_type: parseInt(companyFirst.isSolo),\r\n              company_type: parseInt(companySecond.companyType),\r\n              company_address: getAddress(companyFirst),\r\n              mailing_address: companyFirst.checkedAddress\r\n                ? getAddress(companyFirst)\r\n                : getMailingAddress(companyFirst),\r\n              mailing_zip: companyFirst.checkedAddress\r\n                ? companyFirst.zip\r\n                : companyFirst.zip2,\r\n              company_website: companySecond.website,\r\n              company_mission: companySecond.mission,\r\n              company_description: companySecond.description,\r\n              company_latitude:\r\n                response.data.features[0].geometry.coordinates[1],\r\n              company_longitude:\r\n                response.data.features[0].geometry.coordinates[0],\r\n              username: localStorage.getItem(\"email_id\"),\r\n            };\r\n            axios\r\n              .post(\"/company_profile/create\", data, getConfig())\r\n              .then((res) => {\r\n                localStorage.setItem(\"slug\", res.data.slug);\r\n                history.push(\"/dashboard\");\r\n              });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [errorsSecond]);\r\n\r\n  const goBack = () => {\r\n    setFirstStep(true);\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxwidth=\"xs\">\r\n      <div className={classes.root}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Company Account Information\r\n        </Typography>\r\n        <Divider />\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          {firstStep === true ? (\r\n            <>\r\n              <Grid\r\n                container\r\n                id=\"master\"\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                spacing={2}\r\n                alignItems=\"flex-start\"\r\n              >\r\n                {/* Left Grid */}\r\n                <Grid\r\n                  container\r\n                  id=\"first-left\"\r\n                  item\r\n                  xs={12}\r\n                  md={6}\r\n                  spacing={3}\r\n                  direction=\"column\"\r\n                >\r\n                  <Grid item>\r\n                    <TextField\r\n                      error={errorsFirst.name && companyFirst.name === \"\"}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      id=\"name\"\r\n                      label=\"Company Name\"\r\n                      name=\"name\"\r\n                      onChange={handleChangeFirst}\r\n                      value={companyFirst.name}\r\n                      inputProps={{ maxLength: 50 }}\r\n                    />\r\n                    {errorsFirst.name && companyFirst.name === \"\" ? (\r\n                      <FormHelperText\r\n                        error={errorsFirst.name && companyFirst.name === \"\"}\r\n                      >\r\n                        {errorsFirst.name}\r\n                      </FormHelperText>\r\n                    ) : null}\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <FormControl\r\n                      error={\r\n                        errorsFirst.industryType &&\r\n                        companyFirst.industryType === \"\"\r\n                      }\r\n                      variant=\"outlined\"\r\n                      className={classes.formControl}\r\n                    >\r\n                      <InputLabel>Industry Type</InputLabel>\r\n                      <Select\r\n                        label=\"Industry Type\"\r\n                        value={companyFirst.industryType}\r\n                        onChange={handleChangeFirst}\r\n                        name=\"industryType\"\r\n                      >\r\n                        {industryTypes.map((item) => (\r\n                          <MenuItem key={item.label} value={item.label}>\r\n                            {item.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n\r\n                      {errorsFirst.industryType &&\r\n                      companyFirst.industryType === \"\" ? (\r\n                        <FormHelperText>\r\n                          {errorsFirst.industryType}\r\n                        </FormHelperText>\r\n                      ) : null}\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      error={\r\n                        errorsFirst.contact_email &&\r\n                        companyFirst.contact_email === \"\"\r\n                      }\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      id=\"contact_email\"\r\n                      label=\"Contact Email\"\r\n                      name=\"contact_email\"\r\n                      onChange={handleChangeFirst}\r\n                      value={companyFirst.contact_email}\r\n                      inputProps={{ maxLength: 50 }}\r\n                    />\r\n                    {errorsFirst.contact_email &&\r\n                    companyFirst.contact_email === \"\" ? (\r\n                      <FormHelperText\r\n                        error={\r\n                          errorsFirst.contact_email &&\r\n                          companyFirst.contact_email === \"\"\r\n                        }\r\n                      >\r\n                        {errorsFirst.contact_email}\r\n                      </FormHelperText>\r\n                    ) : null}\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      error={\r\n                        (errorsFirst.phoneNumber &&\r\n                          companyFirst.phoneNumber === \"\") ||\r\n                        errorsFirst.phoneNumber === \"Enter valid Phone Number\"\r\n                      }\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      id=\"phoneNumber\"\r\n                      label=\"Phone Number\"\r\n                      name=\"phoneNumber\"\r\n                      onChange={handleChangeFirst}\r\n                      value={companyFirst.phoneNumber}\r\n                      inputProps={{ maxLength: 10 }}\r\n                    />\r\n                    {errorsFirst.phoneNumber &&\r\n                    companyFirst.phoneNumber === \"\" ? (\r\n                      <FormHelperText\r\n                        error={\r\n                          errorsFirst.phoneNumber &&\r\n                          companyFirst.phoneNumber === \"\"\r\n                        }\r\n                      >\r\n                        {errorsFirst.phoneNumber}\r\n                      </FormHelperText>\r\n                    ) : null}\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography>Is this a one person company?</Typography>\r\n                    <FormControl\r\n                      error={errorsFirst.isSolo && companyFirst.isSolo === \"\"}\r\n                      variant=\"outlined\"\r\n                      className={classes.formControl}\r\n                    >\r\n                      <RadioGroup\r\n                        aria-label=\"Are you single member company\"\r\n                        name=\"isSolo\"\r\n                        value={companyFirst.isSolo}\r\n                        onChange={handleChangeFirst}\r\n                      >\r\n                        <FormControlLabel\r\n                          value=\"1\"\r\n                          control={<Radio />}\r\n                          label=\"Yes (1)\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"0\"\r\n                          control={<Radio />}\r\n                          label=\"No (>=2)\"\r\n                        />\r\n                      </RadioGroup>\r\n                      {errorsFirst.isSolo && companyFirst.isSolo === \"\" ? (\r\n                        <FormHelperText>{errorsFirst.isSolo}</FormHelperText>\r\n                      ) : null}\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                {/* COLUMN2------------------------------------- */}\r\n                <Grid\r\n                  container\r\n                  id=\"first-right\"\r\n                  item\r\n                  xs={12}\r\n                  md={6}\r\n                  spacing={3}\r\n                  direction=\"column\"\r\n                >\r\n                  <Grid item>\r\n                    <TextField\r\n                      error={errorsFirst.address && companyFirst.address === \"\"}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      id=\"address\"\r\n                      label=\"Company Address\"\r\n                      name=\"address\"\r\n                      onChange={handleChangeFirst}\r\n                      value={companyFirst.address}\r\n                      inputProps={{ maxLength: 40 }}\r\n                    />\r\n                    {errorsFirst.address && companyFirst.address === \"\" ? (\r\n                      <FormHelperText\r\n                        error={\r\n                          errorsFirst.address && companyFirst.address === \"\"\r\n                        }\r\n                      >\r\n                        {errorsFirst.address}\r\n                      </FormHelperText>\r\n                    ) : null}\r\n                  </Grid>\r\n                  <Grid\r\n                    container\r\n                    id=\"address-container-1\"\r\n                    item\r\n                    direction=\"row\"\r\n                    spacing={4}\r\n                  >\r\n                    <Grid item xs={7}>\r\n                      <TextField\r\n                        error={errorsFirst.city && companyFirst.city === \"\"}\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        id=\"city\"\r\n                        label=\"City\"\r\n                        name=\"city\"\r\n                        onChange={handleChangeFirst}\r\n                        value={companyFirst.city}\r\n                        inputProps={{ maxLength: 20 }}\r\n                      />\r\n                      {errorsFirst.city && companyFirst.city === \"\" ? (\r\n                        <FormHelperText\r\n                          error={errorsFirst.city && companyFirst.city === \"\"}\r\n                        >\r\n                          {errorsFirst.address}\r\n                        </FormHelperText>\r\n                      ) : null}\r\n                    </Grid>\r\n                    <Grid item xs={5}>\r\n                      <FormControl\r\n                        error={errorsFirst.state && companyFirst.state === \"\"}\r\n                        variant=\"outlined\"\r\n                        className={classes.formControl}\r\n                      >\r\n                        <InputLabel>ST</InputLabel>\r\n                        <Select\r\n                          value={companyFirst.state}\r\n                          onChange={handleChangeFirst}\r\n                          id=\"state\"\r\n                          name=\"state\"\r\n                        >\r\n                          {states.map((state) => (\r\n                            <MenuItem value={state} key={state}>\r\n                              {state}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                        {errorsFirst.state && companyFirst.state === \"\" ? (\r\n                          <FormHelperText>{errorsFirst.state}</FormHelperText>\r\n                        ) : null}\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={7}>\r\n                      <TextField\r\n                        error={errorsFirst.zip && companyFirst.zip === \"\"}\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        id=\"zip\"\r\n                        label=\"Zipcode\"\r\n                        name=\"zip\"\r\n                        onChange={handleChangeFirst}\r\n                        value={companyFirst.zip}\r\n                        inputProps={{ maxLength: 5 }}\r\n                      />\r\n                      {errorsFirst.zip && companyFirst.zip === \"\" ? (\r\n                        <FormHelperText\r\n                          error={errorsFirst.zip && companyFirst.zip === \"\"}\r\n                        >\r\n                          {errorsFirst.zip}\r\n                        </FormHelperText>\r\n                      ) : null}\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <FormControlLabel\r\n                      className={classes.checkLabel}\r\n                      value={!disable}\r\n                      control={\r\n                        <Checkbox\r\n                          name=\"checkedAddress\"\r\n                          color=\"secondary\"\r\n                          onChange={checkMailingAddress}\r\n                          checked={companyFirst.checkedAddress}\r\n                        />\r\n                      }\r\n                      label=\"Mailing address same as company Address\"\r\n                      labelPlacement=\"end\"\r\n                    />\r\n                    <TextField\r\n                      error={\r\n                        errorsFirst.mailingAddress &&\r\n                        !companyFirst.checkedAddress &&\r\n                        companyFirst.mailingAddress === \"\"\r\n                      }\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      id=\"mailingAddress\"\r\n                      label=\"Mailing Address\"\r\n                      name=\"mailingAddress\"\r\n                      disabled={disable}\r\n                      onChange={handleChangeFirst}\r\n                      value={companyFirst.mailingAddress}\r\n                      inputProps={{ maxLength: 40 }}\r\n                    />\r\n                    {errorsFirst.mailingAddress &&\r\n                    !companyFirst.checkedAddress &&\r\n                    companyFirst.mailingAddress === \"\" ? (\r\n                      <FormHelperText\r\n                        error={\r\n                          errorsFirst.mailingAddress &&\r\n                          !companyFirst.checkedAddress &&\r\n                          companyFirst.mailingAddress === \"\"\r\n                        }\r\n                      >\r\n                        {errorsFirst.mailingAddress}\r\n                      </FormHelperText>\r\n                    ) : null}\r\n                  </Grid>\r\n                  <Grid\r\n                    container\r\n                    id=\"address-container-2\"\r\n                    item\r\n                    direction=\"row\"\r\n                    spacing={3}\r\n                  >\r\n                    <Grid item xs={7}>\r\n                      <TextField\r\n                        error={\r\n                          errorsFirst.city2 &&\r\n                          !companyFirst.checkedAddress &&\r\n                          companyFirst.city2 === \"\"\r\n                        }\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        id=\"city2\"\r\n                        label=\"City\"\r\n                        name=\"city2\"\r\n                        disabled={disable}\r\n                        onChange={handleChangeFirst}\r\n                        value={companyFirst.city2}\r\n                        inputProps={{ maxLength: 20 }}\r\n                      />\r\n                      {errorsFirst.city2 &&\r\n                      !companyFirst.checkedAddress &&\r\n                      companyFirst.city2 === \"\" ? (\r\n                        <FormHelperText\r\n                          error={\r\n                            errorsFirst.city2 &&\r\n                            !companyFirst.city2 &&\r\n                            companyFirst.city2 === \"\"\r\n                          }\r\n                        >\r\n                          {errorsFirst.city2}\r\n                        </FormHelperText>\r\n                      ) : null}\r\n                    </Grid>\r\n                    <Grid item xs={5}>\r\n                      <FormControl\r\n                        error={\r\n                          errorsFirst.state2 &&\r\n                          companyFirst.state2 === \"\" &&\r\n                          !companyFirst.checkedAddress\r\n                        }\r\n                        variant=\"outlined\"\r\n                        className={classes.formControl}\r\n                        disabled={disable}\r\n                      >\r\n                        <InputLabel>ST</InputLabel>\r\n                        <Select\r\n                          name=\"state2\"\r\n                          id=\"state2\"\r\n                          value={companyFirst.state2}\r\n                          onChange={handleChangeFirst}\r\n                        >\r\n                          {states.map((state) => (\r\n                            <MenuItem key={state} value={state}>\r\n                              {state}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                        {errorsFirst.state2 &&\r\n                        companyFirst.state2 === \"\" &&\r\n                        !companyFirst.checkedAddress ? (\r\n                          <FormHelperText>{errorsFirst.state2}</FormHelperText>\r\n                        ) : null}\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={7}>\r\n                      <TextField\r\n                        error={errorsFirst.zip2 && companyFirst.zip2 === \"\"}\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        disabled={disable}\r\n                        id=\"zip2\"\r\n                        label=\"Zipcode\"\r\n                        name=\"zip2\"\r\n                        onChange={handleChangeFirst}\r\n                        value={companyFirst.zip2}\r\n                        inputProps={{ maxLength: 5 }}\r\n                      />\r\n                      {errorsFirst.zip2 && companyFirst.zip2 === \"\" ? (\r\n                        <FormHelperText\r\n                          error={errorsFirst.zip2 && companyFirst.zip2 === \"\"}\r\n                        >\r\n                          {errorsFirst.zip2}\r\n                        </FormHelperText>\r\n                      ) : null}\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              {/* Bottom Buttons */}\r\n              <Grid container id=\"first-continer-buttons\" justify=\"flex-end\">\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.submit}\r\n                    onClick={nextStep}\r\n                    size=\"large\"\r\n                  >\r\n                    Continue\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                spacing={2}\r\n                justify=\"space-between\"\r\n                alignItems=\"flex-start\"\r\n              >\r\n                {/* Left part of form */}\r\n                <Grid\r\n                  container\r\n                  item\r\n                  id=\"second-left\"\r\n                  xs={12}\r\n                  md={6}\r\n                  direction=\"column\"\r\n                  spacing={3}\r\n                >\r\n                  <Grid item>\r\n                    <TextField\r\n                      error={\r\n                        errorsSecond.companyRep &&\r\n                        companySecond.companyRep === \"\"\r\n                      }\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      id=\"companyRep\"\r\n                      label=\"Organization Representative\"\r\n                      name=\"companyRep\"\r\n                      onChange={handleChangeSecond}\r\n                      value={companySecond.companyRep}\r\n                      inputProps={{ maxLength: 50 }}\r\n                    />\r\n                    {errorsSecond.companyRep &&\r\n                    companySecond.companyRep === \"\" ? (\r\n                      <FormHelperText\r\n                        error={\r\n                          errorsSecond.companyRep &&\r\n                          companySecond.companyRep === \"\"\r\n                        }\r\n                      >\r\n                        {errorsSecond.companyRep}\r\n                      </FormHelperText>\r\n                    ) : null}\r\n                  </Grid>\r\n                  <Grid item xs={12} md={4}>\r\n                    <FormControl\r\n                      error={\r\n                        errorsSecond.companyType &&\r\n                        companySecond.companyType === \"\"\r\n                      }\r\n                      variant=\"outlined\"\r\n                      className={classes.formControl}\r\n                    >\r\n                      <InputLabel>Company Type</InputLabel>\r\n                      <Select\r\n                        label=\"Company Type\"\r\n                        name=\"companyType\"\r\n                        id=\"companyType\"\r\n                        onChange={handleChangeSecond}\r\n                        value={companySecond.companyType}\r\n                      >\r\n                        <MenuItem value=\"1\">Private</MenuItem>\r\n                        <MenuItem value=\"2\">Non-Profit</MenuItem>\r\n                        <MenuItem value=\"0\">Social Business</MenuItem>\r\n                      </Select>\r\n                      {errorsSecond.companyRep &&\r\n                      companySecond.companyRep === \"\" ? (\r\n                        <FormHelperText>\r\n                          {errorsSecond.companyRep}\r\n                        </FormHelperText>\r\n                      ) : null}\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      id=\"website\"\r\n                      label=\"Company Website\"\r\n                      name=\"website\"\r\n                      placeholder=\"wwww.example.com\"\r\n                      onChange={handleChangeSecond}\r\n                      value={companySecond.website}\r\n                      inputProps={{ maxLength: 50 }}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                {/* Right part */}\r\n                <Grid\r\n                  container\r\n                  item\r\n                  id=\"second-right\"\r\n                  xs={12}\r\n                  md={6}\r\n                  direction=\"column\"\r\n                  spacing={3}\r\n                >\r\n                  <Grid item>\r\n                    <TextField\r\n                      error={\r\n                        errorsSecond.mission && companySecond.mission === \"\"\r\n                      }\r\n                      variant=\"outlined\"\r\n                      multiline\r\n                      rows={5}\r\n                      fullWidth\r\n                      id=\"mission\"\r\n                      helperText={`${companySecond.mission.length}/225`}\r\n                      label=\"Company Mission\"\r\n                      name=\"mission\"\r\n                      onChange={handleChangeSecond}\r\n                      value={companySecond.mission}\r\n                      inputProps={{ maxLength: 225 }}\r\n                    />\r\n                    {errorsSecond.mission && companySecond.mission === \"\" ? (\r\n                      <FormHelperText\r\n                        error={\r\n                          errorsSecond.mission && companySecond.mission === \"\"\r\n                        }\r\n                      >\r\n                        {errorsSecond.mission}\r\n                      </FormHelperText>\r\n                    ) : null}\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      error={\r\n                        errorsSecond.description &&\r\n                        companySecond.description === \"\"\r\n                      }\r\n                      variant=\"outlined\"\r\n                      multiline\r\n                      rows={5}\r\n                      fullWidth\r\n                      id=\"description\"\r\n                      label=\"Company Description\"\r\n                      name=\"description\"\r\n                      helperText={`${companySecond.description.length}/500`}\r\n                      onChange={handleChangeSecond}\r\n                      value={companySecond.description}\r\n                      inputProps={{ maxLength: 500 }}\r\n                    />\r\n                    {errorsSecond.description &&\r\n                    companySecond.description === \"\" ? (\r\n                      <FormHelperText\r\n                        error={\r\n                          errorsSecond.description &&\r\n                          companySecond.description === \"\"\r\n                        }\r\n                      >\r\n                        {errorsSecond.description}\r\n                      </FormHelperText>\r\n                    ) : null}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid\r\n                container\r\n                id=\"buttons-container\"\r\n                justify=\"flex-end\"\r\n                spacing={3}\r\n              >\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    className={classes.submit}\r\n                    onClick={goBack}\r\n                    size=\"large\"\r\n                  >\r\n                    Go Back\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.submit}\r\n                    size=\"large\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CompanyInfo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./StudentInfo.css\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n  Chip,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  Button,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import studentImage from \"../../assets/StudentImagePlaceholder.png\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport { getConfig } from \"../../authConfig\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: theme.spacing(7),\r\n    // flexWrap: \"wrap\",\r\n    // listStyle: \"none\",\r\n    // padding: theme.spacing(0.5),\r\n    // margin: 0,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(6),\r\n    justifyContent: \"center\",\r\n  },\r\n  formControl: {\r\n    width: \"100%\",\r\n  },\r\n  checkLabel: {\r\n    color: theme.palette.secondary,\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  // icon: {\r\n  //   objectFit: \"contain\",\r\n  //   position: \"relative\",\r\n  //   width:g \"5px\",\r\n  //   color: theme.palette.secondary.main,\r\n  // },\r\n  skills: {\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    border: \"none\",\r\n    cursor: \"default\",\r\n    height: \"32px\",\r\n    display: \"inline-flex\",\r\n    outline: \"0\",\r\n    padding: \"0\",\r\n    fontSize: \"0.8125rem\",\r\n    boxSizing: \"border-box\",\r\n    transition:\r\n      \"background-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n    alignItems: \"center\",\r\n    whiteSpace: \"nowrap\",\r\n    borderRadius: \"16px\",\r\n    verticalAlign: \"middle\",\r\n    justifyContent: \"center\",\r\n    textDecoration: \"none\",\r\n    backgroundColor: \"#e0e0e0\",\r\n    position: \"relative\",\r\n  },\r\n  skillsContainer: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  sectionHeader: {\r\n    fontWeight: \"bold\",\r\n    color: \"#606060\",\r\n  },\r\n  sectionContent: {\r\n    color: \"#5B5B5B\",\r\n    display: \"inline\",\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    listStyle: \"none\",\r\n    padding: theme.spacing(0.5),\r\n    margin: 0,\r\n    boxShadow: \"none\",\r\n  },\r\n  resumeName: {\r\n    fontSize: \"15px\",\r\n  },\r\n  skillRoot: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    flexWrap: \"wrap\",\r\n    listStyle: \"none\",\r\n    padding: theme.spacing(0.5),\r\n    margin: 0,\r\n  },\r\n  beginnerChip: {\r\n    margin: theme.spacing(0.5),\r\n    color: theme.palette.text.primary,\r\n    borderColor: theme.palette.text.primary,\r\n  },\r\n  intermediateChip: {\r\n    margin: theme.spacing(0.5),\r\n    color: theme.palette.warning.main,\r\n    borderColor: theme.palette.warning.main,\r\n  },\r\n  expertChip: {\r\n    margin: theme.spacing(0.5),\r\n    color: theme.palette.success.main,\r\n    borderColor: theme.palette.success.main,\r\n  },\r\n  beginnerDeleteIcon: {\r\n    fill: theme.palette.text.main,\r\n  },\r\n  intermediateDeleteIcon: {\r\n    fill: theme.palette.warning.main,\r\n  },\r\n  expertDeleteIcon: {\r\n    fill: theme.palette.success.main,\r\n  },\r\n}));\r\nconst states = [\r\n  \"AL\",\r\n  \"AK\",\r\n  \"AZ\",\r\n  \"AR\",\r\n  \"CA\",\r\n  \"CO\",\r\n  \"CT\",\r\n  \"DE\",\r\n  \"DC\",\r\n  \"FL\",\r\n  \"GA\",\r\n  \"HI\",\r\n  \"ID\",\r\n  \"IL\",\r\n  \"IN\",\r\n  \"IA\",\r\n  \"KS\",\r\n  \"KY\",\r\n  \"LA\",\r\n  \"ME\",\r\n  \"MD\",\r\n  \"MA\",\r\n  \"MI\",\r\n  \"MN\",\r\n  \"MS\",\r\n  \"MO\",\r\n  \"MT\",\r\n  \"NE\",\r\n  \"NV\",\r\n  \"NH\",\r\n  \"NJ\",\r\n  \"NM\",\r\n  \"NY\",\r\n  \"NC\",\r\n  \"ND\",\r\n  \"OH\",\r\n  \"OK\",\r\n  \"OR\",\r\n  \"PA\",\r\n  \"RI\",\r\n  \"SC\",\r\n  \"SD\",\r\n  \"TN\",\r\n  \"TX\",\r\n  \"UT\",\r\n  \"VT\",\r\n  \"VA\",\r\n  \"WA\",\r\n  \"WV\",\r\n  \"WI\",\r\n  \"WY\",\r\n];\r\nfunction StudentInfo() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  const [updateFailed, setUpdateFailed] = useState(false);\r\n  const handleCloseUpdateFailed = () => {\r\n    setUpdateFailed(false);\r\n  };\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  const [alert, setAlert] = useState(\"\");\r\n\r\n  const [firstStep, setFirstStep] = useState(true);\r\n  const [studentFirst, setStudentFirst] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    student_id: \"\",\r\n    date_of_birth: \"\",\r\n    graduation_date: \"\",\r\n    major: \"Architecture\",\r\n    degree: \"Undergraduate\",\r\n    contact_email: \"\",\r\n    phoneNumber: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    zipcode: \"\",\r\n    username: parseInt(localStorage.getItem(\"email_id\")),\r\n  });\r\n  const [errorsFirst, setErrorsFirst] = useState({});\r\n  const [errorsSecond, setErrorsSecond] = useState({});\r\n\r\n  const [studentSecond, setStudentSecond] = useState({\r\n    student_description: \"\",\r\n  });\r\n\r\n  const handleChangeFirst = (e) => {\r\n    setStudentFirst({\r\n      ...studentFirst,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChangeSecond = (e) => {\r\n    setStudentSecond({\r\n      ...studentSecond,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const [valueDateOfBirth, setDateOfBirth] = useState(new Date());\r\n  const valueTodaysDate = new Date();\r\n  const [valueGraduationDate, setGraduationDate] = useState(new Date());\r\n  // const [image, setImage] = useState(\"\");\r\n  // const [resume, setResume] = useState(\"\");\r\n  const [skills, setSkills] = useState();\r\n  const [tempSkill, setTempSkill] = useState(\"\");\r\n  const [experience, setExperience] = useState(\"\");\r\n  const [mySkills, setMySkills] = useState([]);\r\n\r\n  const getSkills = async () => {\r\n    const response = await axios.get(`/skill/`, getConfig());\r\n    setSkills(response.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSkills();\r\n  }, []);\r\n\r\n  const handleSubmit = () => {\r\n    if (mySkills.length === 0) {\r\n      setAlert(\"Please enter at least one skill with experience\");\r\n      setUpdateFailed(true);\r\n    } else {\r\n      setUpdateFailed(false);\r\n      setAlert(\"\");\r\n      setErrorsSecond({\r\n        student_description:\r\n          studentSecond.student_description === \"\" ? \"Required\" : null,\r\n      });\r\n    }\r\n  };\r\n\r\n  function validateStudentId(studentID) {\r\n    if (studentID === \"\") {\r\n      return \"Required\";\r\n    }\r\n    if (!parseInt(studentID) || studentID.length < 7) {\r\n      setAlert(\"Please enter valid PeopleSoft ID!\");\r\n      setUpdateFailed(true);\r\n    } else {\r\n      setUpdateFailed(false);\r\n      setAlert(\"\");\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const getAddress = (values) => {\r\n    if (values.address && values.city && values.state) {\r\n      return `${values.address}|${values.city}|${values.state}`;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const nextStep = () => {\r\n    studentFirst.date_of_birth = valueDateOfBirth.toJSON().substring(0, 10);\r\n    studentFirst.graduation_date = valueGraduationDate\r\n      .toJSON()\r\n      .substring(0, 10);\r\n    setErrorsFirst({\r\n      first_name: studentFirst.first_name === \"\" ? \"Required\" : null,\r\n      last_name: studentFirst.last_name === \"\" ? \"Required\" : null,\r\n      student_id: validateStudentId(studentFirst.student_id),\r\n      phoneNumber: studentFirst.phoneNumber === \"\" ? \"Required\" : null,\r\n      contact_email: studentFirst.contact_email === \"\" ? \"Required\" : null,\r\n      address: studentFirst.address === \"\" ? \"Required\" : null,\r\n      city: studentFirst.city === \"\" ? \"Required\" : null,\r\n      state: studentFirst.state === \"\" ? \"Required\" : null,\r\n      zipcode: studentFirst.zipcode === \"\" ? \"Required\" : null,\r\n    });\r\n  };\r\n\r\n  function replaceSkillIdWithName(student_id) {\r\n    let returnArray = [];\r\n    for (let i = 0; i < mySkills.length; i++) {\r\n      for (let j = 0; j < skills.length; j++) {\r\n        if (mySkills[i].skill_name === skills[j].skill_name) {\r\n          returnArray.push({\r\n            student_db_id: student_id,\r\n            skill_id: parseInt(skills[j].id),\r\n            experience_level: parseInt(mySkills[i].experience_level),\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return returnArray;\r\n  }\r\n  useEffect(() => {\r\n    if (Object.entries(errorsFirst).length !== 0) {\r\n      let errors = false;\r\n      Object.keys(errorsFirst).forEach((key) => {\r\n        if (errorsFirst[key] !== null) {\r\n          errors = true;\r\n        }\r\n      });\r\n      if (errors) {\r\n        setFirstStep(true);\r\n      } else {\r\n        setFirstStep(false);\r\n      }\r\n    }\r\n  }, [errorsFirst]);\r\n\r\n  const goBack = () => {\r\n    setFirstStep(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.entries(errorsSecond).length !== 0) {\r\n      let errors = false;\r\n      Object.keys(errorsSecond).forEach((key) => {\r\n        if (errorsSecond[key] !== null) {\r\n          errors = true;\r\n        }\r\n      });\r\n      if (!errors) {\r\n        const data = {\r\n          student_id: studentFirst.student_id,\r\n          full_name: studentFirst.first_name + \" \" + studentFirst.last_name,\r\n          date_of_birth: studentFirst.date_of_birth,\r\n          student_contact_email: studentFirst.contact_email,\r\n          student_phone_no: studentFirst.phoneNumber,\r\n          graduation_date: studentFirst.graduation_date,\r\n          major: studentFirst.major,\r\n          degree: studentFirst.degree,\r\n          student_address: getAddress(studentFirst),\r\n          student_zip: studentFirst.zipcode,\r\n          student_description: studentSecond.student_description,\r\n          username: parseInt(localStorage.getItem(\"email_id\")),\r\n        };\r\n        axios\r\n          .post(\"/student_profile/create\", data, getConfig())\r\n          .then((res) => {\r\n            localStorage.setItem(\"slug\", res.data.slug);\r\n            const student_db_id = res.data.student_db_id;\r\n            axios\r\n              .post(\r\n                \"/student_skill/add\",\r\n                replaceSkillIdWithName(student_db_id),\r\n                getConfig()\r\n              )\r\n              .then((res) => {\r\n                history.push(\"/dashboard\");\r\n              });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err.response.data);\r\n          });\r\n      }\r\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [errorsSecond]);\r\n\r\n  const addSkill = () => {\r\n    if (tempSkill && experience) {\r\n      let unique = true;\r\n      for (let i = 0; i < mySkills.length; i++) {\r\n        if (mySkills[i].skill_name === tempSkill) {\r\n          unique = false;\r\n          setAlert(`${tempSkill} already exists`);\r\n          setUpdateFailed(true);\r\n          break;\r\n        }\r\n      }\r\n      if (unique) {\r\n        setMySkills([\r\n          ...mySkills,\r\n          {\r\n            skill_name: tempSkill,\r\n            experience_level: experience,\r\n          },\r\n        ]);\r\n        setUpdateFailed(false);\r\n        setAlert(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDelete = (skillTodelete) => () => {\r\n    setMySkills((mySkills) =>\r\n      mySkills.filter(\r\n        (mySkill) => mySkill.skill_name !== skillTodelete.skill_name\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleSkillChange = (e) => {\r\n    setTempSkill(e.target.value);\r\n  };\r\n  const handleExperienceChange = (e) => {\r\n    setExperience(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxwidth=\"xs\">\r\n      <div className={classes.root}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Student Account Information\r\n        </Typography>\r\n        <form className={classes.form}>\r\n          {firstStep === true ? (\r\n            <>\r\n              <Grid\r\n                container\r\n                id=\"master\"\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                spacing={2}\r\n                alignItems=\"flex-start\"\r\n              >\r\n                {/* column 1 ----------------------------------------------*/}\r\n                <Grid\r\n                  container\r\n                  id=\"first-left\"\r\n                  item\r\n                  xs={12}\r\n                  md={6}\r\n                  spacing={3}\r\n                  direction=\"column\"\r\n                >\r\n                  {/* Left Grid */}\r\n                  <Grid item>\r\n                    <TextField\r\n                      error={\r\n                        errorsFirst.first_name && studentFirst.first_name === \"\"\r\n                      }\r\n                      variant=\"outlined\"\r\n                      id=\"first_name\"\r\n                      label=\"First Name\"\r\n                      name=\"first_name\"\r\n                      onChange={handleChangeFirst}\r\n                      fullWidth\r\n                      value={studentFirst.first_name}\r\n                      required={true}\r\n                      inputProps={{ maxLength: 25 }}\r\n                    />\r\n                    {errorsFirst.first_name &&\r\n                    studentFirst.first_name === \"\" ? (\r\n                      <FormHelperText\r\n                        error={\r\n                          errorsFirst.first_name &&\r\n                          studentFirst.first_name === \"\"\r\n                        }\r\n                      >\r\n                        {errorsFirst.first_name}\r\n                      </FormHelperText>\r\n                    ) : null}\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      error={\r\n                        errorsFirst.last_name && studentFirst.last_name === \"\"\r\n                      }\r\n                      variant=\"outlined\"\r\n                      id=\"last_name\"\r\n                      label=\"Last Name\"\r\n                      name=\"last_name\"\r\n                      onChange={handleChangeFirst}\r\n                      value={studentFirst.last_name}\r\n                      fullWidth\r\n                      required={true}\r\n                      inputProps={{ maxLength: 24 }}\r\n                    />\r\n                    {errorsFirst.last_name && studentFirst.last_name === \"\" ? (\r\n                      <FormHelperText\r\n                        error={\r\n                          errorsFirst.last_name && studentFirst.last_name === \"\"\r\n                        }\r\n                      >\r\n                        {errorsFirst.last_name}\r\n                      </FormHelperText>\r\n                    ) : null}\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      error={\r\n                        errorsFirst.phoneNumber &&\r\n                        studentFirst.phoneNumber === \"\"\r\n                      }\r\n                      variant=\"outlined\"\r\n                      id=\"phoneNumber\"\r\n                      label=\"Phone Number\"\r\n                      name=\"phoneNumber\"\r\n                      onChange={handleChangeFirst}\r\n                      value={studentFirst.phoneNumber}\r\n                      fullWidth\r\n                      required={true}\r\n                      inputProps={{ maxLength: 11 }}\r\n                    />\r\n                    {errorsFirst.phoneNumber &&\r\n                    studentFirst.phoneNumber === \"\" ? (\r\n                      <FormHelperText\r\n                        error={\r\n                          errorsFirst.phoneNumber &&\r\n                          studentFirst.phoneNumber === \"\"\r\n                        }\r\n                      >\r\n                        {errorsFirst.phoneNumber}\r\n                      </FormHelperText>\r\n                    ) : null}\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      error={errorsFirst.address && studentFirst.address === \"\"}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      id=\"address\"\r\n                      label=\"Street Address\"\r\n                      name=\"address\"\r\n                      onChange={handleChangeFirst}\r\n                      value={studentFirst.address}\r\n                      inputProps={{ maxLength: 40 }}\r\n                    />\r\n                    {errorsFirst.address && studentFirst.address === \"\" ? (\r\n                      <FormHelperText\r\n                        error={\r\n                          errorsFirst.address && studentFirst.address === \"\"\r\n                        }\r\n                      >\r\n                        {errorsFirst.address}\r\n                      </FormHelperText>\r\n                    ) : null}\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      error={errorsFirst.city && studentFirst.city === \"\"}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      id=\"city\"\r\n                      label=\"City\"\r\n                      name=\"city\"\r\n                      onChange={handleChangeFirst}\r\n                      value={studentFirst.city}\r\n                      inputProps={{ maxLength: 20 }}\r\n                    />\r\n                    {errorsFirst.city && studentFirst.city === \"\" ? (\r\n                      <FormHelperText\r\n                        error={errorsFirst.city && studentFirst.city === \"\"}\r\n                      >\r\n                        {errorsFirst.address}\r\n                      </FormHelperText>\r\n                    ) : null}\r\n                  </Grid>\r\n                  <Grid\r\n                    container\r\n                    xs={12}\r\n                    id=\"address-container-1\"\r\n                    item\r\n                    direction=\"row\"\r\n                    spacing={2}\r\n                  >\r\n                    <Grid item>\r\n                      <FormControl\r\n                        error={errorsFirst.state && studentFirst.state === \"\"}\r\n                        variant=\"outlined\"\r\n                        className={classes.formControl}\r\n                      >\r\n                        <InputLabel>ST</InputLabel>\r\n                        <Select\r\n                          label=\"State\"\r\n                          value={studentFirst.state}\r\n                          onChange={handleChangeFirst}\r\n                          defaultValue=\"\"\r\n                          name=\"state\"\r\n                        >\r\n                          {states.map((state) => (\r\n                            <MenuItem value={state} key={state}>\r\n                              {state}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                        {errorsFirst.state && studentFirst.state === \"\" ? (\r\n                          <FormHelperText>{errorsFirst.state}</FormHelperText>\r\n                        ) : null}\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <TextField\r\n                        error={\r\n                          errorsFirst.zipcode && studentFirst.zipcode === \"\"\r\n                        }\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        id=\"zipcode\"\r\n                        label=\"Zipcode\"\r\n                        name=\"zipcode\"\r\n                        onChange={handleChangeFirst}\r\n                        value={studentFirst.zipcode}\r\n                        inputProps={{ maxLength: 5 }}\r\n                      />\r\n                      {errorsFirst.zipcode && studentFirst.zipcode === \"\" ? (\r\n                        <FormHelperText\r\n                          error={\r\n                            errorsFirst.zipcode && studentFirst.zipcode === \"\"\r\n                          }\r\n                        >\r\n                          {errorsFirst.zipcode}\r\n                        </FormHelperText>\r\n                      ) : null}\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  id=\"first-right\"\r\n                  item\r\n                  xs={12}\r\n                  md={6}\r\n                  spacing={3}\r\n                  direction=\"column\"\r\n                >\r\n                  <Grid item>\r\n                    <TextField\r\n                      error={\r\n                        errorsFirst.student_id && studentFirst.student_id === \"\"\r\n                      }\r\n                      inputProps={{ maxLength: 7 }}\r\n                      variant=\"outlined\"\r\n                      id=\"student_id\"\r\n                      label=\"PeopleSoft ID\"\r\n                      name=\"student_id\"\r\n                      onChange={handleChangeFirst}\r\n                      value={studentFirst.student_id}\r\n                      required={true}\r\n                      fullWidth\r\n                    />\r\n                    {errorsFirst.student_id &&\r\n                    studentFirst.student_id === \"\" ? (\r\n                      <FormHelperText\r\n                        error={\r\n                          errorsFirst.student_id &&\r\n                          studentFirst.student_id === \"\"\r\n                        }\r\n                      >\r\n                        {errorsFirst.student_id}\r\n                      </FormHelperText>\r\n                    ) : null}\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      error={\r\n                        errorsFirst.contact_email &&\r\n                        studentFirst.contact_email === \"\"\r\n                      }\r\n                      variant=\"outlined\"\r\n                      id=\"contact_email\"\r\n                      label=\"Contact Email\"\r\n                      name=\"contact_email\"\r\n                      onChange={handleChangeFirst}\r\n                      value={studentFirst.contact_email}\r\n                      fullWidth\r\n                      required={true}\r\n                      inputProps={{ maxLength: 50 }}\r\n                    />\r\n                    {errorsFirst.contact_email &&\r\n                    studentFirst.contact_email === \"\" ? (\r\n                      <FormHelperText\r\n                        error={\r\n                          errorsFirst.contact_email &&\r\n                          studentFirst.contact_email === \"\"\r\n                        }\r\n                      >\r\n                        {errorsFirst.contact_email}\r\n                      </FormHelperText>\r\n                    ) : null}\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography component=\"p\">Graduation Date</Typography>\r\n                    <DatePicker\r\n                      calendarAriaLabel=\"Toggle calendar\"\r\n                      clearAriaLabel=\"Clear value\"\r\n                      dayAriaLabel=\"Day\"\r\n                      monthAriaLabel=\"Month\"\r\n                      nativeInputAriaLabel=\"Date\"\r\n                      onChange={(valueGraduationDate) => {\r\n                        setGraduationDate(valueGraduationDate);\r\n                      }}\r\n                      value={valueGraduationDate}\r\n                      yearAriaLabel=\"Year\"\r\n                      defaultValue={valueGraduationDate}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <FormControl\r\n                      variant=\"outlined\"\r\n                      className={classes.formControl}\r\n                    >\r\n                      <InputLabel>Major</InputLabel>\r\n                      <Select\r\n                        native\r\n                        label=\"Major\"\r\n                        name=\"major\"\r\n                        id=\"major\"\r\n                        value={studentFirst.major}\r\n                        onChange={handleChangeFirst}\r\n                      >\r\n                        type={\"search\"}\r\n                        <optgroup label=\"Gerald D. Hines College of Architecture and Design\">\r\n                          <option value=\"Architecture\">Architecture</option>\r\n                          <option value=\"Environmental Design\">\r\n                            Environmental Design\r\n                          </option>\r\n                          <option value=\"Industrial Design\">\r\n                            Industrial Design\r\n                          </option>\r\n                          <option value=\"Interior Architecture\">\r\n                            Interior Architecture\r\n                          </option>\r\n                        </optgroup>\r\n                        <optgroup label=\"Kathrine G. McGovern College of the Arts\">\r\n                          <option value=\"Applied Music\">Applied Music</option>\r\n                          <option value=\"Art\">Art</option>\r\n                          <option value=\"Art History\">Art History</option>\r\n                          <option value=\"Dance\">Dance</option>\r\n                          <option value=\"Graphic Design\">Graphic Design</option>\r\n                          <option value=\"Music\">Music</option>\r\n                          <option value=\"Painting\">Painting</option>\r\n                          <option value=\"Photography\">\r\n                            Photography/Digital Media\r\n                          </option>\r\n                          <option value=\"Sculpture\">Sculpture</option>\r\n                          <option value=\"Theatre\">Theatre</option>\r\n                        </optgroup>\r\n                        <optgroup label=\"C. T. Bauer College of Business\">\r\n                          <option value=\"Accounting\">Accounting</option>\r\n                          <option value=\"Entrepreneurship\">\r\n                            Entrepreneurship\r\n                          </option>\r\n                          <option value=\"Finance\">Finance</option>\r\n                          <option value=\"Management\">Management</option>\r\n                          <option value=\"Management Information Systems\">\r\n                            Management Information Systems\r\n                          </option>\r\n                          <option value=\"Marketing\">Marketing</option>\r\n                          <option value=\"Suppy Chain Management\">\r\n                            Suppy Chain Management\r\n                          </option>\r\n                        </optgroup>\r\n                        <optgroup label=\"College of Education\">\r\n                          <option value=\"Health\">Health</option>\r\n                          <option value=\"Human Development and Family Studies\">\r\n                            Human Development and Family Studies\r\n                          </option>\r\n                          <option value=\"Teaching and Learning\">\r\n                            Teaching and Learning\r\n                          </option>\r\n                        </optgroup>\r\n                        <optgroup label=\"Cullen College of Engineering\">\r\n                          <option value=\"Biomedical Engineering\">\r\n                            Biomedical Engineering\r\n                          </option>\r\n\r\n                          <option value=\"Chemical Engineering\">\r\n                            Chemical Engineering\r\n                          </option>\r\n\r\n                          <option value=\"Civil Engineering\">\r\n                            Civil Engineering\r\n                          </option>\r\n\r\n                          <option value=\"Computer Engineering\">\r\n                            Computer Engineering\r\n                          </option>\r\n\r\n                          <option value=\"Computer Engineering and Analytics\">\r\n                            Computer Engineering and Analytics\r\n                          </option>\r\n                          <option value=\"Construction Engineering\">\r\n                            Construction Engineering\r\n                          </option>\r\n                          <option value=\"Electrical Engineering\">\r\n                            Electrical Engineering\r\n                          </option>\r\n                          <option value=\"Industrial Engineering\">\r\n                            Industrial Engineering\r\n                          </option>\r\n                          <option value=\"Mechanical Engineering\">\r\n                            Mechanical Engineering\r\n                          </option>\r\n                          <option value=\"Petroleum Engineering\">\r\n                            Petroleum Engineering\r\n                          </option>\r\n                          <option value=\"Systems Engineering\">\r\n                            Systems Engineering\r\n                          </option>\r\n                        </optgroup>\r\n                        <optgroup label=\"Conrad N. Hilton College of Hotel and Restaurant Management\">\r\n                          <option value=\"Hotel and Restaurant Management\">\r\n                            Hotel and Restaurant Management\r\n                          </option>\r\n                        </optgroup>\r\n                        <optgroup label=\"College of Liberal Arts and Social Sciences\">\r\n                          <option value=\"African American Studies\">\r\n                            African American Studies\r\n                          </option>\r\n                          <option value=\"American Sign Language Interpreting\">\r\n                            American Sign Language Interpreting\r\n                          </option>\r\n                          <option value=\"Anthropology\">Anthropology</option>\r\n                          <option value=\"Chinese Studies\">\r\n                            Chinese Studies\r\n                          </option>\r\n                          <option value=\"Communication Sciences and Disorders\">\r\n                            Communication Sciences and Disorders\r\n                          </option>\r\n                          <option value=\"Communication Studies\">\r\n                            Communication Studies\r\n                          </option>\r\n                          <option value=\"Economics\">Economics</option>\r\n                          <option value=\"English\">English</option>\r\n                          <option value=\"Exercise Science\">\r\n                            Exercise Science\r\n                          </option>\r\n                          <option value=\"Fitness and Sports\">\r\n                            Fitness and Sports\r\n                          </option>\r\n\r\n                          <option value=\"French\">French</option>\r\n                          <option value=\"Health Communication\">\r\n                            Health Communication\r\n                          </option>\r\n                          <option value=\"History\">History</option>\r\n                          <option value=\"Human Nutrition and Foods\">\r\n                            Human Nutrition and Foods\r\n                          </option>\r\n                          <option value=\"Journalism\">Journalism</option>\r\n                          <option value=\"Liberal Studies\">\r\n                            Liberal Studies\r\n                          </option>\r\n                          <option value=\"Media Production\">\r\n                            Media Production\r\n                          </option>\r\n                          <option value=\"Philosophy\">Philosophy</option>\r\n                          <option value=\"Political Science\">\r\n                            Political Science\r\n                          </option>\r\n                          <option value=\"Psychology\">Psychology</option>\r\n                          <option value=\"Religious Studies\">\r\n                            Religious Studies\r\n                          </option>\r\n                          <option value=\"Sociology\">Sociology</option>\r\n                          <option value=\"Spanish\">Spanish</option>\r\n                          <option value=\"Sports Administration\">\r\n                            Sports Administration\r\n                          </option>\r\n                          <option value=\"Strategic Communication\">\r\n                            Strategic Communication\r\n                          </option>\r\n\r\n                          <option value=\"Women’s,_Gender,_and_Sexuality_Studies\">\r\n                            Women’s, Gender, and Sexuality Studies\r\n                          </option>\r\n                          <option value=\"World Cultures and Literatures\">\r\n                            World Cultures and Literatures\r\n                          </option>\r\n                        </optgroup>\r\n                        <optgroup label=\"College of Natural Sciences and Mathematics\">\r\n                          <option value=\"Biochemical and Biophysical Sciences\">\r\n                            Biochemical and Biophysical Sciences\r\n                          </option>\r\n                          <option value=\"Biology\">Biology</option>\r\n                          <option value=\"Chemistry\">Chemistry</option>\r\n                          <option value=\"Computer Science\">\r\n                            Computer Science\r\n                          </option>\r\n                          <option value=\"Earth Science\">Earth Science</option>\r\n                          <option value=\"Environmental Sciences\">\r\n                            Environmental Sciences\r\n                          </option>\r\n                          <option value=\"Geology\">Geology</option>\r\n                          <option value=\"Geophysics\">Geophysics</option>\r\n                          <option value=\"Honors Biomedical Sciences\">\r\n                            Honors Biomedical Sciences\r\n                          </option>\r\n                          <option value=\"Mathematical Biology\">\r\n                            Mathematical Biology\r\n                          </option>\r\n                          <option value=\"Mathematics\">Mathematics</option>\r\n\r\n                          <option value=\"Physics\">Physics</option>\r\n                        </optgroup>\r\n                        <optgroup label=\"College of Nursing\">\r\n                          <option value=\"Pre-Nursing\">Pre-Nursing</option>\r\n                          <option value=\"Nursing, BSN (RN-BSN)\">\r\n                            Nursing, BSN (RN-BSN)\r\n                          </option>\r\n                          <option value=\"Nursing, BSN (Second_Degree)\">\r\n                            Nursing, BSN (Second Degree)\r\n                          </option>\r\n                        </optgroup>\r\n                        <optgroup label=\"College of Technology\">\r\n                          <option value=\"Biotechnology\">Biotechnology</option>\r\n\r\n                          <option value=\"Computer Engineering Technology\">\r\n                            Computer Engineering Technology\r\n                          </option>\r\n                          <option value=\"Computer Information Systems\">\r\n                            Computer Information Systems\r\n                          </option>\r\n                          <option value=\"Construction Management\">\r\n                            Construction Management\r\n                          </option>\r\n                          <option value=\"Digital Media\">Digital Media</option>\r\n                          <option value=\"Electrical Power Engineering Technology\">\r\n                            Electrical Power Engineering Technology\r\n                          </option>\r\n                          <option value=\"Human Resources Development\">\r\n                            Human Resources Development\r\n                          </option>\r\n                          <option value=\"Mechanical Engineering Technology\">\r\n                            Mechanical Engineering Technology\r\n                          </option>\r\n                          <option value=\"Retailing and Consumer Science\">\r\n                            Retailing and Consumer Science{\" \"}\r\n                          </option>\r\n                          <option value=\"Supply Chain and Logistics Technology\">\r\n                            Supply Chain and Logistics Technology\r\n                          </option>\r\n                          <option value=\"Technology Leadership and Innovation Management \">\r\n                            Technology Leadership and Innovation Management{\" \"}\r\n                          </option>\r\n                        </optgroup>\r\n                        <optgroup label=\"Pre-Professional Tracks\">\r\n                          <option value=\"Pre-Dentistry\">Pre-Dentistry</option>\r\n                          <option value=\"Pre-Law\">Pre-Law</option>\r\n                          <option value=\"Pre-Medicine\">Pre-Medicine</option>\r\n                          <option value=\"Pre-Optometry\">Pre-Optometry</option>\r\n                          <option value=\"Pre-Pharmacy\">Pre-Pharmacy</option>\r\n                          <option value=\"Pre-Physical Therapy\">\r\n                            Pre-Physical Therapy\r\n                          </option>\r\n                          <option value=\"Pre-Veterinary Medicine\">\r\n                            Pre-Veterinary Medicine\r\n                          </option>\r\n                        </optgroup>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid container item direction=\"row\" spacing={2}>\r\n                    <Grid item>\r\n                      <FormControl\r\n                        variant=\"outlined\"\r\n                        className={classes.formControl}\r\n                      >\r\n                        <InputLabel>Degree type</InputLabel>\r\n                        <Select\r\n                          native\r\n                          label=\"Degree Type\"\r\n                          name=\"degree\"\r\n                          id=\"degree\"\r\n                          value={studentFirst.degree}\r\n                          onChange={handleChangeFirst}\r\n                        >\r\n                          <option value=\"Undergraduate\">Undergraduate</option>\r\n                          <option value=\"Graduate\">Graduate</option>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography component=\"p\">Date of Birth</Typography>\r\n                    <DatePicker\r\n                      calendarAriaLabel=\"Toggle calendar\"\r\n                      clearAriaLabel=\"Clear value\"\r\n                      dayAriaLabel=\"Day\"\r\n                      monthAriaLabel=\"Month\"\r\n                      nativeInputAriaLabel=\"Date\"\r\n                      onChange={(valueDateOfBirth) => {\r\n                        setDateOfBirth(valueDateOfBirth);\r\n                      }}\r\n                      value={valueDateOfBirth}\r\n                      yearAriaLabel=\"Year\"\r\n                      defaultValue={valueDateOfBirth}\r\n                      maxDate={valueTodaysDate}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {/* Bottom Buttons */}\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.submit}\r\n                    onClick={nextStep}\r\n                    size=\"large\"\r\n                  >\r\n                    Continue\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                spacing={2}\r\n                justify=\"space-between\"\r\n                alignItems=\"flex-start\"\r\n              >\r\n                {/*<Grid container item xs={6} direction=\"column\" spacing={2}>\r\n                 <Grid item xs={12}>\r\n                    <img className=\"logo-image\" src={studentImage} alt=\"Logo\" />\r\n                  </Grid>\r\n                   <Grid item>\r\n                    <label htmlFor=\"upload-image\">\r\n                      <input\r\n                        style={{ display: \"none\" }}\r\n                        id=\"upload-image\"\r\n                        name=\"upload-image\"\r\n                        type=\"file\"\r\n                        onChange={(e) => {\r\n                          setImage(e.target.files[0].name);\r\n                        }}\r\n                      />\r\n                      <Button\r\n                        className=\"upload_resume_button\"\r\n                        variant=\"contained\"\r\n                        component=\"span\">\r\n                        Upload Image\r\n                      </Button>\r\n                    </label>\r\n                  </Grid> \r\n                </Grid>*/}\r\n                {/* Right part */}\r\n                <Grid container item direction=\"column\" spacing={3}>\r\n                  {mySkills.length > 0 ? (\r\n                    <Grid item>\r\n                      <Typography>My Skills: </Typography>\r\n                      <ul className={classes.skillRoot}>\r\n                        {mySkills.map((skill, index) => {\r\n                          return (\r\n                            <li key={index}>\r\n                              <Chip\r\n                                variant=\"outlined\"\r\n                                classes={\r\n                                  skill.experience_level === 1\r\n                                    ? {\r\n                                        root: classes.beginnerChip,\r\n                                        deleteIcon: classes.beginnerDeleteIcon,\r\n                                      }\r\n                                    : skill.experience_level === 2\r\n                                    ? {\r\n                                        root: classes.intermediateChip,\r\n                                        deleteIcon:\r\n                                          classes.intermediateDeleteIcon,\r\n                                      }\r\n                                    : {\r\n                                        root: classes.expertChip,\r\n                                        deleteIcon: classes.expertDeleteIcon,\r\n                                      }\r\n                                }\r\n                                label={skill.skill_name}\r\n                                onDelete={handleDelete(skill)}\r\n                              />\r\n                            </li>\r\n                          );\r\n                        })}\r\n                      </ul>\r\n                    </Grid>\r\n                  ) : (\r\n                    <Typography>No skills Added</Typography>\r\n                  )}\r\n                  <Grid item container xs spacing={2}>\r\n                    <Grid item xs={6}>\r\n                      <FormControl className={classes.formControl}>\r\n                        <InputLabel>Skills</InputLabel>\r\n                        <Select\r\n                          label=\"Skill\"\r\n                          id=\"tempskill\"\r\n                          onChange={handleSkillChange}\r\n                          value={tempSkill}\r\n                        >\r\n                          type={\"search\"}\r\n                          <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                          </MenuItem>\r\n                          {skills.map((skill) => (\r\n                            <MenuItem key={skill.id} value={skill.skill_name}>\r\n                              {skill.skill_name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <FormControl className={classes.formControl}>\r\n                        <InputLabel>Experience</InputLabel>\r\n                        <Select\r\n                          label=\"experience\"\r\n                          id=\"experience\"\r\n                          onChange={handleExperienceChange}\r\n                          value={experience}\r\n                        >\r\n                          <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                          </MenuItem>\r\n                          <MenuItem value={1}>Beginner</MenuItem>\r\n                          <MenuItem value={2}>Novice</MenuItem>\r\n                          <MenuItem value={3}>Expert</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"secondary\"\r\n                      onClick={addSkill}\r\n                      disabled={tempSkill === \"\" || experience === \"\"}\r\n                    >\r\n                      Add Skill\r\n                    </Button>\r\n                  </Grid>\r\n                  {/* <Grid item>\r\n                    <label htmlFor=\"upload-resume\">\r\n                      <input\r\n                        style={{ display: \"none\" }}\r\n                        id=\"upload-resume\"\r\n                        name=\"upload-resume\"\r\n                        type=\"file\"\r\n                        onChange={(e) => {\r\n                          setResume(e.target.files[0].name);\r\n                        }}\r\n                      />\r\n                      <Button\r\n                        className=\"upload_resume_button\"\r\n                        variant=\"contained\"\r\n                        component=\"span\">\r\n                        Upload Resume\r\n                      </Button>\r\n                      <br />\r\n                      <p className={classes.resumeName}> {resume}</p>\r\n                    </label>\r\n                  </Grid> */}\r\n                  <Grid item>\r\n                    <TextField\r\n                      error={\r\n                        errorsSecond.student_description &&\r\n                        studentSecond.student_description === \"\"\r\n                      }\r\n                      variant=\"outlined\"\r\n                      multiline\r\n                      rows={5}\r\n                      fullWidth\r\n                      id=\"student_description\"\r\n                      label=\"Description\"\r\n                      name=\"student_description\"\r\n                      onChange={handleChangeSecond}\r\n                      value={studentSecond.student_description}\r\n                      inputProps={{ maxLength: 500 }}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container justify=\"flex-end\" spacing={3}>\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    className={classes.submit}\r\n                    onClick={goBack}\r\n                    size=\"large\"\r\n                  >\r\n                    Go Back\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.submit}\r\n                    size=\"large\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          )}\r\n          <Snackbar\r\n            open={updateFailed}\r\n            autoHideDuration={6000}\r\n            onClose={handleCloseUpdateFailed}\r\n          >\r\n            <Alert onClose={handleCloseUpdateFailed} severity=\"error\">\r\n              {alert}\r\n            </Alert>\r\n          </Snackbar>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default StudentInfo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CompanyInfo from \"./CompanyInfo\";\r\nimport StudentInfo from \"./StudentInfo\";\r\n\r\nconst AccountInfo = () => {\r\n  const [userType, setUserType] = useState({ student: false, company: false });\r\n\r\n  useEffect(() => {\r\n    const role = localStorage.getItem(\"role_id\");\r\n    if (role === \"0\") {\r\n      setUserType({ student: true });\r\n    } else if (role === \"1\") {\r\n      setUserType({ company: true });\r\n    }\r\n  }, [setUserType]);\r\n\r\n  return (\r\n    <Container>\r\n      {userType.student ? <StudentInfo /> : null}\r\n      {userType.company ? <CompanyInfo /> : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AccountInfo;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginTop: \"8rem\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nconst NotFound = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h1\" component=\"h2\" gutterBottom>\r\n        404\r\n      </Typography>\r\n      <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n        Page Not Found\r\n      </Typography>\r\n      <Button variant=\"contained\" href=\"/\">\r\n        Go back to Home\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","export const dataReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_PROFILE\":\r\n      return { ...state, profile: action.payload };\r\n    case \"UPDATE_PROFILE\":\r\n      return {\r\n        ...state,\r\n        profile: {\r\n          ...state.profile,\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case \"SET_STUDENTS\":\r\n      return {\r\n        ...state,\r\n        students: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport { dataReducer } from \"../reducers/dataReducer\";\r\n\r\nexport const DataContext = createContext();\r\n\r\nconst initialState = {};\r\n\r\nconst DataContextProvider = (props) => {\r\n  const [data, dispatch] = useReducer(dataReducer, initialState);\r\n  return (\r\n    <DataContext.Provider value={{ data, dispatch }}>\r\n      {props.children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DataContextProvider;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { DataContext } from \"../../contexts/dataContext\";\r\nimport { Typography, Grid, Chip, LinearProgress } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport { getConfig } from \"../../authConfig\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nimport BusinessRoundedIcon from \"@material-ui/icons/BusinessRounded\";\r\nimport ShortTextRoundedIcon from \"@material-ui/icons/ShortTextRounded\";\r\nimport LanguageRoundedIcon from \"@material-ui/icons/LanguageRounded\";\r\n/* Speed Dial Material UI */\r\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\r\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\r\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  profileLogo: {\r\n    backgroundRepeat: \"no-repeat\",\r\n    position: \"absolute\",\r\n    objectPosition: \"20% 30%\",\r\n\r\n    height: \"15vw\",\r\n    maxWidth: \"100%\",\r\n    zIndex: 0,\r\n    objectFit: \"cover\",\r\n    opacity: \"50%\",\r\n    right: \"0px\",\r\n  },\r\n  studentName: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  gridList: {\r\n    width: \"100%\",\r\n  },\r\n  subheader: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  skillsRoot: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  chip: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  chipLabel: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  qualification: {\r\n    textTransform: \"uppercase\",\r\n  },\r\n  actionArea: {\r\n    padding: theme.spacing(1),\r\n    \"&:focus\": {\r\n      border: `1px solid ${theme.palette.secondary.main}`,\r\n    },\r\n  },\r\n  fieldTitle: {\r\n    textTransform: \"uppercase\",\r\n    color: theme.palette.text.secondary,\r\n    fontSize: \"0.7rem\",\r\n    letterSpacing: \"0.05rem\",\r\n  },\r\n  fieldValue: {\r\n    fontSize: \"0.7rem\",\r\n  },\r\n  cardHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  cardContent: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  gridRoot: {\r\n    padding: \"10px\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  card: {\r\n    width: \"280px\",\r\n    height: \"100%\",\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n  },\r\n  noPaddingTop: {\r\n    paddingTop: \"0\",\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(5),\r\n    height: theme.spacing(5),\r\n  },\r\n  spinner: {\r\n    position: \"relative\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n  buttonContainer: {\r\n    justifyContent: \"center\",\r\n  },\r\n  loader: {\r\n    position: \"relative\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n\r\n  imageDiv: {\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    textAlign: \"center\",\r\n    height: \"200px\",\r\n    alignItems: \"center\",\r\n  },\r\n  divProjectName: {\r\n    alignItems: \"flex-end\",\r\n    zIndex: 2,\r\n    position: \"absolute\",\r\n    left: \"0px\",\r\n    width: \"100%\",\r\n  },\r\n\r\n  companyInfo: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  companyIcon: {\r\n    margin: \"10px\",\r\n  },\r\n  projectInfo: {\r\n    margin: \"20px\",\r\n  },\r\n  companyInfoContainer: {\r\n    padding: \"20px\",\r\n  },\r\n  projectBody: {\r\n    padding: \"20px\",\r\n  },\r\n  bottomSpace: {\r\n    paddingBottom: \"10px\",\r\n  },\r\n  chips: {\r\n    margin: \"5px\",\r\n  },\r\n\r\n  /* Speed Dial */\r\n  speedDial: {\r\n    position: \"absolute\",\r\n\r\n    right: theme.spacing(2),\r\n  },\r\n  speedDialButton: {\r\n    \"MuiButtonBase-root\": {\r\n      backgroundColor: \"#c8102e\",\r\n    },\r\n  },\r\n  \"MuiSpeedDialAction-staticTooltipLabel\": {\r\n    width: \"140px\",\r\n  },\r\n  description: {\r\n    display: \"inline-block\",\r\n    wordBreak: \"break-word\",\r\n  },\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst actions = [{ icon: <SaveIcon />, name: \"Save Project\" }];\r\n\r\nexport default function ProjectsListTemplate({ match }) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const { data } = useContext(DataContext);\r\n  const { profile } = data;\r\n\r\n  const [saveSuccess, setSaveSuccess] = useState(false);\r\n  const [saveFailed, setSaveFailed] = useState(false);\r\n\r\n  const handleCloseSaveSucess = () => {\r\n    setSaveSuccess(false);\r\n  };\r\n  const handleCloseSaveFailed = () => {\r\n    setSaveFailed(false);\r\n  };\r\n\r\n  const saveProject = () => {\r\n    setOpen(false);\r\n    const data = {\r\n      student_id: profile.student_id,\r\n      project_id: match.params.project,\r\n      student_preference_for_project: \"0\",\r\n    };\r\n    axios\r\n      .post(\"/student_select_project/create\", data, getConfig())\r\n      .then((res) => {\r\n        setSaveSuccess(true);\r\n      })\r\n      .catch((err) => {\r\n        setSaveFailed(true);\r\n      });\r\n  };\r\n\r\n  // Initial Info\r\n  const [profileInfo, setCompanyInfo] = useState({});\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n\r\n    axios\r\n      .get(\r\n        \"/company_project/\" + match.params.project,\r\n\r\n        getConfig()\r\n      )\r\n      .then((res) => {\r\n        setIsLoading(false);\r\n\r\n        setCompanyInfo({\r\n          project_name: res.data.project_name,\r\n          project_description: res.data.project_description,\r\n          project_type: res.data.project_type,\r\n          project_deadline: res.data.project_deadline,\r\n          project_tech: res.data.project_tech\r\n            ? res.data.project_tech.split(\",\").map((skill, index) => {\r\n                return { label: skill, value: index };\r\n              })\r\n            : null,\r\n          company_name: res.data.company_name,\r\n          company_website: res.data.company_website,\r\n          company_contact_email: res.data.company_contact_email,\r\n          date_added: res.data.date_added,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n      });\r\n  }, [match.params.project]);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.imageDiv}>\r\n        <div className={classes.divProjectName}>\r\n          <Typography variant=\"h4\">Project</Typography>\r\n          <Typography variant=\"h5\">{profileInfo.project_name}</Typography>\r\n        </div>\r\n      </div>\r\n\r\n      {isLoading ? (\r\n        <LinearProgress\r\n          color=\"secondary\"\r\n          style={{ margin: \"20px\" }}\r\n        ></LinearProgress>\r\n      ) : (\r\n        <Grid container className={classes.gridRoot}>\r\n          <Grid container className={classes.gridRoot}>\r\n            <Grid item xs={11}>\r\n              <Grid container className={classes.companyInfoContainer}>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  sm={12}\r\n                  md={4}\r\n                  className={classes.companyInfo}\r\n                >\r\n                  <BusinessRoundedIcon className={classes.companyIcon} />\r\n\r\n                  {profileInfo.company_name}\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  sm={12}\r\n                  md={4}\r\n                  className={classes.companyInfo}\r\n                >\r\n                  <LanguageRoundedIcon className={classes.companyIcon} />\r\n\r\n                  {profileInfo.company_website}\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  sm={12}\r\n                  md={4}\r\n                  className={classes.companyInfo}\r\n                >\r\n                  <ShortTextRoundedIcon className={classes.companyIcon} />\r\n\r\n                  {profileInfo.company_contact_email}\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container className={classes.projectBody}>\r\n                <Grid item xs={12} className={classes.companyInfo}>\r\n                  <Typography\r\n                    variant=\"h6\"\r\n                    display=\"inline\"\r\n                    className={classes.bottomSpace}\r\n                  >\r\n                    {\" \"}\r\n                    Description:{\" \"}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} className={classes.companyInfo}>\r\n                  <Typography\r\n                    className={classes.description}\r\n                    style={{ whiteSpace: \"pre-line\" }}\r\n                  >\r\n                    {profileInfo.project_description}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container className={classes.projectInfo}>\r\n                <Grid item xs={12} sm={12} md={3}>\r\n                  <Typography display=\"inline\" className={classes.bottomSpace}>\r\n                    {\" \"}\r\n                    Type:{\" \"}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" display=\"inline\">\r\n                    {profileInfo.project_type}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={3}>\r\n                  <Typography display=\"inline\" className={classes.bottomSpace}>\r\n                    {\" \"}\r\n                    Deadline:{\" \"}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" display=\"inline\">\r\n                    {profileInfo.project_deadline}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={3}>\r\n                  <Typography display=\"inline\" className={classes.bottomSpace}>\r\n                    {\" \"}\r\n                    Date Added:{\" \"}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" display=\"inline\">\r\n                    {profileInfo.date_added}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container className={classes.projectInfo}>\r\n                <Grid item xs={12}>\r\n                  {profileInfo.project_tech ? (\r\n                    profileInfo.project_tech.map((skill, index) => (\r\n                      <Chip\r\n                        component={\"span\"}\r\n                        label={skill.label}\r\n                        className={classes.chips}\r\n                        key={index}\r\n                      />\r\n                    ))\r\n                  ) : (\r\n                    <Chip\r\n                      label=\"No technology specified for this project\"\r\n                      component={\"span\"}\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <SpeedDial\r\n                ariaLabel=\"SpeedDial tooltip example\"\r\n                className={classes.speedDial}\r\n                icon={<SpeedDialIcon />}\r\n                onClose={handleClose}\r\n                onOpen={handleOpen}\r\n                open={open}\r\n                direction=\"down\"\r\n                FabProps={{ color: \"secondary\" }}\r\n              >\r\n                {actions.map((action) => (\r\n                  <SpeedDialAction\r\n                    key={action.name}\r\n                    icon={action.icon}\r\n                    tooltipTitle={action.name}\r\n                    tooltipOpen\r\n                    onClick={saveProject}\r\n                  />\r\n                ))}\r\n              </SpeedDial>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n\r\n      <Snackbar\r\n        open={saveSuccess}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseSaveSucess}\r\n      >\r\n        <Alert onClose={handleCloseSaveSucess} severity=\"success\">\r\n          Project {profileInfo.project_name} was saved with no preference!\r\n          Please go to \"My Projects\" to change the preference of this project.\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        open={saveFailed}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseSaveFailed}\r\n      >\r\n        <Alert onClose={handleCloseSaveFailed} severity=\"error\">\r\n          This project was saved. Please go to \"My Projects\" to change the\r\n          preference of this project or to view your preferences.\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  VerticalTimeline,\r\n  VerticalTimelineElement,\r\n} from \"react-vertical-timeline-component\";\r\nimport \"react-vertical-timeline-component/style.min.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport { getConfig } from \"../../authConfig\";\r\nimport WebRoundedIcon from \"@material-ui/icons/WebRounded\";\r\nimport { DataContext } from \"../../contexts/dataContext\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogContentText,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  verticalElementTitle: {\r\n    margin: 0,\r\n    display: \"flex\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  projectLabels: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  chips: {\r\n    marginTop: theme.spacing(1),\r\n    color: \"#FFFFFF\",\r\n    background: \"#C8102E\",\r\n    margin: theme.spacing(0.3),\r\n  },\r\n  projectDescLabel: {\r\n    marginTop: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  projectDesc: {\r\n    marginBottom: theme.spacing(5),\r\n  },\r\n  column: {\r\n    flexBasis: \"33.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: theme.spacing(1, 1),\r\n  },\r\n  projectLink: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  link: {\r\n    color: \"0000EE\",\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n  delete: {\r\n    color: \"black\",\r\n    \"&:hover, &.Mui-focusVisible\": {\r\n      transition: \"0.3s\",\r\n      color: \"#FFFFFF\",\r\n      backgroundColor: \"#C8102E\",\r\n    },\r\n    margin: theme.spacing(0),\r\n  },\r\n  dialogDelete: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  edit: {\r\n    color: \"#C8102E\",\r\n    margin: theme.spacing(0),\r\n  },\r\n  skillsContainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  },\r\n  projectDate: {\r\n    marginTop: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  projectTimeline: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n//Skills denotes to all the skills in the database\r\nfunction StudentProject({ projects, setProjects, skills }) {\r\n  const options = skills.map((skill) => {\r\n    return {\r\n      label: skill.skill_name,\r\n      value: skill.id,\r\n    };\r\n  });\r\n\r\n  const [updateFailed, setUpdateFailed] = useState(false);\r\n  const handleCloseUpdateFailed = () => {\r\n    setUpdateFailed(false);\r\n  };\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  const [alert, setAlert] = useState(\"\");\r\n\r\n  const { data } = useContext(DataContext);\r\n  const { profile } = data;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n\r\n  const [currentProject, setCurrentProject] = useState({\r\n    student_id: profile.student_id,\r\n    project_description: \"\",\r\n    project_end_date: \"\",\r\n    project_id: null,\r\n    project_link: \"\",\r\n    project_name: \"\",\r\n    project_role: \"\",\r\n    project_start_date: \"\",\r\n    project_tech: [],\r\n    project_in_progress: false,\r\n  });\r\n  const [projectToDelete, setProjectToDelete] = useState({});\r\n\r\n  const handleClickOpenDelete = (project) => {\r\n    setOpenDelete(true);\r\n    setProjectToDelete(project);\r\n  };\r\n\r\n  const handleCurrentProjectChange = (e) => {\r\n    setCurrentProject({\r\n      ...currentProject,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClickOpenEdit = (project) => {\r\n    setOpenEdit(true);\r\n    setCurrentProject({\r\n      student_id: profile.student_id,\r\n      project_description: project.project_description,\r\n      project_end_date: project.project_end_date,\r\n      project_id: project.project_id,\r\n      project_link: project.project_link,\r\n      project_name: project.project_name,\r\n      project_role: project.project_role,\r\n      project_start_date: project.project_start_date,\r\n      project_tech: project.project_tech.split(\",\").map((skill, index) => {\r\n        return {\r\n          label: skill,\r\n          value: index,\r\n        };\r\n      }),\r\n      project_in_progress: project.project_in_progress,\r\n    });\r\n  };\r\n  const handleCloseEdit = () => {\r\n    setOpenEdit(false);\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setOpenDelete(false);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    axios\r\n      .delete(\r\n        \"/student_project/\" + id + \"/delete\",\r\n\r\n        getConfig()\r\n      )\r\n      .then((res) => {\r\n        const studentProjectsCurrent = projects.filter(\r\n          (project) => id !== project.project_id\r\n        );\r\n        setProjects(studentProjectsCurrent);\r\n      })\r\n      .catch((err) => console.log(err.response.message));\r\n    setOpenDelete(false);\r\n  };\r\n\r\n  const validate = () => {\r\n    if (currentProject.project_name === \"\") {\r\n      setAlert(\"Please enter a name for the project\");\r\n      setUpdateFailed(true);\r\n      return false;\r\n    } else if (currentProject.project_role === \"\") {\r\n      setAlert(\"Please enter a role for the project\");\r\n      setUpdateFailed(true);\r\n      return false;\r\n    } else if (currentProject.project_description === \"\") {\r\n      setAlert(\"Please enter a description for the project\");\r\n      setUpdateFailed(true);\r\n      return false;\r\n    } else if (currentProject.project_start_date === \"\") {\r\n      setAlert(\"Please enter a start date for the project\");\r\n      setUpdateFailed(true);\r\n      return false;\r\n    } else if (!currentProject.project_in_progress) {\r\n      if (\r\n        currentProject.project_end_date === \"\" ||\r\n        !currentProject.project_end_date\r\n      ) {\r\n        setAlert(\r\n          'Please enter an end date for the project or select \"project in progress\"'\r\n        );\r\n        setUpdateFailed(true);\r\n        return false;\r\n      } else if (\r\n        currentProject.project_start_date > currentProject.project_end_date\r\n      ) {\r\n        setAlert(\"Project end date cannot be before project start date\");\r\n        setUpdateFailed(true);\r\n        return false;\r\n      }\r\n    }\r\n    setAlert(\"\");\r\n    setUpdateFailed(false);\r\n    return true;\r\n  };\r\n\r\n  const handleSave = (id) => {\r\n    if (validate()) {\r\n      var project_id = id;\r\n\r\n      var skillsSeparatedByCommas = \"\";\r\n      skillsSeparatedByCommas += currentProject.project_tech.map((tech) => {\r\n        return tech.label;\r\n      });\r\n      skillsSeparatedByCommas =\r\n        skillsSeparatedByCommas.length > 0\r\n          ? skillsSeparatedByCommas.substring(0, skillsSeparatedByCommas.length)\r\n          : \"\";\r\n\r\n      axios\r\n        .put(\r\n          `/student_project/${project_id}/update`,\r\n          {\r\n            student_id: profile.student_id,\r\n            project_name: currentProject.project_name,\r\n            project_description: currentProject.project_description,\r\n            project_link: currentProject.project_link,\r\n            project_tech: skillsSeparatedByCommas,\r\n            project_start_date: currentProject.project_start_date,\r\n            project_end_date: currentProject.project_in_progress\r\n              ? null\r\n              : currentProject.project_end_date,\r\n            project_in_progress: currentProject.project_in_progress,\r\n            project_role: currentProject.project_role,\r\n          },\r\n          getConfig()\r\n        )\r\n        .then((res) => {\r\n          let updated_projects = projects.map((item) => {\r\n            let updatedItem = { ...item };\r\n            if (project_id === item.project_id) {\r\n              updatedItem.project_id = item.project_id;\r\n              updatedItem.project_name = res.data.project_name;\r\n              updatedItem.project_description = res.data.project_description;\r\n              updatedItem.project_link = res.data.project_link;\r\n              updatedItem.project_tech = res.data.project_tech;\r\n              updatedItem.project_start_date = res.data.project_start_date;\r\n              updatedItem.project_end_date = res.data.project_end_date;\r\n              updatedItem.project_in_progress = res.data.project_in_progress;\r\n              updatedItem.project_role = res.data.project_role;\r\n            }\r\n            return updatedItem;\r\n          });\r\n          setProjects(updated_projects);\r\n          handleCloseEdit();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <VerticalTimeline layout={\"1-column-left\"}>\r\n        {projects.map((project, index) => (\r\n          <VerticalTimelineElement\r\n            className={classes.IconStyle}\r\n            iconStyle={{ background: \"#C8102E\", color: \"#fff\" }}\r\n            contentArrowStyle={{ borderRight: \"7px solid #C8102E\" }}\r\n            key={index}\r\n            icon={<WebRoundedIcon />}\r\n          >\r\n            <div className={classes.verticalElementTitle}>\r\n              <h3 className={classes.projectLabels}>Project Name:</h3>\r\n              <h3 style={{ color: \"rgb(200, 16, 46)\" }}>\r\n                \"{project.project_name}\"\r\n              </h3>\r\n            </div>\r\n            <div className={classes.verticalElementTitle}>\r\n              <h3 className={classes.projectLabels}>Project Role:</h3>\r\n              <h3 style={{ color: \"rgb(200, 16, 46)\" }}>\r\n                {project.project_role}\r\n              </h3>\r\n            </div>\r\n            <div className={classes.verticalElementTitle}>\r\n              {project.project_tech !== \"\" ? (\r\n                project.project_tech\r\n                  .split(\",\")\r\n                  .map((skill, index) => (\r\n                    <Chip label={skill} className={classes.chips} key={index} />\r\n                  ))\r\n              ) : (\r\n                <Chip label=\"None\" className={classes.chips} />\r\n              )}\r\n            </div>\r\n            <div className={classes.projectDescLabel}>\r\n              <h3>Project Description:</h3>\r\n              <p\r\n                className={classes.projectDesc}\r\n                style={{ fontWeight: \"lighter\" }}\r\n              >\r\n                * {project.project_description} {project.student_id}\r\n              </p>\r\n            </div>\r\n\r\n            <div className={clsx(classes.column, classes.helper)}>\r\n              <Typography variant=\"caption\" className={classes.projectLink}>\r\n                Project Source Link\r\n              </Typography>\r\n              <br />\r\n              <a\r\n                href={\r\n                  project.project_tech.includes(\"https://\")\r\n                    ? `${project.project_link}`\r\n                    : `https://${project.project_link}`\r\n                }\r\n                className={classes.link}\r\n                target=\"_blank\"\r\n              >\r\n                {project.project_link}\r\n              </a>\r\n            </div>\r\n            <div className={classes.projectDate}>\r\n              {/* <h5 style={{ fontWeight: \"lighter\", color: \"#333333\" }}>\r\n                Timeline: {project.project_start_date} -{\" \"}\r\n                {project.project_in_progress\r\n                  ? \"present\"\r\n                  : project.project_end_date}\r\n              </h5> */}\r\n              <h5>Project Timeline:</h5>\r\n              <h5 className={classes.projectTimeline}>\r\n                {project.project_start_date} -{\" \"}\r\n                {project.project_in_progress\r\n                  ? \"present\"\r\n                  : project.project_end_date}\r\n              </h5>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <IconButton\r\n                onClick={() => {\r\n                  handleClickOpenEdit(project);\r\n                }}\r\n                fontSize=\"small\"\r\n                className={classes.edit}\r\n              >\r\n                <EditIcon />\r\n              </IconButton>\r\n\r\n              {/* EDIT PROJECT MODAL BELOW */}\r\n\r\n              <Dialog\r\n                open={openEdit}\r\n                onClose={handleCloseEdit}\r\n                aria-labelledby=\"form-dialog-title\"\r\n              >\r\n                <DialogTitle\r\n                  classes={classes.addNewTitle}\r\n                  id=\"form-dialog-title\"\r\n                >\r\n                  EDIT {currentProject.project_name}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"project_name\"\r\n                    label=\"Project Name\"\r\n                    name=\"project_name\"\r\n                    helperText={`${currentProject.project_name.length}/200`}\r\n                    inputProps={{ maxLength: 200 }}\r\n                    type=\"string\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    value={currentProject.project_name}\r\n                    onChange={handleCurrentProjectChange}\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"project_role\"\r\n                    label=\"Project Role\"\r\n                    type=\"string\"\r\n                    name=\"project_role\"\r\n                    helperText={`${currentProject.project_role.length}/50`}\r\n                    inputProps={{ maxLength: 50 }}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    value={currentProject.project_role}\r\n                    onChange={handleCurrentProjectChange}\r\n                  />\r\n                  <Select\r\n                    AutoSize={true}\r\n                    closeMenuOnSelect={true}\r\n                    components={animatedComponents}\r\n                    name=\"project_skills\"\r\n                    value={options.filter((el) => {\r\n                      return currentProject.project_tech.some((f) => {\r\n                        return f.label === el.label;\r\n                      });\r\n                    })}\r\n                    isMulti\r\n                    isSearchable\r\n                    onChange={(e) => {\r\n                      e = e ? e : [];\r\n                      setCurrentProject({ ...currentProject, project_tech: e });\r\n                    }}\r\n                    options={options}\r\n                  />\r\n\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    id=\"outlined-multiline-static\"\r\n                    multiline\r\n                    label=\"Project Description\"\r\n                    rows={4}\r\n                    variant=\"outlined\"\r\n                    value={currentProject.project_description}\r\n                    fullWidth\r\n                    name=\"project_description\"\r\n                    helperText={`${currentProject.project_description.length}/500`}\r\n                    inputProps={{ maxLength: 500 }}\r\n                    type=\"string\"\r\n                    onChange={handleCurrentProjectChange}\r\n                  />\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    id=\"outlined-static\"\r\n                    placeholder=\"www.website.com\"\r\n                    label=\"Source Link\"\r\n                    value={currentProject.project_link}\r\n                    inputProps={{ maxLength: 200 }}\r\n                    name=\"project_link\"\r\n                    type=\"string\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    onChange={handleCurrentProjectChange}\r\n                  />\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    id=\"start_date\"\r\n                    type=\"date\"\r\n                    name=\"project_start_date\"\r\n                    value={currentProject.project_start_date}\r\n                    className={classes.projectDate}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    helperText=\"Start Date\"\r\n                    onChange={handleCurrentProjectChange}\r\n                  />\r\n                  {currentProject.project_in_progress ? null : (\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      id=\"end_date\"\r\n                      type=\"date\"\r\n                      name=\"project_end_date\"\r\n                      value={currentProject.project_end_date}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      className={classes.projectDate}\r\n                      variant=\"outlined\"\r\n                      helperText=\"End Date\"\r\n                      onChange={handleCurrentProjectChange}\r\n                    />\r\n                  )}\r\n                  <br />\r\n                  <FormControl component=\"fieldset\">\r\n                    <FormGroup aria-label=\"position\" row>\r\n                      <FormControlLabel\r\n                        value=\"end\"\r\n                        control={\r\n                          <Checkbox\r\n                            checked={currentProject.project_in_progress}\r\n                            style={{ color: \"#C8102E\" }}\r\n                            onChange={(e) => {\r\n                              setCurrentProject({\r\n                                ...currentProject,\r\n                                project_in_progress: e.target.checked,\r\n                              });\r\n                            }}\r\n                          />\r\n                        }\r\n                        label={\r\n                          <Typography style={{ fontSize: 15 }}>\r\n                            Check if project \"In Progress\"\r\n                          </Typography>\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </DialogContent>\r\n                <Snackbar\r\n                  open={updateFailed}\r\n                  autoHideDuration={6000}\r\n                  onClose={handleCloseUpdateFailed}\r\n                >\r\n                  <Alert onClose={handleCloseUpdateFailed} severity=\"error\">\r\n                    {alert}\r\n                  </Alert>\r\n                </Snackbar>\r\n                <DialogActions>\r\n                  <Button\r\n                    onClick={handleCloseEdit}\r\n                    style={{ backgroundColor: \"#f0f0f0\", color: \"#C8102E\" }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => {\r\n                      handleSave(currentProject.project_id);\r\n                    }}\r\n                    style={{ backgroundColor: \"#C8102E\", color: \"#FFFFFF\" }}\r\n                    className={classes.projectAdd}\r\n                  >\r\n                    SAVE\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n\r\n              {/* END OF EDIT PROJECT MODAL */}\r\n\r\n              {/* ----------------\r\n          THIS IS DELETE BUTTON BELOW\r\n          ---------------- */}\r\n              <IconButton\r\n                onClick={() => {\r\n                  handleClickOpenDelete(project);\r\n                }}\r\n                aria-label=\"delete\"\r\n                fontSize=\"small\"\r\n                className={classes.delete}\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n              <Dialog\r\n                open={openDelete}\r\n                onClose={handleCloseDelete}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n              >\r\n                <DialogTitle\r\n                  id=\"alert-dialog-title\"\r\n                  className={classes.dialogDelete}\r\n                >\r\n                  <WarningIcon />\r\n                  {\"WARNING!\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText id=\"alert-dialog-description\">\r\n                    You are about to delete {projectToDelete.project_name}{\" \"}\r\n                    project. Project will be removed permanently and action\r\n                    cannot be undone. Do you wish to continue?\r\n                  </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button\r\n                    onClick={handleCloseDelete}\r\n                    style={{ backgroundColor: \"#f0f0f0\", color: \"#C8102E\" }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => {\r\n                      handleDelete(projectToDelete.project_id);\r\n                    }}\r\n                    style={{ backgroundColor: \"#C8102E\", color: \"#FFFFFF\" }}\r\n                    className={classes.projectAdd}\r\n                  >\r\n                    DELETE\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n          </VerticalTimelineElement>\r\n        ))}\r\n      </VerticalTimeline>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StudentProject;\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  Checkbox,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport classNames from \"classnames\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport { getConfig } from \"../../authConfig\";\r\nimport { DataContext } from \"../../contexts/dataContext\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  addDiv: {\r\n    height: \"0px\",\r\n    paddingTop: \"40px\",\r\n  },\r\n  projectAdd: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"#C8102E\",\r\n    },\r\n    margin: theme.spacing(1),\r\n  },\r\n  addNewTitle: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  projectDate: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  projectRole: {\r\n    marginTop: \"5\",\r\n  },\r\n  selectTech: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    fontSize: \"16px\",\r\n  },\r\n}));\r\n\r\nexport default function StudentProjectAdd({ projects, setProjects, skills }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const { data } = useContext(DataContext);\r\n  const { profile } = data;\r\n  const [updateFailed, setUpdateFailed] = useState(false);\r\n  const handleCloseUpdateFailed = () => {\r\n    setUpdateFailed(false);\r\n  };\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  const [alert, setAlert] = useState(\"\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const animatedComponents = makeAnimated();\r\n\r\n  const options = skills.map((skill) => {\r\n    return {\r\n      label: skill.skill_name,\r\n      value: skill.id,\r\n    };\r\n  });\r\n\r\n  const [studentInput, setStudentInput] = useState({\r\n    //This is the data\r\n    project_description: \"\",\r\n    project_name: \"\",\r\n    project_link: \"\",\r\n    project_tech: \"\",\r\n    project_start_date: \"\",\r\n    project_end_date: \"\",\r\n    project_in_progress: false,\r\n    project_role: \"\",\r\n  });\r\n\r\n  const validate = () => {\r\n    if (studentInput.project_name === \"\") {\r\n      setAlert(\"Please enter a name for the project\");\r\n      setUpdateFailed(true);\r\n      return false;\r\n    } else if (studentInput.project_role === \"\") {\r\n      setAlert(\"Please enter a role for the project\");\r\n      setUpdateFailed(true);\r\n      return false;\r\n    } else if (studentInput.project_description === \"\") {\r\n      setAlert(\"Please enter a description for the project\");\r\n      setUpdateFailed(true);\r\n      return false;\r\n    } else if (studentInput.project_start_date === \"\") {\r\n      setAlert(\"Please enter a start date for the project\");\r\n      setUpdateFailed(true);\r\n      return false;\r\n    } else if (!studentInput.project_in_progress) {\r\n      if (\r\n        studentInput.project_end_date === \"\" ||\r\n        !studentInput.project_end_date\r\n      ) {\r\n        setAlert(\r\n          'Please enter an end date for the project or select \"project in progress\"'\r\n        );\r\n        setUpdateFailed(true);\r\n        return false;\r\n      } else if (\r\n        studentInput.project_start_date > studentInput.project_end_date\r\n      ) {\r\n        setAlert(\"Project end date cannot be before project start date\");\r\n        setUpdateFailed(true);\r\n        return false;\r\n      }\r\n    }\r\n    setAlert(\"\");\r\n    setUpdateFailed(false);\r\n    return true;\r\n  };\r\n\r\n  const resetAllFields = () => {\r\n    studentInput.project_name = \"\";\r\n    studentInput.project_description = \"\";\r\n    studentInput.project_link = \"\";\r\n    studentInput.project_tech = \"\";\r\n    studentInput.project_start_date = \"\";\r\n    studentInput.project_end_date = \"\";\r\n    studentInput.project_in_progress = false;\r\n    studentInput.project_role = \"\";\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (validate()) {\r\n      const data = {\r\n        student_id: profile.student_id,\r\n        project_name: studentInput.project_name,\r\n        project_description: studentInput.project_description,\r\n        project_link: studentInput.project_link,\r\n        project_tech: studentInput.project_tech,\r\n        project_start_date: studentInput.project_start_date,\r\n        project_end_date: studentInput.project_in_progress\r\n          ? null\r\n          : studentInput.project_end_date,\r\n        project_in_progress: studentInput.project_in_progress,\r\n        project_role: studentInput.project_role,\r\n      };\r\n      axios\r\n        .post(\"/student_project/create\", data, getConfig())\r\n        .then((res) => {\r\n          const newProject = {\r\n            project_id: res.data.project_id,\r\n            project_name: res.data.project_name,\r\n            project_description: res.data.project_description,\r\n            project_link: res.data.project_link,\r\n            project_tech: res.data.project_tech,\r\n            project_start_date: res.data.project_start_date,\r\n            project_end_date: res.data.project_end_date,\r\n            project_in_progress: res.data.project_in_progress,\r\n            project_role: res.data.project_role,\r\n          };\r\n          setProjects([...projects, newProject]);\r\n          resetAllFields();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n      setOpen(false);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <div\r\n          className={classes.addDiv}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Button\r\n            onClick={handleClickOpen}\r\n            size=\"medium\"\r\n            variant=\"outlined\"\r\n            className={classes.projectAdd}\r\n            style={{\r\n              backgroundColor: \"#C8102E\",\r\n              color: \"#FFFFFF\",\r\n              margin: \"20px\",\r\n            }}\r\n          >\r\n            <AddIcon\r\n              className={classNames(classes.leftIcon, classes.iconSmall)}\r\n            />\r\n            ADD NEW PROJECT\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">ADD NEW PROJECT</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"project_name\"\r\n            label=\"Project Name\"\r\n            fullWidth\r\n            required\r\n            variant=\"outlined\"\r\n            name=\"project_name\"\r\n            helperText={` Please enter an unique project name. ${studentInput.project_name.length}/200`}\r\n            inputProps={{ maxLength: 200 }}\r\n            value={studentInput.project_name || \"\"}\r\n            onChange={(e) => {\r\n              setStudentInput({\r\n                ...studentInput,\r\n                project_name: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n          <TextField\r\n            className={classes.projectRole}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"project_role\"\r\n            label=\"Project Role\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            name=\"project_role\"\r\n            inputProps={{ maxLength: 50 }}\r\n            helperText={`${studentInput.project_role.length}/50`}\r\n            value={studentInput.project_role || \"\"}\r\n            onChange={(e) => {\r\n              setStudentInput({\r\n                ...studentInput,\r\n                project_role: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n          <Select\r\n            className={classes.selectTech}\r\n            AutoSize={true}\r\n            closeMenuOnSelect={true}\r\n            components={animatedComponents}\r\n            isMulti\r\n            placeholder=\"Project Tech\"\r\n            isSearchable\r\n            options={options}\r\n            onChange={(e) => {\r\n              var skillsSeparatedByCommas = \"\";\r\n              if (e !== null) {\r\n                skillsSeparatedByCommas = Array.prototype.map\r\n                  .call(e, (s) => s.label)\r\n                  .toString(); // \"A,B,C\"\r\n                if (skillsSeparatedByCommas.length > 0)\r\n                  skillsSeparatedByCommas = skillsSeparatedByCommas.substring(\r\n                    0,\r\n                    skillsSeparatedByCommas.length\r\n                  );\r\n              }\r\n              setStudentInput({\r\n                ...studentInput,\r\n                project_tech: skillsSeparatedByCommas,\r\n              });\r\n            }}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"filled-multiline-static\"\r\n            multiline\r\n            rows={4}\r\n            helperText={`Project Description. ${studentInput.project_description.length}/500`}\r\n            required\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            inputProps={{ maxLength: 500 }}\r\n            name=\"project_description\"\r\n            value={studentInput.project_description || \"\"}\r\n            onChange={(e) => {\r\n              setStudentInput({\r\n                ...studentInput,\r\n                project_description: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"outlined-static\"\r\n            helperText={`Student Project Link. ${studentInput.project_link.length}/200`}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            name=\"project_link\"\r\n            inputProps={{ maxLength: 200 }}\r\n            value={studentInput.project_link || \"\"}\r\n            onChange={(e) => {\r\n              setStudentInput({\r\n                ...studentInput,\r\n                project_link: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"date\"\r\n            type=\"date\"\r\n            className={classes.projectDate}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            required\r\n            helperText=\"Start Date\"\r\n            name=\"project_start_date\"\r\n            value={studentInput.project_start_date || \"\"}\r\n            onChange={(e) => {\r\n              setStudentInput({\r\n                ...studentInput,\r\n                project_start_date: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n\r\n          {!studentInput.project_in_progress ? (\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"date\"\r\n              type=\"date\"\r\n              className={classes.projectDate}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              variant=\"outlined\"\r\n              helperText=\"End Date\"\r\n              name=\"project_end_date\"\r\n              required\r\n              value={studentInput.project_end_date || \"\"}\r\n              onChange={(e) => {\r\n                setStudentInput({\r\n                  ...studentInput,\r\n                  project_end_date: e.target.value,\r\n                });\r\n              }}\r\n            />\r\n          ) : null}\r\n          <FormControl component=\"fieldset\">\r\n            <FormGroup aria-label=\"position\" row>\r\n              <FormControlLabel\r\n                value=\"end\"\r\n                control={\r\n                  <Checkbox\r\n                    checked={studentInput.project_in_progress}\r\n                    style={{ color: \"#C8102E\" }}\r\n                    onChange={(e) => {\r\n                      setStudentInput({\r\n                        ...studentInput,\r\n                        project_in_progress: e.target.checked,\r\n                      });\r\n                    }}\r\n                  />\r\n                }\r\n                label={\r\n                  <Typography style={{ fontSize: 15 }}>\r\n                    Check if project \"In Progress\"\r\n                  </Typography>\r\n                }\r\n              />\r\n            </FormGroup>\r\n          </FormControl>\r\n        </DialogContent>\r\n        <Snackbar\r\n          open={updateFailed}\r\n          autoHideDuration={6000}\r\n          onClose={handleCloseUpdateFailed}\r\n        >\r\n          <Alert onClose={handleCloseUpdateFailed} severity=\"error\">\r\n            {alert}\r\n          </Alert>\r\n        </Snackbar>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleClose}\r\n            style={{ backgroundColor: \"#f0f0f0\", color: \"#C8102E\" }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={handleSave}\r\n            style={{ backgroundColor: \"#C8102E\", color: \"#FFFFFF\" }}\r\n            className={classes.projectAdd}\r\n          >\r\n            Add Project\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    toTop: {\r\n        zIndex: 2,\r\n        bottom: '2vh',\r\n        backgroundColor: '#DCDCDC',\r\n        color: 'black',\r\n        \"&:hover, &.Mui-focusVisible\": {\r\n            transition: '0.3s',\r\n            color: '#FFFFFF',\r\n            backgroundColor: '#C8102E'\r\n        },\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto'\r\n    }\r\n}))\r\n\r\nconst StudentProjectScroll = (\r\n    showBelow\r\n) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [show, setShow] = useState(showBelow ? false : true)\r\n\r\n    const handleScroll = () => {\r\n        if (window.pageYOffset > showBelow) {\r\n            if (!show) setShow(true)\r\n        } else {\r\n            if (show) setShow(false)\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        window[`scrollTo`]({ top: 0, behavior: `smooth` })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (showBelow) {\r\n            window.addEventListener(`StudentProjectScroll`, handleScroll)\r\n            return () => window.removeEventListener(`StudentProjectScroll`, handleScroll)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n                <IconButton onClick={handleClick} className={classes.toTop}>\r\n                    <ExpandLessIcon />\r\n                </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentProjectScroll\r\n","import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport StudentProject from \"../../components/StudentProject/StudentProject\";\r\nimport StudentProjectAdd from \"../../components/StudentProject/StudentProjectAdd\";\r\nimport StudentProjectScroll from \"../../components/StudentProject/StudentProjectScroll\";\r\nimport StudentDashboard from \"../../assets/StudentDashboard.jpg\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  TextField,\r\n  Box,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  DialogContent,\r\n  List,\r\n  ListItem,\r\n  Divider,\r\n  ListItemIcon,\r\n  IconButton,\r\n  Button,\r\n  Typography,\r\n  FormControl,\r\n  MenuItem,\r\n  Grid,\r\n  Chip,\r\n  Select,\r\n  FormHelperText,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport FormatListBulletedTwoToneIcon from \"@material-ui/icons/FormatListBulletedTwoTone\";\r\nimport SchoolRoundedIcon from \"@material-ui/icons/SchoolRounded\";\r\nimport StarsIcon from \"@material-ui/icons/Stars\";\r\nimport EditTwoToneIcon from \"@material-ui/icons/EditTwoTone\";\r\nimport ClearRoundedIcon from \"@material-ui/icons/ClearRounded\";\r\nimport CheckRoundedIcon from \"@material-ui/icons/CheckRounded\";\r\nimport HorizontalSplitIcon from \"@material-ui/icons/HorizontalSplit\";\r\nimport ContactsRoundedIcon from \"@material-ui/icons/ContactsRounded\";\r\nimport LocationOnRoundedIcon from \"@material-ui/icons/LocationOnRounded\";\r\nimport { DataContext } from \"../../contexts/dataContext\";\r\nimport { getConfig } from \"../../authConfig\";\r\nimport axios from \"axios\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogInput: {\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  loginAlert: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  dialogConfirm: {\r\n    marginBottom: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  profileLogo: {\r\n    backgroundRepeat: \"no-repeat\",\r\n    position: \"relative\",\r\n    objectPosition: \"20% 30%\",\r\n    width: \"100vw\",\r\n    height: \"15vw\",\r\n    maxWidth: \"100%\",\r\n    zIndex: 1,\r\n    objectFit: \"cover\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  icon: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  skills: {\r\n    position: \"relative\",\r\n    border: \"1px solid #A6A6A6\",\r\n    borderRadius: \"50%\",\r\n    color: \"#5B5B5B\",\r\n    padding: \"1%\",\r\n    width: \"20px\",\r\n  },\r\n  skillsContainer: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  sectionHeader: {\r\n    fontWeight: \"bold\",\r\n    color: \"#606060\",\r\n  },\r\n  sectionContent: {\r\n    color: \"#5B5B5B\",\r\n    display: \"inline\",\r\n  },\r\n  // profileImage: {\r\n  //   width: theme.spacing(20),\r\n  //   height: theme.spacing(20),\r\n  //   position: \"absolute\",\r\n  //   top: \"15%\",\r\n  //   right: \"4%\",\r\n  //   zIndex: 1,\r\n  //   objectFit: \"contain\",\r\n  // },\r\n  select: {\r\n    width: \"30vh\",\r\n    fontSize: \"small\",\r\n  },\r\n  myProjects: {\r\n    fontWeight: \"bold\",\r\n    color: \"#606060\",\r\n    padding: \"0 auto\",\r\n  },\r\n  flexColumn: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  flexRow: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  skillRoot: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    flexWrap: \"wrap\",\r\n    listStyle: \"none\",\r\n    padding: theme.spacing(0.5),\r\n    margin: 0,\r\n    \"& > * \": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n  beginnerChip: {\r\n    margin: theme.spacing(0.5),\r\n    color: theme.palette.text.primary,\r\n    borderColor: theme.palette.text.primary,\r\n  },\r\n  intermediateChip: {\r\n    margin: theme.spacing(0.5),\r\n    color: theme.palette.warning.main,\r\n    borderColor: theme.palette.warning.main,\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\",\r\n  },\r\n  expertChip: {\r\n    margin: theme.spacing(0.5),\r\n    color: theme.palette.success.main,\r\n    borderColor: theme.palette.success.main,\r\n  },\r\n  beginnerDeleteIcon: {\r\n    fill: theme.palette.text.main,\r\n  },\r\n  intermediateDeleteIcon: {\r\n    fill: theme.palette.warning.main,\r\n  },\r\n  expertDeleteIcon: {\r\n    fill: theme.palette.success.main,\r\n  },\r\n  labelAsterisk: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nexport default function StudentProfile() {\r\n  //this is the for the stylings of the page\r\n  const classes = useStyles();\r\n  const states = [\r\n    \"AL\",\r\n    \"AK\",\r\n    \"AZ\",\r\n    \"AR\",\r\n    \"CA\",\r\n    \"CO\",\r\n    \"CT\",\r\n    \"DE\",\r\n    \"DC\",\r\n    \"FL\",\r\n    \"GA\",\r\n    \"HI\",\r\n    \"ID\",\r\n    \"IL\",\r\n    \"IN\",\r\n    \"IA\",\r\n    \"KS\",\r\n    \"KY\",\r\n    \"LA\",\r\n    \"ME\",\r\n    \"MD\",\r\n    \"MA\",\r\n    \"MI\",\r\n    \"MN\",\r\n    \"MS\",\r\n    \"MO\",\r\n    \"MT\",\r\n    \"NE\",\r\n    \"NV\",\r\n    \"NH\",\r\n    \"NJ\",\r\n    \"NM\",\r\n    \"NY\",\r\n    \"NC\",\r\n    \"ND\",\r\n    \"OH\",\r\n    \"OK\",\r\n    \"OR\",\r\n    \"PA\",\r\n    \"RI\",\r\n    \"SC\",\r\n    \"SD\",\r\n    \"TN\",\r\n    \"TX\",\r\n    \"UT\",\r\n    \"VT\",\r\n    \"VA\",\r\n    \"WA\",\r\n    \"WV\",\r\n    \"WI\",\r\n    \"WY\",\r\n  ];\r\n  //initially get the data from DataContext\r\n  const { data, dispatch } = useContext(DataContext);\r\n  const { profile } = data;\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [authError, setAuthError] = useState(\"\");\r\n  //This is when user selects from the select component\r\n  const [skillName, setSkillName] = useState(\"\");\r\n  const [experience, setExperience] = useState(\"\");\r\n  //This is for list of skills from database\r\n  const [skills, setSkills] = useState(null);\r\n  const [projects, setProjects] = useState();\r\n\r\n  //this is the original data retrieved from the api\r\n  const [studentInfo, setStudentInfo] = useState({\r\n    //This is the data from api\r\n    student_id: null,\r\n    full_name: null,\r\n    date_of_birth: null,\r\n    graduation_date: null,\r\n    major: null,\r\n    degree: null,\r\n    student_skills: [],\r\n    student_description: null,\r\n    contact_email: null,\r\n    phoneNumber: null,\r\n    streetAddress: null,\r\n    city: null,\r\n    state: null,\r\n    zipcode: null,\r\n  });\r\n  const [alert, setAlert] = useState(\"\");\r\n  const [updateFailed, setUpdateFailed] = useState(false);\r\n  const handleCloseUpdateFailed = () => {\r\n    setUpdateFailed(false);\r\n  };\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  const getStreetAddress = (address) => {\r\n    if (address !== \"\") {\r\n      const res = address.split(\"|\");\r\n      return res[0];\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const getCity = (address) => {\r\n    if (address !== \"\") {\r\n      const res = address.split(\"|\");\r\n      return res[1];\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const getState = (address) => {\r\n    if (address !== \"\") {\r\n      const res = address.split(\"|\");\r\n      return res[2];\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const getStudentAddress = () => {\r\n    if (studentInput.streetAddress && studentInput.city && studentInput.state) {\r\n      return `${studentInput.streetAddress}|${studentInput.city}|${studentInput.state}`;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  //this is the booleans for opening or closing edit fields\r\n  const [studentEdit, showStudentEdit] = useState({\r\n    //This tells whether to show input fields.\r\n    studentEditBool: false,\r\n  });\r\n  //this is the copy of the original data that will be manipulated\r\n  const [studentInput, setStudentInput] = useState({\r\n    //This is the data\r\n    student_id: null,\r\n    full_name: null,\r\n    date_of_birth: null,\r\n    graduation_date: null,\r\n    major: null,\r\n    degree: null,\r\n    student_skills: [],\r\n    student_description: null,\r\n    contact_email: null,\r\n    phoneNumber: null,\r\n    streetAddress: null,\r\n    city: null,\r\n    state: null,\r\n    zipcode: null,\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    student_description: null,\r\n    student_skills: null,\r\n    contact_email: null,\r\n    phoneNumber: null,\r\n  });\r\n\r\n  const firstRender = useRef(true);\r\n\r\n  const getSkillsRepo = async () => {\r\n    const response = await axios.get(`/skill/`, getConfig());\r\n    setSkills(response.data);\r\n  };\r\n  const getStudentProjects = async () => {\r\n    const response = await axios.post(\r\n      `/student_project/list_by_student`,\r\n      {\r\n        username_id: parseInt(localStorage.getItem(\"email_id\")),\r\n      },\r\n      getConfig()\r\n    );\r\n    setProjects(response.data);\r\n  };\r\n  useEffect(() => {\r\n    getSkillsRepo();\r\n    getStudentProjects();\r\n    setStudentInfo({\r\n      student_id: profile.student_id,\r\n      full_name: profile.full_name,\r\n      date_of_birth: profile.date_of_birth,\r\n      graduation_date: profile.graduation_date,\r\n      major: profile.major,\r\n      degree: profile.degree,\r\n      student_skills: profile.student_skills,\r\n      student_description: profile.student_description,\r\n      contact_email: profile.student_contact_email,\r\n      phoneNumber: profile.student_phone_no,\r\n      streetAddress: getStreetAddress(profile.student_address),\r\n      city: getCity(profile.student_address),\r\n      state: getState(profile.student_address),\r\n      zipcode: profile.student_zip,\r\n    });\r\n    setStudentInput({\r\n      student_id: profile.student_id,\r\n      full_name: profile.full_name,\r\n      date_of_birth: profile.date_of_birth,\r\n      graduation_date: profile.graduation_date,\r\n      major: profile.major,\r\n      degree: profile.degree,\r\n      student_skills: profile.student_skills,\r\n      student_description: profile.student_description,\r\n      contact_email: profile.student_contact_email,\r\n      phoneNumber: profile.student_phone_no,\r\n      streetAddress: getStreetAddress(profile.student_address),\r\n      city: getCity(profile.student_address),\r\n      state: getState(profile.student_address),\r\n      zipcode: profile.student_zip,\r\n    });\r\n  }, [profile]);\r\n\r\n  //opening the edit field\r\n  const handleOpenEdit = (key) => {\r\n    showStudentEdit({\r\n      ...studentEdit,\r\n      [key]: true,\r\n    });\r\n  };\r\n  //closing the edit field\r\n  const handleCloseEdit = (key) => {\r\n    showStudentEdit({\r\n      ...studentEdit,\r\n      [key]: false,\r\n    });\r\n  };\r\n\r\n  //selecting a skill\r\n  const handleSkillChange = (e) => {\r\n    setSkillName(e.target.value);\r\n  };\r\n\r\n  //selecting experience\r\n  const handleExpChange = (e) => {\r\n    setExperience(e.target.value);\r\n  };\r\n\r\n  //adding skill to list\r\n  const addSkill = () => {\r\n    if (skillName && experience) {\r\n      let unique = true;\r\n      for (let i = 0; i < studentInput.student_skills.length; i++) {\r\n        if (studentInput.student_skills[i].skill_name === skillName) {\r\n          unique = false;\r\n          setAlert(`${skillName} already exists`);\r\n          setUpdateFailed(true);\r\n          break;\r\n        }\r\n      }\r\n      if (unique) {\r\n        setStudentInput((prevStudentInput) => {\r\n          return {\r\n            ...prevStudentInput,\r\n            student_skills: [\r\n              ...prevStudentInput.student_skills,\r\n              {\r\n                skill_name: skillName,\r\n                experience_level: experience,\r\n              },\r\n            ],\r\n          };\r\n        });\r\n        setUpdateFailed(false);\r\n        setAlert(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  //deleting a skill\r\n  const deleteSkill = (skllToDelete) => {\r\n    setStudentInput((prevStudentInput) => {\r\n      return {\r\n        ...prevStudentInput,\r\n        student_skills: prevStudentInput.student_skills.filter(\r\n          (skill) => skill.skill_name !== skllToDelete.skill_name\r\n        ),\r\n      };\r\n    });\r\n  };\r\n\r\n  const validate = () => {\r\n    let errors = {};\r\n    if (studentInput.student_description === \"\") {\r\n      errors.student_description = \"Required\";\r\n    } else if (studentInput.student_description.length > 500) {\r\n      errors.student_description = \"Max length of 500 characters reached\";\r\n    } else {\r\n      errors.student_description = null;\r\n    }\r\n    if (studentInput.contact_email === \"\") {\r\n      errors.contact_email = \"Required\";\r\n    } else {\r\n      errors.contact_email = null;\r\n    }\r\n    if (\r\n      studentInput.phoneNumber === \"\" ||\r\n      studentInput.phoneNumber.length < 10\r\n    ) {\r\n      errors.phoneNumber = \"Required\";\r\n    } else {\r\n      errors.phoneNumber = null;\r\n    }\r\n    if (studentInput.streetAddress === \"\") {\r\n      errors.streetAddress = \"Required\";\r\n    } else {\r\n      errors.streetAddress = null;\r\n    }\r\n    if (studentInput.city === \"\") {\r\n      errors.city = \"Required\";\r\n    } else {\r\n      errors.city = null;\r\n    }\r\n    if (studentInput.state === \"\") {\r\n      errors.state = \"Required\";\r\n    } else {\r\n      errors.state = null;\r\n    }\r\n    if (studentInput.zipcode === \"\" || studentInput.zipcode.length < 5) {\r\n      errors.zipcode = \"Required\";\r\n    } else {\r\n      errors.zipcode = null;\r\n    }\r\n    if (studentInput.student_skills.length <= 0) {\r\n      errors.student_skills = \"At least one skill is required\";\r\n    } else {\r\n      errors.student_skills = null;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  //saving the edited data\r\n  const handleSave = () => {\r\n    setErrors(validate());\r\n  };\r\n\r\n  const updateProfile = async () => {\r\n    axios\r\n      .post(\"/token/\", {\r\n        email: email,\r\n        password: password,\r\n      })\r\n      .then((res) => {\r\n        localStorage.setItem(\"slug\", res.data.slug);\r\n        let slug = localStorage.getItem(\"slug\");\r\n        axios\r\n          .put(\r\n            `/student_profile/${slug}/update`,\r\n            {\r\n              username: localStorage.getItem(\"email_id\"),\r\n              full_name: studentInput.full_name,\r\n              date_of_birth: studentInput.date_of_birth,\r\n              graduation_date: studentInput.graduation_date,\r\n              student_skills: studentInput.student_skills,\r\n              major: studentInput.major,\r\n              degree: studentInput.degree,\r\n              student_description: studentInput.student_description,\r\n              student_contact_email: studentInput.contact_email,\r\n              student_phone_no: studentInput.phoneNumber,\r\n              student_address: getStudentAddress(),\r\n              student_zip: studentInput.zipcode,\r\n            },\r\n            getConfig()\r\n          )\r\n          .then((res) => {\r\n            dispatch({ type: \"UPDATE_PROFILE\", payload: res.data });\r\n            handleCloseEdit(\"studentEditBool\");\r\n            setDialogOpen(false);\r\n            axios\r\n              .post(\"/token/\", {\r\n                email: email,\r\n                password: password,\r\n              })\r\n              .then((res) => {\r\n                localStorage.setItem(\"slug\", res.data.slug);\r\n                setEmail(\"\");\r\n                setPassword(\"\");\r\n              });\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        setAuthError(\r\n          err.response.data.detail +\r\n            \". Make sure your email and password is correct.\"\r\n        );\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstRender.current) {\r\n      firstRender.current = false;\r\n    } else {\r\n      if (Object.entries(errors).length !== 0) {\r\n        let errorExists = false;\r\n        Object.keys(errors).forEach((key) => {\r\n          if (errors[key] !== null) {\r\n            errorExists = true;\r\n          }\r\n        });\r\n        if (!errorExists) {\r\n          setDialogOpen(true);\r\n        }\r\n      }\r\n    }\r\n  }, [errors]);\r\n\r\n  //not saving the edited data if the user does not want to change\r\n  const handleCancel = () => {\r\n    setStudentInput(studentInfo);\r\n    handleCloseEdit(\"studentEditBool\");\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setAuthError(\"\");\r\n    setDialogOpen(false);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    updateProfile();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <img\r\n          alt=\"profile background\"\r\n          className={classes.profileLogo}\r\n          src={StudentDashboard}\r\n        ></img>\r\n        <>\r\n          {studentEdit.studentEditBool === false ? (\r\n            <Grid container justify=\"flex-end\" style={{ paddingRight: \"20px\" }}>\r\n              <IconButton\r\n                edge=\"end\"\r\n                className={classes.icon}\r\n                onClick={() => {\r\n                  handleOpenEdit(\"studentEditBool\");\r\n                }}\r\n              >\r\n                <EditTwoToneIcon />\r\n              </IconButton>\r\n            </Grid>\r\n          ) : (\r\n            <Grid\r\n              container\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n              style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}\r\n            >\r\n              <Typography>\r\n                <span className={classes.labelAsterisk}>*</span> - Required\r\n                Fields\r\n              </Typography>\r\n              <div>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  className={classes.icon}\r\n                  onClick={() => {\r\n                    handleCancel();\r\n                  }}\r\n                >\r\n                  <ClearRoundedIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  className={classes.icon}\r\n                  onClick={() => {\r\n                    handleSave();\r\n                  }}\r\n                >\r\n                  <CheckRoundedIcon style={{ color: \"green\" }} />\r\n                </IconButton>\r\n              </div>\r\n            </Grid>\r\n          )}\r\n        </>\r\n        <List className={classes.root}>\r\n          <ListItem>\r\n            <ListItemIcon edge=\"start\">\r\n              <FormatListBulletedTwoToneIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>\r\n              {studentEdit.studentEditBool === false ? (\r\n                <div\r\n                  className={classes.flexRow}\r\n                  style={{ justifyContent: \"space-between\" }}\r\n                >\r\n                  <div className={classes.flexColumn}>\r\n                    <Typography className={classes.sectionHeader}>\r\n                      Student Description\r\n                    </Typography>\r\n                    <Typography className={classes.sectionContent}>\r\n                      {studentInfo.student_description}\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <div>\r\n                    <FormControl\r\n                      className={classes.fullWidth}\r\n                      error={errors.student_description && studentInput === \"\"}\r\n                    >\r\n                      <Typography className={classes.sectionHeader}>\r\n                        Student Description\r\n                        {studentEdit.studentEditBool ? (\r\n                          <span className={classes.labelAsterisk}> *</span>\r\n                        ) : null}\r\n                      </Typography>\r\n                      <TextField\r\n                        multiline\r\n                        helperText={`${studentInput.student_description.length}/500`}\r\n                        value={studentInput.student_description}\r\n                        name=\"student_description\"\r\n                        inputProps={{ maxLength: 500 }}\r\n                        fullWidth\r\n                        onChange={(e) => {\r\n                          setStudentInput({\r\n                            ...studentInput,\r\n                            student_description: e.target.value,\r\n                          });\r\n                        }}\r\n                      ></TextField>\r\n                      {errors.student_description &&\r\n                      studentInput.student_description === \"\" ? (\r\n                        <FormHelperText>\r\n                          {errors.student_description}\r\n                        </FormHelperText>\r\n                      ) : null}\r\n                    </FormControl>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </ListItemText>\r\n          </ListItem>\r\n          <Divider variant=\"inset\" component=\"li\" />\r\n          <ListItem alignItems=\"flex-start\">\r\n            <ListItemIcon>\r\n              <SchoolRoundedIcon />\r\n            </ListItemIcon>\r\n            {studentEdit.studentEditBool === false ? (\r\n              <div className={classes.flexColumn}>\r\n                <Typography className={classes.sectionHeader}>\r\n                  Academic\r\n                </Typography>\r\n                <Typography\r\n                  className={classes.sectionContent}\r\n                >{`Graduation Date: ${studentInfo.graduation_date}`}</Typography>\r\n                <Typography\r\n                  className={classes.sectionContent}\r\n                >{`Degree: ${studentInfo.degree}`}</Typography>\r\n                <Typography className={classes.sectionContent}>\r\n                  {\" \"}\r\n                  {`Major: ${studentInfo.major}`}\r\n                </Typography>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <Typography className={classes.sectionHeader}>\r\n                  Academic\r\n                </Typography>\r\n                <Grid container spacing={2}>\r\n                  <Grid item>\r\n                    <FormControl>\r\n                      <Typography>\r\n                        Graduation Date\r\n                        {studentEdit.studentEditBool ? (\r\n                          <span className={classes.labelAsterisk}> *</span>\r\n                        ) : null}\r\n                      </Typography>\r\n                      <TextField\r\n                        type=\"date\"\r\n                        name=\"graduation_date\"\r\n                        onChange={(e) => {\r\n                          setStudentInput({\r\n                            ...studentInput,\r\n                            graduation_date: e.target.value,\r\n                          });\r\n                        }}\r\n                        value={studentInput.graduation_date}\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <FormControl>\r\n                      <Typography>\r\n                        Degree\r\n                        {studentEdit.studentEditBool ? (\r\n                          <span className={classes.labelAsterisk}> *</span>\r\n                        ) : null}\r\n                      </Typography>\r\n                      <select\r\n                        name=\"degree\"\r\n                        value={studentInput.select}\r\n                        className={classes.degree}\r\n                        onChange={(e) => {\r\n                          setStudentInput({\r\n                            ...studentInput,\r\n                            degree: e.target.value,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <option value=\"Undergraduate\">Undergraduate</option>\r\n                        <option value=\"Graduate\">Graduate</option>\r\n                      </select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <FormControl>\r\n                      <Typography>\r\n                        Major\r\n                        {studentEdit.studentEditBool ? (\r\n                          <span className={classes.labelAsterisk}> *</span>\r\n                        ) : null}\r\n                      </Typography>\r\n                      <select\r\n                        name=\"major\"\r\n                        className={classes.select}\r\n                        value={studentInput.major}\r\n                        onChange={(e) => {\r\n                          setStudentInput({\r\n                            ...studentInput,\r\n                            major: e.target.value,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <optgroup label=\"Gerald D. Hines College of Architecture and Design\">\r\n                          <option value=\"Architecture\">Architecture</option>\r\n                          <option value=\"Environmental Design\">\r\n                            Environmental Design\r\n                          </option>\r\n                          <option value=\"Industrial Design\">\r\n                            Industrial Design\r\n                          </option>\r\n                          <option value=\"Interior Architecture\">\r\n                            Interior Architecture\r\n                          </option>\r\n                        </optgroup>\r\n                        <optgroup label=\"Kathrine G. McGovern College of the Arts\">\r\n                          <option value=\"Applied Music\">Applied Music</option>\r\n                          <option value=\"Art\">Art</option>\r\n                          <option value=\"Art History\">Art History</option>\r\n                          <option value=\"Dance\">Dance</option>\r\n                          <option value=\"Graphic Design\">Graphic Design</option>\r\n                          <option value=\"Music\">Music</option>\r\n                          <option value=\"Painting\">Painting</option>\r\n                          <option value=\"Photography\">\r\n                            Photography/Digital Media\r\n                          </option>\r\n                          <option value=\"Sculpture\">Sculpture</option>\r\n                          <option value=\"Theatre\">Theatre</option>\r\n                        </optgroup>\r\n                        <optgroup label=\"C. T. Bauer College of Business\">\r\n                          <option value=\"Accounting\">Accounting</option>\r\n                          <option value=\"Entrepreneurship\">\r\n                            Entrepreneurship\r\n                          </option>\r\n                          <option value=\"Finance\">Finance</option>\r\n                          <option value=\"Management\">Management</option>\r\n                          <option value=\"Management Information Systems\">\r\n                            Management Information Systems\r\n                          </option>\r\n                          <option value=\"Marketing\">Marketing</option>\r\n                          <option value=\"Suppy Chain Management\">\r\n                            Suppy Chain Management\r\n                          </option>\r\n                        </optgroup>\r\n                        <optgroup label=\"College of Education\">\r\n                          <option value=\"Health\">Health</option>\r\n                          <option value=\"Human Development and Family Studies\">\r\n                            Human Development and Family Studies\r\n                          </option>\r\n                          <option value=\"Teaching and Learning\">\r\n                            Teaching and Learning\r\n                          </option>\r\n                        </optgroup>\r\n                        <optgroup label=\"Cullen College of Engineering\">\r\n                          <option value=\"Biomedical Engineering\">\r\n                            Biomedical Engineering\r\n                          </option>\r\n\r\n                          <option value=\"Chemical Engineering\">\r\n                            Chemical Engineering\r\n                          </option>\r\n\r\n                          <option value=\"Civil Engineering\">\r\n                            Civil Engineering\r\n                          </option>\r\n\r\n                          <option value=\"Computer Engineering\">\r\n                            Computer Engineering\r\n                          </option>\r\n\r\n                          <option value=\"Computer Engineering and Analytics\">\r\n                            Computer Engineering and Analytics\r\n                          </option>\r\n                          <option value=\"Construction Engineering\">\r\n                            Construction Engineering\r\n                          </option>\r\n                          <option value=\"Electrical Engineering\">\r\n                            Electrical Engineering\r\n                          </option>\r\n                          <option value=\"Industrial Engineering\">\r\n                            Industrial Engineering\r\n                          </option>\r\n                          <option value=\"Mechanical Engineering\">\r\n                            Mechanical Engineering\r\n                          </option>\r\n                          <option value=\"Petroleum Engineering\">\r\n                            Petroleum Engineering\r\n                          </option>\r\n                          <option value=\"Systems Engineering\">\r\n                            Systems Engineering\r\n                          </option>\r\n                        </optgroup>\r\n                        <optgroup label=\"Conrad N. Hilton College of Hotel and Restaurant Management\">\r\n                          <option value=\"Hotel and Restaurant Management\">\r\n                            Hotel and Restaurant Management\r\n                          </option>\r\n                        </optgroup>\r\n                        <optgroup label=\"College of Liberal Arts and Social Sciences\">\r\n                          <option value=\"African American Studies\">\r\n                            African American Studies\r\n                          </option>\r\n                          <option value=\"American_Sign_Language_Interpreting\">\r\n                            American Sign Language Interpreting\r\n                          </option>\r\n                          <option value=\"Anthropology\">Anthropology</option>\r\n                          <option value=\"Chinese Studies\">\r\n                            Chinese Studies\r\n                          </option>\r\n                          <option value=\"Communication Sciences and Disorders\">\r\n                            Communication Sciences and Disorders\r\n                          </option>\r\n                          <option value=\"Communication_Studies\">\r\n                            Communication Studies\r\n                          </option>\r\n                          <option value=\"Economics\">Economics</option>\r\n                          <option value=\"English\">English</option>\r\n                          <option value=\"Exercise Science\">\r\n                            Exercise Science\r\n                          </option>\r\n                          <option value=\"Fitness and Sports\">\r\n                            Fitness and Sports\r\n                          </option>\r\n\r\n                          <option value=\"French\">French</option>\r\n                          <option value=\"Health Communication\">\r\n                            Health Communication\r\n                          </option>\r\n                          <option value=\"History\">History</option>\r\n                          <option value=\"Human Nutrition and Foods\">\r\n                            Human Nutrition and Foods\r\n                          </option>\r\n                          <option value=\"Journalism\">Journalism</option>\r\n                          <option value=\"Liberal Studies\">\r\n                            Liberal Studies\r\n                          </option>\r\n                          <option value=\"Media Production\">\r\n                            Media Production\r\n                          </option>\r\n                          <option value=\"Philosophy\">Philosophy</option>\r\n                          <option value=\"Political Science\">\r\n                            Political Science\r\n                          </option>\r\n                          <option value=\"Psychology\">Psychology</option>\r\n                          <option value=\"Religious Studies\">\r\n                            Religious Studies\r\n                          </option>\r\n                          <option value=\"Sociology\">Sociology</option>\r\n                          <option value=\"Spanish\">Spanish</option>\r\n                          <option value=\"Sports Administration\">\r\n                            Sports Administration\r\n                          </option>\r\n                          <option value=\"Strategic Communication\">\r\n                            Strategic Communication\r\n                          </option>\r\n\r\n                          <option value=\"Women’s, Gender, and Sexuality Studies\">\r\n                            Women’s, Gender, and Sexuality Studies\r\n                          </option>\r\n                          <option value=\"World Cultures and Literatures\">\r\n                            World Cultures and Literatures\r\n                          </option>\r\n                        </optgroup>\r\n                        <optgroup label=\"College of Natural Sciences and Mathematics\">\r\n                          <option value=\"Biochemical and Biophysical Sciences\">\r\n                            Biochemical and Biophysical Sciences\r\n                          </option>\r\n                          <option value=\"Biology\">Biology</option>\r\n                          <option value=\"Chemistry\">Chemistry</option>\r\n                          <option value=\"Computer Science\">\r\n                            Computer Science\r\n                          </option>\r\n                          <option value=\"Earth_Science\">Earth Science</option>\r\n                          <option value=\"Environmental Sciences\">\r\n                            Environmental Sciences\r\n                          </option>\r\n                          <option value=\"Geology\">Geology</option>\r\n                          <option value=\"Geophysics\">Geophysics</option>\r\n                          <option value=\"Honors Biomedical Sciences\">\r\n                            Honors Biomedical Sciences\r\n                          </option>\r\n                          <option value=\"Mathematical Biology\">\r\n                            Mathematical Biology\r\n                          </option>\r\n                          <option value=\"Mathematics\">Mathematics</option>\r\n\r\n                          <option value=\"Physics\">Physics</option>\r\n                        </optgroup>\r\n                        <optgroup label=\"College of Nursing\">\r\n                          <option value=\"Pre-Nursing\">Pre-Nursing</option>\r\n                          <option value=\"Nursing, BSN (RN-BSN)\">\r\n                            Nursing, BSN (RN-BSN)\r\n                          </option>\r\n                          <option value=\"Nursing, BSN (Second_Degree)\">\r\n                            Nursing, BSN (Second Degree)\r\n                          </option>\r\n                        </optgroup>\r\n                        <optgroup label=\"College of Technology\">\r\n                          <option value=\"Biotechnology\">Biotechnology</option>\r\n\r\n                          <option value=\"Computer Engineering Technology\">\r\n                            Computer Engineering Technology\r\n                          </option>\r\n                          <option value=\"Computer Information Systems\">\r\n                            Computer Information Systems\r\n                          </option>\r\n                          <option value=\"Construction Management\">\r\n                            Construction Management\r\n                          </option>\r\n                          <option value=\"Digital Media\">Digital Media</option>\r\n                          <option value=\"Electrical Power Engineering Technology\">\r\n                            Electrical Power Engineering Technology\r\n                          </option>\r\n                          <option value=\"Human Resources Development\">\r\n                            Human Resources Development\r\n                          </option>\r\n                          <option value=\"Mechanical Engineering Technology\">\r\n                            Mechanical Engineering Technology\r\n                          </option>\r\n                          <option value=\"Retailing and_Consumer Science\">\r\n                            Retailing and Consumer Science{\" \"}\r\n                          </option>\r\n                          <option value=\"Supply Chain and Logistics Technology\">\r\n                            Supply Chain and Logistics Technology\r\n                          </option>\r\n                          <option value=\"Technology Leadership and Innovation Management\">\r\n                            Technology Leadership and Innovation Management{\" \"}\r\n                          </option>\r\n                        </optgroup>\r\n                        <optgroup label=\"Pre-Professional Tracks\">\r\n                          <option value=\"Pre-Dentistry\">Pre-Dentistry</option>\r\n                          <option value=\"Pre-Law\">Pre-Law</option>\r\n                          <option value=\"Pre-Medicine\">Pre-Medicine</option>\r\n                          <option value=\"Pre-Optometry\">Pre-Optometry</option>\r\n                          <option value=\"Pre-Pharmacy\">Pre-Pharmacy</option>\r\n                          <option value=\"Pre-Physical Therapy\">\r\n                            Pre-Physical Therapy\r\n                          </option>\r\n                          <option value=\"Pre-Veterinary Medicine\">\r\n                            Pre-Veterinary Medicine\r\n                          </option>\r\n                        </optgroup>\r\n                      </select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            )}\r\n          </ListItem>\r\n          <Divider variant=\"inset\" component=\"li\" />\r\n          <ListItem alignItems=\"flex-start\">\r\n            <ListItemIcon>\r\n              <ContactsRoundedIcon />\r\n            </ListItemIcon>\r\n            {studentEdit.studentEditBool === false ? (\r\n              <div className={classes.flexColumn}>\r\n                <Typography className={classes.sectionHeader}>\r\n                  Contact\r\n                </Typography>\r\n                <Typography className={classes.sectionContent}>\r\n                  {`Contact Email: ${studentInfo.contact_email}`}\r\n                </Typography>\r\n                <Typography className={classes.sectionContent}>\r\n                  {`Phone Number: ${studentInfo.phoneNumber}`}\r\n                </Typography>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <Typography className={classes.sectionHeader}>\r\n                  Contact\r\n                  {studentEdit.studentEditBool ? (\r\n                    <span className={classes.labelAsterisk}> *</span>\r\n                  ) : null}\r\n                </Typography>\r\n                <Grid container spacing={4}>\r\n                  <Grid item>\r\n                    <FormControl\r\n                      error={errors.contact_email && studentInput === \"\"}\r\n                    >\r\n                      <Typography>\r\n                        Contact Email\r\n                        {studentEdit.studentEditBool ? (\r\n                          <span className={classes.labelAsterisk}> *</span>\r\n                        ) : null}\r\n                      </Typography>\r\n                      <TextField\r\n                        type=\"string\"\r\n                        name=\"contact_email\"\r\n                        onChange={(e) => {\r\n                          setStudentInput({\r\n                            ...studentInput,\r\n                            contact_email: e.target.value,\r\n                          });\r\n                        }}\r\n                        value={studentInput.contact_email}\r\n                        required={true}\r\n                        inputProps={{ maxLength: 50 }}\r\n                      />\r\n                      {errors.contact_email &&\r\n                      studentInput.contact_email === \"\" ? (\r\n                        <FormHelperText>{errors.contact_email}</FormHelperText>\r\n                      ) : null}\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <FormControl\r\n                      error={errors.phoneNumber && studentInput === \"\"}\r\n                    >\r\n                      <Typography>\r\n                        Phone Number\r\n                        {studentEdit.studentEditBool ? (\r\n                          <span className={classes.labelAsterisk}> *</span>\r\n                        ) : null}\r\n                      </Typography>\r\n                      <TextField\r\n                        type=\"string\"\r\n                        name=\"phoneNumber\"\r\n                        onChange={(e) => {\r\n                          setStudentInput({\r\n                            ...studentInput,\r\n                            phoneNumber: e.target.value,\r\n                          });\r\n                        }}\r\n                        value={studentInput.phoneNumber}\r\n                        required={true}\r\n                        inputProps={{ maxLength: 11 }}\r\n                      />\r\n                      {errors.phoneNumber && studentInput.phoneNumber === \"\" ? (\r\n                        <FormHelperText>{errors.phoneNumber}</FormHelperText>\r\n                      ) : null}\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            )}\r\n          </ListItem>\r\n          <Divider variant=\"inset\" component=\"li\" />\r\n          <ListItem alignItems=\"flex-start\">\r\n            <ListItemIcon>\r\n              <LocationOnRoundedIcon />\r\n            </ListItemIcon>\r\n            {studentEdit.studentEditBool === false ? (\r\n              <ListItemText\r\n                primary={\r\n                  <React.Fragment>\r\n                    <Typography className={classes.sectionHeader}>\r\n                      Address\r\n                    </Typography>\r\n                    <Typography\r\n                      component=\"span\"\r\n                      variant=\"body2\"\r\n                      className={classes.inline}\r\n                      color=\"textPrimary\"\r\n                    >\r\n                      {`${studentInfo.streetAddress},  ${studentInfo.city}, ${studentInfo.state} ${studentInfo.zipcode}`}\r\n                    </Typography>\r\n                  </React.Fragment>\r\n                }\r\n              />\r\n            ) : (\r\n              <>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"flex-start\"\r\n                  alignItems=\"flex-start\"\r\n                  spacing={2}\r\n                >\r\n                  <Grid container id=\"first-left\" item xs={12} direction=\"row\">\r\n                    <Grid item lg={3} xs={12} md={6}>\r\n                      <FormControl\r\n                        error={errors.streetAddress && studentInput === \"\"}\r\n                      >\r\n                        <Typography>\r\n                          Street Address\r\n                          {studentEdit.studentEditBool ? (\r\n                            <span className={classes.labelAsterisk}> *</span>\r\n                          ) : null}\r\n                        </Typography>\r\n                        <TextField\r\n                          value={studentInput.streetAddress}\r\n                          onChange={(e) => {\r\n                            setStudentInput({\r\n                              ...studentInput,\r\n                              streetAddress: e.target.value,\r\n                            });\r\n                          }}\r\n                          name=\"streetAddress\"\r\n                          inputProps={{ maxLength: 40 }}\r\n                          placeholder=\"Street Address\"\r\n                        />\r\n                        {errors.streetAddress &&\r\n                        studentInput.streetAddress === \"\" ? (\r\n                          <FormHelperText>\r\n                            {errors.streetAddress}\r\n                          </FormHelperText>\r\n                        ) : null}\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={3} xs={12} md={6}>\r\n                      <FormControl error={errors.city && studentInput === \"\"}>\r\n                        <Typography>\r\n                          City\r\n                          {studentEdit.studentEditBool ? (\r\n                            <span className={classes.labelAsterisk}> *</span>\r\n                          ) : null}\r\n                        </Typography>\r\n                        <TextField\r\n                          value={studentInput.city}\r\n                          onChange={(e) => {\r\n                            setStudentInput({\r\n                              ...studentInput,\r\n                              city: e.target.value,\r\n                            });\r\n                          }}\r\n                          inputProps={{ maxLength: 20 }}\r\n                          name=\"city\"\r\n                        />\r\n                        {errors.city && studentInput.city === \"\" ? (\r\n                          <FormHelperText>{errors.city}</FormHelperText>\r\n                        ) : null}\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container id=\"first-left\" item xs={12} direction=\"row\">\r\n                    <Grid item lg={3} xs={12} md={6}>\r\n                      <FormControl error={errors.state && studentInput === \"\"}>\r\n                        <Typography>\r\n                          State\r\n                          {studentEdit.studentEditBool ? (\r\n                            <span className={classes.labelAsterisk}> *</span>\r\n                          ) : null}\r\n                        </Typography>\r\n                        <Select\r\n                          label=\"State\"\r\n                          value={studentInput.state}\r\n                          onChange={(e) => {\r\n                            setStudentInput({\r\n                              ...studentInput,\r\n                              state: e.target.value,\r\n                            });\r\n                          }}\r\n                          name=\"state\"\r\n                          placeholder=\"state\"\r\n                        >\r\n                          {states.map((state) => (\r\n                            <MenuItem key={state} value={state}>\r\n                              {state}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                        {errors.state && studentInput.state === \"\" ? (\r\n                          <FormHelperText>{errors.state}</FormHelperText>\r\n                        ) : null}\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={3} xs={12} md={6}>\r\n                      <FormControl\r\n                        error={errors.zipcode && studentInput === \"\"}\r\n                      >\r\n                        <Typography>\r\n                          Zipcode\r\n                          {studentEdit.studentEditBool ? (\r\n                            <span className={classes.labelAsterisk}> *</span>\r\n                          ) : null}\r\n                        </Typography>\r\n                        <TextField\r\n                          value={studentInput.zipcode}\r\n                          onChange={(e) => {\r\n                            setStudentInput({\r\n                              ...studentInput,\r\n                              zipcode: e.target.value,\r\n                            });\r\n                          }}\r\n                          inputProps={{ maxLength: 5 }}\r\n                          name=\"zipcode\"\r\n                        />\r\n                        {errors.zipcode && studentInput.zipcode === \"\" ? (\r\n                          <FormHelperText>{errors.zipcode}</FormHelperText>\r\n                        ) : null}\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </>\r\n            )}\r\n          </ListItem>\r\n          <Divider variant=\"inset\" component=\"li\" />\r\n          <ListItem alignItems=\"flex-start\">\r\n            <ListItemIcon>\r\n              <StarsIcon />\r\n            </ListItemIcon>\r\n            {studentEdit.studentEditBool === false ? (\r\n              <div className={classes.flexColumn}>\r\n                <Typography className={classes.sectionHeader}>\r\n                  Skills\r\n                </Typography>\r\n                <ul className={classes.skillRoot}>\r\n                  {studentInfo.student_skills.map((skill) => {\r\n                    return (\r\n                      <li key={skill.skill_name}>\r\n                        <Chip\r\n                          variant=\"outlined\"\r\n                          classes={\r\n                            skill.experience_level === 1\r\n                              ? {\r\n                                  root: classes.beginnerChip,\r\n                                  deleteIcon: classes.beginnerDeleteIcon,\r\n                                }\r\n                              : skill.experience_level === 2\r\n                              ? {\r\n                                  root: classes.intermediateChip,\r\n                                  deleteIcon: classes.intermediateDeleteIcon,\r\n                                }\r\n                              : {\r\n                                  root: classes.expertChip,\r\n                                  deleteIcon: classes.expertDeleteIcon,\r\n                                }\r\n                          }\r\n                          label={skill.skill_name}\r\n                        />\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <Typography className={classes.sectionHeader}>\r\n                  Skills\r\n                </Typography>\r\n                <ul className={classes.skillRoot}>\r\n                  {studentInput.student_skills.map((skill) => {\r\n                    return (\r\n                      <li key={skill.skill_name}>\r\n                        <Chip\r\n                          variant=\"outlined\"\r\n                          classes={\r\n                            skill.experience_level === 1\r\n                              ? {\r\n                                  root: classes.beginnerChip,\r\n                                  deleteIcon: classes.beginnerDeleteIcon,\r\n                                }\r\n                              : skill.experience_level === 2\r\n                              ? {\r\n                                  root: classes.intermediateChip,\r\n                                  deleteIcon: classes.intermediateDeleteIcon,\r\n                                }\r\n                              : {\r\n                                  root: classes.expertChip,\r\n                                  deleteIcon: classes.expertDeleteIcon,\r\n                                }\r\n                          }\r\n                          label={skill.skill_name}\r\n                          onDelete={() => deleteSkill(skill)}\r\n                        />\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n                {errors.student_skills &&\r\n                studentInput.student_skills.length === 0 ? (\r\n                  <FormHelperText\r\n                    error={\r\n                      errors.student_skills &&\r\n                      studentInput.student_skills.length === 0\r\n                    }\r\n                  >\r\n                    {errors.student_skills}\r\n                  </FormHelperText>\r\n                ) : null}\r\n                <Grid container spacing={2}>\r\n                  <Grid item>\r\n                    <Box>\r\n                      <Typography>\r\n                        Skill\r\n                        {studentEdit.studentEditBool ? (\r\n                          <span className={classes.labelAsterisk}> *</span>\r\n                        ) : null}\r\n                      </Typography>\r\n                      <FormControl>\r\n                        <Select\r\n                          onChange={handleSkillChange}\r\n                          className={classes.select}\r\n                          value={skillName}\r\n                        >\r\n                          <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                          </MenuItem>\r\n                          {skills.map((skill) => (\r\n                            <MenuItem key={skill.id} value={skill.skill_name}>\r\n                              {skill.skill_name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Box>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <FormControl>\r\n                      <Typography>\r\n                        Experience\r\n                        {studentEdit.studentEditBool ? (\r\n                          <span className={classes.labelAsterisk}> *</span>\r\n                        ) : null}\r\n                      </Typography>\r\n                      <Select\r\n                        value={experience}\r\n                        className={classes.select}\r\n                        onChange={handleExpChange}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value={1}>Beginner</MenuItem>\r\n                        <MenuItem value={2}>Novice</MenuItem>\r\n                        <MenuItem value={3}>Expert</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"secondary\"\r\n                      onClick={addSkill}\r\n                      disabled={skillName === \"\" || experience === \"\"}\r\n                    >\r\n                      Add Skill\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            )}\r\n          </ListItem>\r\n          <Divider variant=\"inset\" component=\"li\" />\r\n          <ListItem alignItems=\"flex-start\">\r\n            <Grid container>\r\n              <Grid item>\r\n                <ListItemIcon>\r\n                  <HorizontalSplitIcon />\r\n                </ListItemIcon>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography className={classes.sectionHeader}>\r\n                  My Projects\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </ListItem>\r\n        </List>\r\n        <Dialog\r\n          onClose={handleDialogClose}\r\n          open={dialogOpen}\r\n          className={classes.dialog}\r\n        >\r\n          <DialogTitle>Enter Email and Password to Confirm</DialogTitle>\r\n          {authError ? (\r\n            <Alert\r\n              className={classes.loginAlert}\r\n              variant=\"filled\"\r\n              severity=\"error\"\r\n            >\r\n              {authError}\r\n            </Alert>\r\n          ) : null}\r\n          <DialogContent>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n              required\r\n              className={classes.dialogInput}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"password\"\r\n              label=\"password\"\r\n              name=\"password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              value={password}\r\n              required\r\n              type=\"password\"\r\n              className={classes.dialogInput}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions className={classes.dialogConfirm}>\r\n            <Button\r\n              onClick={handleConfirm}\r\n              color=\"secondary\"\r\n              variant=\"outlined\"\r\n              className={classes.dialogConfirm}\r\n            >\r\n              Confirm\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        {projects && skills ? (\r\n          <>\r\n            <Grid container justify=\"flex-end\">\r\n              <StudentProjectAdd\r\n                skills={skills}\r\n                setProjects={setProjects}\r\n                projects={projects}\r\n              />\r\n            </Grid>\r\n            <StudentProject\r\n              projects={projects}\r\n              setProjects={setProjects}\r\n              skills={skills}\r\n            />\r\n          </>\r\n        ) : null}\r\n        <StudentProjectScroll showBelow={250} />\r\n      </div>\r\n      <Snackbar\r\n        open={updateFailed}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseUpdateFailed}\r\n      >\r\n        <Alert onClose={handleCloseUpdateFailed} severity=\"error\">\r\n          {alert}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  Chip,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Avatar,\r\n  Divider,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  studentName: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  subheader: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  skillsRoot: {\r\n    alignItems: \"center\",\r\n  },\r\n  chip: {\r\n    marginRight: theme.spacing(1),\r\n    marginBottom:theme.spacing(1)\r\n  },\r\n  chipLabel: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  qualification: {\r\n    textTransform: \"uppercase\",\r\n  },\r\n  actionArea: {\r\n    padding: theme.spacing(1),\r\n    \"&:focus\": {\r\n      border: `1px solid ${theme.palette.secondary.main}`,\r\n    },\r\n  },\r\n  fieldTitle: {\r\n    textTransform: \"uppercase\",\r\n    color: theme.palette.text.secondary,\r\n    fontSize: \"0.7rem\",\r\n    letterSpacing: \"0.05rem\",\r\n  },\r\n  fieldValue: {\r\n    fontSize: \"0.7rem\",\r\n  },\r\n  cardHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  cardContent: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  gridRoot: {\r\n    margin: theme.spacing(2),\r\n    backgroundColor: \"white\",\r\n  },\r\n  card: {\r\n    width: \"280px\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\"\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n  },\r\n  noPaddingTop: {\r\n    paddingTop: \"0\",\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(5),\r\n    height: theme.spacing(5),\r\n  },\r\n  spinner: {\r\n    position: \"relative\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n  buttonContainer: {\r\n    justifyContent: \"center\",\r\n  },\r\n  loader: {\r\n    position: \"relative\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n}));\r\n\r\nconst ProjectsList = ({ loading, projects, noProjectsFound }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <LinearProgress\r\n          color=\"secondary\"\r\n          style={{ margin: \"20px\" }}\r\n        ></LinearProgress>\r\n      ) : noProjectsFound ? (\r\n        <Grid style={{ margin: \"20px\" }}>\r\n         <Alert severity=\"info\">\r\n          No Projects Found!\r\n        </Alert>\r\n        </Grid>\r\n      ) : (\r\n        <Grid container justify={\"center\"}>\r\n          {projects.map((project) => (\r\n            <Grid item key={project.project_id} style={{ margin: \"15px\" }}>\r\n              <Card className={classes.card}>\r\n                <CardHeader\r\n                  classes={{\r\n                    root: classes.cardHeader,\r\n                    title: classes.studentName,\r\n                    subheader: classes.subheader,\r\n                  }}\r\n                  avatar={<Avatar className={classes.avatar}></Avatar>}\r\n                  title={project.project_name}\r\n                ></CardHeader>\r\n                <CardContent className={classes.cardContent}>\r\n                  <Typography className={classes.fieldTitle}>\r\n                    Project Deadline\r\n                  </Typography>\r\n                  <Typography className={classes.fieldValue}>\r\n                    {project.project_deadline}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardContent\r\n                  className={`${classes.cardContent} ${classes.noPaddingTop}`}\r\n                >\r\n                  <Typography className={classes.fieldTitle}>\r\n                    Project Type\r\n                  </Typography>\r\n                  <Typography className={classes.fieldValue}>\r\n                    {project.project_type ? project.project_type : \"none\"}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardContent\r\n                  className={`${classes.cardContent} ${classes.noPaddingTop}`}\r\n                >\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    className={classes.fieldTitle}\r\n                  >\r\n                    Project Tech\r\n                  </Typography>\r\n\r\n                  <div className={classes.skillsRoot}>\r\n                    {project.project_tech !== \"\" && project.project_tech.length>0 ? (\r\n                      project.project_tech.split(\",\").map((skill, index) => (\r\n                        <>\r\n                        <Chip\r\n                          key={index}\r\n                          label={skill}\r\n                          classes={{\r\n                            root: classes.chip,\r\n                            label: classes.chipLabel,\r\n                          }}\r\n                          color=\"primary\"\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                        />\r\n                        </>\r\n                      ))\r\n                    ) : (\r\n                      <Chip\r\n                        label={\"none\"}\r\n                        classes={{\r\n                          root: classes.chip,\r\n                          label: classes.chipLabel,\r\n                        }}\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </CardContent>\r\n                <Divider></Divider>\r\n                <CardContent>\r\n                  <Link\r\n                    to={{\r\n                      pathname: `projects/${project.project_id}`,\r\n                    }}\r\n                    style={{ textDecoration: \"none\" }}\r\n                  >\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      size=\"small\"\r\n                      variant=\"contained\"\r\n                      className={classes.button}\r\n                    >\r\n                      View Details\r\n                    </Button>\r\n                  </Link>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectsList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\n\r\nimport ProjectsList from \"../../components/CompanyPublic/ProjectsList\";\r\nimport axios from \"axios\";\r\n\r\nimport { getConfig } from \"../../authConfig\";\r\n\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchBackground: {\r\n    // backgroundImage: `linear-gradient(to bottom, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.5)), url('https://images.pexels.com/photos/1181619/pexels-photo-1181619.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260')`,\r\n    backgroundColor: \"rgba(200,16,46,1)\",\r\n    margin: \"10px\",\r\n    borderRadius: \"5px\",\r\n    flex: \"column\",\r\n  },\r\n  header: {\r\n    textAlign: \"center\",\r\n    fontSize: \"60px\",\r\n    fontWeight: \"400\",\r\n    color: \"white\",\r\n    fontFamily: \"Helvetica\",\r\n    marginBottom: theme.spacing(1.5),\r\n  },\r\n  keywordHeading: {\r\n    display: \"flex-start\",\r\n    justifyContent: \"center\",\r\n    fontFamily: \"Helvetica\",\r\n    color: \"white\",\r\n    marginLeft: theme.spacing(3.0),\r\n    marginBottom: theme.spacing(0),\r\n  },\r\n  keywordGrid: {\r\n    width: \"100%\",\r\n  },\r\n  keywordSearch: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"10px\",\r\n    // objectFit:\"contain\",\r\n    width: \"95%\",\r\n    display: \"flex-start\",\r\n    justifyContent: \"center\",\r\n    margin: 10,\r\n    marginLeft: theme.spacing(3.0),\r\n  },\r\n  searchButton: {\r\n    display: \"flex-start\",\r\n    justifyContent: \"center\",\r\n    margin: 10,\r\n    color: \"#b0102a\",\r\n    background: \"white\",\r\n  },\r\n  rootAccordion: {\r\n    width: \"100%\",\r\n  },\r\n  accordionExpand: {\r\n    backgroundColor: \"rgba(200,16,46,1)\",\r\n  },\r\n  advancedSearchButton: {\r\n    color: \"red\",\r\n    display: \"center\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    background: \"white\",\r\n    margin: \"0 auto\",\r\n    paddingBottom: 5,\r\n    \"&:hover, &.Mui-focusVisible\": {\r\n      transition: \"0.3s\",\r\n      color: \"red\",\r\n      backgroundColor: \"#ebebeb\",\r\n    },\r\n  },\r\n  SearchLabels: {\r\n    fontFamily: \"sans-serif\",\r\n    color: \"white\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    margin: 0,\r\n  },\r\n  searchSelect: {\r\n    objectFit: \"contain\",\r\n    borderRadius: \"10px\",\r\n    width: \"100%\",\r\n    margin: theme.spacing(1.0),\r\n    justifyContent: \"center\",\r\n    \"& > div > div > div\": { width: \"auto !important\" },\r\n  },\r\n  filterButton: {\r\n    display: \"flex-end\",\r\n    justifyContent: \"center\",\r\n    marginTop: 25,\r\n    background: \"rgba(200,16,46,1)\",\r\n    color: \"white\",\r\n    \"&:hover, &.Mui-focusVisible\": {\r\n      transition: \"0.3s\",\r\n      color: \"white\",\r\n      backgroundColor: \"#b0102a\",\r\n    },\r\n  },\r\n  ASGrid: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst customStyles = {\r\n  option: (provided) => ({\r\n    ...provided,\r\n    color: \"black\",\r\n  }),\r\n  control: (provided) => ({\r\n    ...provided,\r\n    color: \"black\",\r\n  }),\r\n  singleValue: (provided) => ({\r\n    ...provided,\r\n    color: \"black\",\r\n    width: \"100%\",\r\n  }),\r\n  multiValue: (provided) => ({\r\n    ...provided,\r\n    width: \"100%\",\r\n  }),\r\n  ValueContainer: (provided) => ({\r\n    ...provided,\r\n    width: \"100%\",\r\n  }),\r\n};\r\n\r\nexport const StudentSearch = () => {\r\n  // these 3 are for the ProjectsList component on the bottom\r\n  const [loading, setLoading] = useState(false);\r\n  const [noProjectsFound, setNoProjectsFound] = useState(false);\r\n  const [projectList, setProjectList] = useState([]);\r\n\r\n  // takes in the user input\r\n  const [searchInput, setSearchInput] = useState({\r\n    //This is the data from api\r\n    company_name: \"\",\r\n    industry_type: \"\",\r\n    project_name: \"\",\r\n    project_type: [],\r\n    project_tech: [],\r\n    keywords: [],\r\n  });\r\n\r\n  // this is for the normal Search\r\n  const handleClickSearch = () => {\r\n    const data = {\r\n      company_name: searchInput.company_name,\r\n      industry_type: searchInput.industry_type,\r\n      project_name: searchInput.project_name,\r\n      project_type: searchInput.project_type,\r\n      project_tech: searchInput.project_tech,\r\n      keywords: searchInput.keywords,\r\n    };\r\n    setLoading(true);\r\n    axios\r\n      .post(\"/company_project/search\", data, getConfig())\r\n      .then((res) => {\r\n        setLoading(false);\r\n        setProjectList(res.data);\r\n        if (res.data.length === 0) {\r\n          setNoProjectsFound(true);\r\n        } else {\r\n          setNoProjectsFound(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        setNoProjectsFound(true);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleKeypress = (e) => {\r\n    //it triggers by pressing the enter key\r\n    if (e.key === \"Enter\") {\r\n      handleClickSearch();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios\r\n      .post(\"/company_project/search\", searchInput, getConfig())\r\n      .then((res) => {\r\n        setLoading(false);\r\n        setProjectList(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  //these 2 are for the Accordion dropdown for Advanced Search\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  //this is the animated component for the react-select library\r\n  const animatedComponents = makeAnimated();\r\n\r\n  //api for select Company Name\r\n  const [companyName, setCompanyName] = useState({});\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/company_profile/list_company_name\", getConfig())\r\n      .then((res) => {\r\n        const data = res.data.map((compName) => {\r\n          return { label: compName.company_name };\r\n        });\r\n\r\n        setCompanyName(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  //api for select IndustryType\r\n  const [industryType, setIndustryType] = useState({});\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/company_profile/list_industry_type\", getConfig())\r\n      .then((res) => {\r\n        const data = res.data.industry_type.map((item, index) => {\r\n          return {\r\n            label: item,\r\n            value: index,\r\n          };\r\n        });\r\n        setIndustryType(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  //api for select ProjectName\r\n  const [projectName, setProjectName] = useState({});\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/company_project/list_project_name\", getConfig())\r\n      .then((res) => {\r\n        const data = res.data.map((projName) => {\r\n          return { label: projName.project_name };\r\n        });\r\n\r\n        setProjectName(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  //api for select ProjectType\r\n  const [projectType, setProjectType] = useState({});\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/company_project/list_project_type\", getConfig())\r\n      .then((res) => {\r\n        const data = res.data.project_type.map((item, index) => {\r\n          return {\r\n            label: item,\r\n            value: index,\r\n          };\r\n        });\r\n\r\n        setProjectType(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  //api for select ProjectTech\r\n  const [projectTech, setProjectTech] = useState({});\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/skill/\", getConfig())\r\n      .then((res) => {\r\n        const data = res.data.map((skill) => {\r\n          return { label: skill.skill_name, value: skill.id };\r\n        });\r\n\r\n        setProjectTech(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.searchBackground}>\r\n        <Grid>\r\n          <Typography className={classes.header}>FutureStart Search</Typography>\r\n        </Grid>\r\n        <Grid>\r\n          <Grid\r\n            container\r\n            id=\"first-left\"\r\n            item\r\n            xs={12}\r\n            spacing={4}\r\n            direction=\"row\"\r\n          >\r\n            <Grid item className={classes.keywordGrid}>\r\n              <OutlinedInput\r\n                className={classes.keywordSearch}\r\n                placeholder=\"Search company projects using keyword(s)\"\r\n                onChange={(e) => {\r\n                  setSearchInput({ ...searchInput, keywords: e.target.value });\r\n                }}\r\n                onKeyPress={handleKeypress}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <Button\r\n                      size=\"large\"\r\n                      className={classes.searchButton}\r\n                      fullWidth={true}\r\n                      onClick={handleClickSearch}\r\n                    >\r\n                      <SearchIcon />\r\n                    </Button>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {/* START OF REFINED SEARCHED */}\r\n          <div className={classes.rootAccordion}>\r\n            <Grid>\r\n              <Accordion\r\n                expanded={expanded === \"panel1\"}\r\n                onChange={handleChange(\"panel1\")}\r\n              >\r\n                <AccordionSummary\r\n                  className={classes.accordionExpand}\r\n                  // expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1bh-content\"\r\n                  id=\"panel1bh-header\"\r\n                >\r\n                  <Button\r\n                    className={classes.advancedSearchButton}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    ADVANCED SEARCH\r\n                    <FilterListIcon />\r\n                  </Button>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <Grid\r\n                    container\r\n                    id=\"master\"\r\n                    direction=\"column\"\r\n                    justify=\"space-between\"\r\n                    spacing={2}\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid\r\n                      // container\r\n                      // id=\"first-left\"\r\n                      // item\r\n                      // xs={12}\r\n                      // spacing={1}\r\n                      // direction=\"row\"\r\n                      // className={classes.ASGrid}\r\n                      container\r\n                      id=\"first-left\"\r\n                      item\r\n                      xs={12}\r\n                      spacing={1}\r\n                      justify=\"space-evenly\"\r\n                      direction=\"column\"\r\n                      alignItems=\"stretch\"\r\n                      className={classes.ASGrid}\r\n                    >\r\n                      <Grid item>\r\n                        <Typography\r\n                          className={classes.searchLabels}\r\n                          variant=\"h6\"\r\n                        >\r\n                          Company Name\r\n                        </Typography>\r\n                        <Select\r\n                          AutoSize={true}\r\n                          closeMenuOnSelect={true}\r\n                          components={animatedComponents}\r\n                          isMulti\r\n                          isSearchable\r\n                          className={classes.searchSelect}\r\n                          onChange={(e) => {\r\n                            e = e ? e : [];\r\n                            var compNameSeparatedByCommas = Array.prototype.map\r\n                              .call(e, (s) => s.label)\r\n                              .toString();\r\n                            setSearchInput({\r\n                              ...searchInput,\r\n                              company_name: compNameSeparatedByCommas,\r\n                            });\r\n                          }}\r\n                          options={companyName}\r\n                          styles={customStyles}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Typography\r\n                          className={classes.searchLabels}\r\n                          variant=\"h6\"\r\n                        >\r\n                          Industry Type\r\n                        </Typography>\r\n                        <Select\r\n                          AutoSize={true}\r\n                          closeMenuOnSelect={true}\r\n                          components={animatedComponents}\r\n                          isMulti\r\n                          isSearchable\r\n                          className={classes.searchSelect}\r\n                          onChange={(e) => {\r\n                            e = e ? e : [];\r\n                            var industryTypeSeparatedByCommas = Array.prototype.map\r\n                              .call(e, (s) => s.label)\r\n                              .toString();\r\n                            setSearchInput({\r\n                              ...searchInput,\r\n                              industry_type: industryTypeSeparatedByCommas,\r\n                            });\r\n                          }}\r\n                          options={industryType}\r\n                          styles={customStyles}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Typography\r\n                          className={classes.searchLabels}\r\n                          variant=\"h6\"\r\n                        >\r\n                          Project Name\r\n                        </Typography>\r\n                        <Select\r\n                          AutoSize={true}\r\n                          closeMenuOnSelect={true}\r\n                          components={animatedComponents}\r\n                          isMulti\r\n                          isSearchable\r\n                          className={classes.searchSelect}\r\n                          onChange={(e) => {\r\n                            e = e ? e : [];\r\n                            var projectNameSeparatedByCommas = Array.prototype.map\r\n                              .call(e, (s) => s.label)\r\n                              .toString();\r\n                            setSearchInput({\r\n                              ...searchInput,\r\n                              project_name: projectNameSeparatedByCommas,\r\n                            });\r\n                          }}\r\n                          options={projectName}\r\n                          styles={customStyles}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Typography\r\n                          className={classes.searchLabels}\r\n                          variant=\"h6\"\r\n                        >\r\n                          Project Type\r\n                        </Typography>\r\n                        <Select\r\n                          AutoSize={true}\r\n                          closeMenuOnSelect={true}\r\n                          components={animatedComponents}\r\n                          isMulti\r\n                          isSearchable\r\n                          className={classes.searchSelect}\r\n                          onChange={(e) => {\r\n                            e = e ? e : [];\r\n                            var projectTypeSeparatedByCommas = Array.prototype.map\r\n                              .call(e, (s) => s.label)\r\n                              .toString();\r\n                            setSearchInput({\r\n                              ...searchInput,\r\n                              project_type: projectTypeSeparatedByCommas.split(\r\n                                \",\"\r\n                              ),\r\n                            });\r\n                          }}\r\n                          options={projectType}\r\n                          styles={customStyles}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Typography\r\n                          className={classes.searchLabels}\r\n                          variant=\"h6\"\r\n                        >\r\n                          Project Tech\r\n                        </Typography>\r\n                        <Select\r\n                          AutoSize={true}\r\n                          closeMenuOnSelect={true}\r\n                          components={animatedComponents}\r\n                          isMulti\r\n                          isSearchable\r\n                          className={classes.searchSelect}\r\n                          onChange={(e) => {\r\n                            e = e ? e : [];\r\n                            var skillsSeparatedByCommas = Array.prototype.map\r\n                              .call(e, (s) => s.label)\r\n                              .toString();\r\n                            setSearchInput({\r\n                              ...searchInput,\r\n                              project_tech: skillsSeparatedByCommas.split(\",\"),\r\n                            });\r\n                          }}\r\n                          options={projectTech}\r\n                          styles={customStyles}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            </Grid>\r\n            {/* END OF REFINED SEARCHED */}\r\n          </div>\r\n        </Grid>\r\n      </div>\r\n      <ProjectsList\r\n        loading={loading}\r\n        projects={projectList}\r\n        noProjectsFound={noProjectsFound}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  Chip,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Avatar,\r\n  Divider,\r\n  LinearProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  IconButton,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { getConfig } from \"../../authConfig\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  studentName: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  subheader: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  skillsRoot: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    marginRight: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  chipLabel: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  qualification: {\r\n    textTransform: \"uppercase\",\r\n  },\r\n  actionArea: {\r\n    padding: theme.spacing(1),\r\n    \"&:focus\": {\r\n      border: `1px solid ${theme.palette.secondary.main}`,\r\n    },\r\n  },\r\n  fieldTitle: {\r\n    textTransform: \"uppercase\",\r\n    color: theme.palette.text.secondary,\r\n    fontSize: \"0.7rem\",\r\n    letterSpacing: \"0.05rem\",\r\n  },\r\n  fieldValue: {\r\n    fontSize: \"0.7rem\",\r\n  },\r\n  cardHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  cardContent: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  gridRoot: {\r\n    margin: theme.spacing(2),\r\n    backgroundColor: \"white\",\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    margin: theme.spacing(1),\r\n    position: \"relative\",\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n  },\r\n  noPaddingTop: {\r\n    paddingTop: \"0\",\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(5),\r\n    height: theme.spacing(5),\r\n  },\r\n  spinner: {\r\n    position: \"relative\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n  buttonContainer: {\r\n    justifyContent: \"center\",\r\n  },\r\n  loader: {\r\n    position: \"relative\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n  selectLable: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  loading: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  projectMenu: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(-1),\r\n    top: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nconst ProjectCard = ({ project, setModifiedProject, removeProject }) => {\r\n  const classes = useStyles();\r\n\r\n  const [changePreferenceOpen, setPreferenceChangeOpen] = useState(false);\r\n  const [removeProjectOpen, setRemoveProjectOpen] = useState(false);\r\n  const [preference, setPreference] = useState();\r\n  const [changingPreference, setChangingPeference] = useState(false);\r\n  const [removingProject, setRemovingProject] = useState(false);\r\n\r\n  useEffect(() => setPreference(project.student_preference_for_project), [\r\n    project.student_preference_for_project,\r\n  ]);\r\n\r\n  const handlePreferenceChange = (event) => {\r\n    setPreference(event.target.value);\r\n  };\r\n\r\n  const confirmPeferenceChange = () => {\r\n    setChangingPeference(true);\r\n    axios\r\n      .put(\r\n        `/student_select_project/${project.selection_id}/update`,\r\n        {\r\n          project_id: project.project_id,\r\n          student_preference_for_project: preference,\r\n        },\r\n        getConfig()\r\n      )\r\n      .then((res) => {\r\n        setModifiedProject({\r\n          ...project,\r\n          student_preference_for_project: preference,\r\n        });\r\n        setChangingPeference(false);\r\n        setPreferenceChangeOpen(false);\r\n      });\r\n  };\r\n\r\n  const confirmRemoveProject = () => {\r\n    setRemovingProject(true);\r\n    axios\r\n      .delete(\r\n        `/student_select_project/${project.selection_id}/delete`,\r\n        getConfig()\r\n      )\r\n      .then((res) => {\r\n        removeProject(project.project_id);\r\n        setRemovingProject(false);\r\n        setRemoveProjectOpen(false);\r\n      });\r\n  };\r\n\r\n  // stuff for menu\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClickMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const projectMenu = (\r\n    <div className={classes.projectMenu}>\r\n      <IconButton\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClickMenu}\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleCloseMenu}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            handleCloseMenu();\r\n            setPreferenceChangeOpen(true);\r\n          }}\r\n        >\r\n          change preference\r\n        </MenuItem>\r\n        <MenuItem\r\n          onClick={() => {\r\n            handleCloseMenu();\r\n            setRemoveProjectOpen(true);\r\n          }}\r\n        >\r\n          remove project\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Grid item key={project.project_id}>\r\n      <Card className={classes.card}>\r\n        <CardHeader\r\n          classes={{\r\n            root: classes.cardHeader,\r\n            title: classes.studentName,\r\n            subheader: classes.subheader,\r\n          }}\r\n          avatar={<Avatar className={classes.avatar}></Avatar>}\r\n          title={project.project_name}\r\n        ></CardHeader>\r\n        {projectMenu}\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography className={classes.fieldTitle}>\r\n            Project Deadline\r\n          </Typography>\r\n          <Typography className={classes.fieldValue}>\r\n            {project.project_deadline}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardContent\r\n          className={`${classes.cardContent} ${classes.noPaddingTop}`}\r\n        >\r\n          <Typography className={classes.fieldTitle}>Project Type</Typography>\r\n          <Typography className={classes.fieldValue}>\r\n            {project.project_type ? project.project_type : \"Not Specified\"}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardContent\r\n          className={`${classes.cardContent} ${classes.noPaddingTop}`}\r\n        >\r\n          <Typography variant=\"subtitle2\" className={classes.fieldTitle}>\r\n            Project Tech\r\n          </Typography>\r\n\r\n          <div className={classes.skillsRoot}>\r\n            {project.project_tech !== \"\" && project.project_tech ? (\r\n              project.project_tech.split(\",\").map((skill, index) => (\r\n                <Chip\r\n                  key={index}\r\n                  label={skill}\r\n                  classes={{\r\n                    root: classes.chip,\r\n                    label: classes.chipLabel,\r\n                  }}\r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              ))\r\n            ) : (\r\n              <Chip\r\n                label={\"Any\"}\r\n                classes={{\r\n                  root: classes.chip,\r\n                  label: classes.chipLabel,\r\n                }}\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          </div>\r\n        </CardContent>\r\n        <Divider></Divider>\r\n        <CardContent>\r\n          <Link\r\n            to={{\r\n              pathname: `projects/${project.project_id}`,\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <Button\r\n              color=\"secondary\"\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n            >\r\n              View Details\r\n            </Button>\r\n          </Link>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* modal for changing preference */}\r\n      <div>\r\n        <Dialog\r\n          open={changePreferenceOpen}\r\n          onClose={() => setPreferenceChangeOpen(false)}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogContent>\r\n            <InputLabel className={classes.selectLable} id=\"changePreference\">\r\n              Select your preference for <strong>{project.project_name}</strong>\r\n            </InputLabel>\r\n            {changingPreference ? (\r\n              <LinearProgress className={classes.loading} />\r\n            ) : (\r\n              <Select\r\n                labelId=\"changePreference\"\r\n                value={preference}\r\n                onChange={handlePreferenceChange}\r\n              >\r\n                <MenuItem value={0}>None</MenuItem>\r\n                <MenuItem value={1}>Low</MenuItem>\r\n                <MenuItem value={2}>Medium</MenuItem>\r\n                <MenuItem value={3}>High</MenuItem>\r\n              </Select>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={() => confirmPeferenceChange()}\r\n              color=\"primary\"\r\n              disabled={changingPreference}\r\n            >\r\n              Confirm\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                setPreferenceChangeOpen(false);\r\n                setPreference(project.student_preference_for_project);\r\n              }}\r\n              color=\"primary\"\r\n              disabled={changingPreference}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n\r\n      {/* modal for removing the project */}\r\n      <div>\r\n        <Dialog\r\n          open={removeProjectOpen}\r\n          onClose={() => setRemoveProjectOpen(false)}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogContent>\r\n            <InputLabel className={classes.selectLable} id=\"removeProject\">\r\n              Do you wanna remove <strong>{project.project_name}</strong> from\r\n              selected projects?\r\n            </InputLabel>\r\n            {removingProject ? (\r\n              <LinearProgress className={classes.loading} />\r\n            ) : null}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={() => confirmRemoveProject()}\r\n              color=\"primary\"\r\n              disabled={removingProject}\r\n            >\r\n              Yes\r\n            </Button>\r\n            <Button\r\n              onClick={() => setRemoveProjectOpen(false)}\r\n              color=\"primary\"\r\n              disabled={removingProject}\r\n            >\r\n              No\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport axios from \"axios\";\r\nimport { getConfig } from \"../../authConfig\";\r\nimport { DataContext } from \"../../contexts/dataContext\";\r\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridRoot: {\r\n    margin: theme.spacing(1, \"auto\"),\r\n    backgroundColor: \"white\",\r\n  },\r\n  selectionCard: {\r\n    margin: theme.spacing(1),\r\n    padding: theme.spacing(0),\r\n    backgroundColor: \"#fafafa\",\r\n  },\r\n  cardTitle: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  cardMessgae: {\r\n    margin: theme.spacing(1),\r\n    color: \"grey\",\r\n  },\r\n}));\r\n\r\nconst StudentSelected = () => {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedProjects, setSelectedProjects] = useState([]);\r\n\r\n  const { data } = useContext(DataContext);\r\n\r\n  const matchProjects = (selections, allProjects) => {\r\n    return selections.map((selection) => {\r\n      const match = allProjects.find(\r\n        (project) => project.project_id === selection.project_id\r\n      );\r\n      return {\r\n        ...match,\r\n        selection_id: selection.id,\r\n        student_preference_for_project:\r\n          selection.student_preference_for_project,\r\n      };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/student_select_project/all\", getConfig()).then((res) => {\r\n      const studentSelection = res.data.filter(\r\n        (selection) => selection.student_id === data.profile.student_id\r\n      );\r\n      const param = {\r\n        company_name: \"\",\r\n        industry_type: \"\",\r\n        project_name: \"\",\r\n        project_type: [],\r\n        project_tech: [],\r\n        keywords: [],\r\n      };\r\n\r\n      axios.post(\"/company_project/search\", param, getConfig()).then((res) => {\r\n        console.log(res.data);\r\n        setSelectedProjects(matchProjects(studentSelection, res.data));\r\n        setLoading(false);\r\n      });\r\n\r\n      // This technique would work if we have separate way of gettting company info\r\n      // axios\r\n      //   .all(\r\n      //     studentSelection.map((selection) =>\r\n      //       axios.get(\r\n      //         `/company_project/${selection.project_id}`,\r\n      //         getConfig()\r\n      //       )\r\n      //     )\r\n      //   )\r\n      //   .then((responses) => {\r\n      //     responses.map((res, index) => {\r\n      //       const project = res.data;\r\n      //       const selection = studentSelection[index]; //has the same length and indices as projects\r\n\r\n      //       console.log(project, selection);\r\n      //     });\r\n      //   });\r\n    });\r\n  }, [data.profile.student_id]);\r\n\r\n  //used to change preference from project card (child) component\r\n  const setModifiedProject = (modifiedProject) => {\r\n    setSelectedProjects(\r\n      selectedProjects.map((project) =>\r\n        project.project_id === modifiedProject.project_id\r\n          ? modifiedProject\r\n          : project\r\n      )\r\n    );\r\n  };\r\n\r\n  //used to remove project from project card (child) component\r\n  const removeProject = (project_id) => {\r\n    setSelectedProjects(\r\n      selectedProjects.filter((project) => project.project_id !== project_id)\r\n    );\r\n  };\r\n\r\n  //returns projects by preference if none found returns no project\r\n  const getProjects = (preference) => {\r\n    const projects = selectedProjects\r\n      .filter(\r\n        (project) => project.student_preference_for_project === preference\r\n      )\r\n      .map((project) => (\r\n        <ProjectCard\r\n          project={project}\r\n          setModifiedProject={setModifiedProject}\r\n          removeProject={removeProject}\r\n        />\r\n      ));\r\n    return projects.length ? (\r\n      projects\r\n    ) : (\r\n      <div align=\"center\">\r\n        <Typography className={classes.cardMessgae}>\r\n          No projects under this category\r\n        </Typography>\r\n        <ErrorOutlineIcon className={classes.cardMessgae} fontSize=\"large\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <LinearProgress\r\n          color=\"secondary\"\r\n          style={{ margin: \"20px\" }}\r\n        ></LinearProgress>\r\n      ) : (\r\n        <Grid container className={classes.gridRoot}>\r\n          <Grid item xs={12} sm={12} md={6} lg={3}>\r\n            <Card className={classes.selectionCard}>\r\n              <CardContent>\r\n                <Typography\r\n                  align=\"center\"\r\n                  variant=\"h5\"\r\n                  className={classes.cardTitle}\r\n                >\r\n                  No Preference\r\n                </Typography>\r\n                <Divider></Divider>\r\n                <br></br>\r\n                {getProjects(0)}\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={6} lg={3}>\r\n            <Card className={classes.selectionCard}>\r\n              <CardContent>\r\n                <Typography\r\n                  align=\"center\"\r\n                  variant=\"h5\"\r\n                  className={classes.cardTitle}\r\n                >\r\n                  Low Preference\r\n                </Typography>\r\n                <Divider></Divider>\r\n                <br></br>\r\n                {getProjects(1)}\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={6} lg={3}>\r\n            <Card className={classes.selectionCard}>\r\n              <CardContent>\r\n                <Typography\r\n                  align=\"center\"\r\n                  variant=\"h5\"\r\n                  className={classes.cardTitle}\r\n                >\r\n                  Medium Preference\r\n                </Typography>\r\n                <Divider></Divider>\r\n                <br></br>\r\n                {getProjects(2)}\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={6} lg={3}>\r\n            <Card className={classes.selectionCard}>\r\n              <CardContent>\r\n                <Typography\r\n                  align=\"center\"\r\n                  variant=\"h5\"\r\n                  className={classes.cardTitle}\r\n                >\r\n                  High Preference\r\n                </Typography>\r\n                <Divider></Divider>\r\n                <br></br>\r\n                {getProjects(3)}\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudentSelected;\r\n","import React from \"react\";\r\nimport { Route, useRouteMatch, Switch } from \"react-router-dom\";\r\nimport ProjectsListTemplate from \"../../components/CompanyPublic/ProjectListTemplate\";\r\nimport StudentProfile from \"../StudentProfile/StudentProfile\";\r\nimport { StudentSearch } from \"../StudentSearch/StudentSearch\";\r\nimport StudentSelected from \"../StudentSelected/StudentSelected\";\r\n\r\nconst StudentRoutes = () => {\r\n  let { path } = useRouteMatch();\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route path={path} exact component={StudentProfile} />\r\n        <Route path={`${path}/search`} exact component={StudentSearch} />\r\n\r\n        <Route path={`${path}/projects`} exact component={StudentSelected} />\r\n\r\n\r\n        <Route\r\n          path={`${path}/projects/:project`}\r\n          render={(props) => <ProjectsListTemplate {...props} />}\r\n        />\r\n\r\n        {/* <Route\r\n          path={`${path}/*`}\r\n          render={() => (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/whoTouchMySpaghet\",\r\n              }}\r\n            />\r\n          )}\r\n        /> */}\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentRoutes;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AccountCircleRoundedIcon from \"@material-ui/icons/AccountCircleRounded\";\r\nimport SearchRoundedIcon from \"@material-ui/icons/SearchRounded\";\r\nimport StarsIcon from \"@material-ui/icons/Stars\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport { ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"black\",\r\n    fontFamily: \"Lato\",\r\n  },\r\n}));\r\n\r\nconst StudentMenu = () => {\r\n  const classes = useStyles();\r\n  let { url } = useRouteMatch();\r\n\r\n  const options = [\r\n    { text: \"Profile\", url: `${url}`, icon: <AccountCircleRoundedIcon /> },\r\n    { text: \"My Projects\", url: `${url}/projects`, icon: <StarsIcon /> },\r\n    {\r\n      text: \"Search\",\r\n      url: `${url}/search`,\r\n      icon: <SearchRoundedIcon />,\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      {options.map((item, index) => (\r\n        <Link to={item.url} className={classes.link} key={item.text}>\r\n          <ListItem key={item.text}>\r\n            <ListItemIcon>{item.icon}</ListItemIcon>\r\n            <ListItemText primary={item.text} />\r\n          </ListItem>\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentMenu;\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useRef,\r\n  useCallback,\r\n} from \"react\";\r\nimport CompanyDashboard from \"../../assets/CompanyDashboard.jpg\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  Divider,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  IconButton,\r\n  Select,\r\n  MenuItem,\r\n  Grid,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  TextField,\r\n  DialogActions,\r\n  DialogContent,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n  LinearProgress,\r\n  FormControl,\r\n  InputLabel,\r\n  FormLabel,\r\n} from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport PersonRoundedIcon from \"@material-ui/icons/PersonRounded\";\r\nimport BusinessRoundedIcon from \"@material-ui/icons/BusinessRounded\";\r\nimport WorkRoundedIcon from \"@material-ui/icons/WorkRounded\";\r\nimport ShortTextRoundedIcon from \"@material-ui/icons/ShortTextRounded\";\r\nimport PeopleRoundedIcon from \"@material-ui/icons/PeopleRounded\";\r\nimport LanguageRoundedIcon from \"@material-ui/icons/LanguageRounded\";\r\nimport PhoneRoundedIcon from \"@material-ui/icons/PhoneRounded\";\r\nimport LocationOnRoundedIcon from \"@material-ui/icons/LocationOnRounded\";\r\nimport EditTwoToneIcon from \"@material-ui/icons/EditTwoTone\";\r\n\r\nimport { DataContext } from \"../../contexts/dataContext\";\r\nimport { getConfig } from \"../../authConfig\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  profileLogo: {\r\n    backgroundRepeat: \"no-repeat\",\r\n    objectPosition: \"20% 30%\",\r\n    width: \"100vw\",\r\n    height: \"15vw\",\r\n    maxWidth: \"100%\",\r\n    zIndex: 1,\r\n    objectFit: \"cover\",\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  profileHeader: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  icon: {\r\n    objectFit: \"contain\",\r\n    position: \"relative\",\r\n    color: \"#f50057\",\r\n  },\r\n  skills: {\r\n    textAlign: \"center\",\r\n    borderRadius: 200,\r\n    backgroundColor: \"#FFFFFF\",\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\",\r\n  },\r\n  quarterWidth: {\r\n    width: \"25%\",\r\n  },\r\n  formInput: {\r\n    width: \"100%\",\r\n  },\r\n  formInput2: {\r\n    width: \"20%\",\r\n    marginRight: \"30px\",\r\n  },\r\n  dialogInput: {\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  loginAlert: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  dialogConfirm: {\r\n    marginBottom: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  inputLabel: {\r\n    fontSize: \"20px\",\r\n  },\r\n  inputLabelBold: {\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  flex: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  labelAsterisk: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  selectInput: {\r\n    width: \"100px\",\r\n  },\r\n}));\r\nexport default function CompanyProfile() {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(true);\r\n  const [loading2, setLoading2] = useState(false);\r\n  const states = [\r\n    \"AL\",\r\n    \"AK\",\r\n    \"AZ\",\r\n    \"AR\",\r\n    \"CA\",\r\n    \"CO\",\r\n    \"CT\",\r\n    \"DE\",\r\n    \"DC\",\r\n    \"FL\",\r\n    \"GA\",\r\n    \"HI\",\r\n    \"ID\",\r\n    \"IL\",\r\n    \"IN\",\r\n    \"IA\",\r\n    \"KS\",\r\n    \"KY\",\r\n    \"LA\",\r\n    \"ME\",\r\n    \"MD\",\r\n    \"MA\",\r\n    \"MI\",\r\n    \"MN\",\r\n    \"MS\",\r\n    \"MO\",\r\n    \"MT\",\r\n    \"NE\",\r\n    \"NV\",\r\n    \"NH\",\r\n    \"NJ\",\r\n    \"NM\",\r\n    \"NY\",\r\n    \"NC\",\r\n    \"ND\",\r\n    \"OH\",\r\n    \"OK\",\r\n    \"OR\",\r\n    \"PA\",\r\n    \"RI\",\r\n    \"SC\",\r\n    \"SD\",\r\n    \"TN\",\r\n    \"TX\",\r\n    \"UT\",\r\n    \"VT\",\r\n    \"VA\",\r\n    \"WA\",\r\n    \"WV\",\r\n    \"WI\",\r\n    \"WY\",\r\n  ];\r\n\r\n  //Input ref for login popup.\r\n  const inputref = useRef(0);\r\n\r\n  //initially get the data from DataContext\r\n  const { data, dispatch } = useContext(DataContext);\r\n  const { profile } = data;\r\n\r\n  const [profileInfo, setProfileInfo] = useState({\r\n    //This is the data you get from api.\r\n    name: \"\",\r\n    companyMission: \"\",\r\n    companyDescription: \"\",\r\n    companyType: \"\",\r\n    companyWebsite: \"\",\r\n    companyRep: \"\",\r\n    industryType: \"\",\r\n    phoneNumber: \"\",\r\n    streetAddress: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    zip: \"\",\r\n    streetAddress2: \"\",\r\n    city2: \"\",\r\n    state2: \"\",\r\n    zip2: \"\",\r\n    contact_email: \"\",\r\n    isSolo: \"\",\r\n  });\r\n\r\n  const getTruncatedCoordinate = (coordinate) => {\r\n    if (coordinate.length > 10) {\r\n      return coordinate.slice(0, 10);\r\n    }\r\n    return coordinate;\r\n  };\r\n\r\n  const getStreetAddress = (address) => {\r\n    if (address !== \"\") {\r\n      const res = address.split(\"|\");\r\n      return res[0];\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const getCity = (address) => {\r\n    if (address !== \"\") {\r\n      const res = address.split(\"|\");\r\n      return res[1];\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const getState = (address) => {\r\n    if (address !== \"\") {\r\n      const res = address.split(\"|\");\r\n      return res[2];\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const getCompanyAddress = () => {\r\n    if (profileInfo.streetAddress && profileInfo.city && profileInfo.state) {\r\n      return `${profileInfo.streetAddress}|${profileInfo.city}|${profileInfo.state}`;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const getMailingAddress = () => {\r\n    if (profileInfo.streetAddress2 && profileInfo.city2 && profileInfo.state2) {\r\n      return `${profileInfo.streetAddress2}|${profileInfo.city2}|${profileInfo.state2}`;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const slug = localStorage.getItem(\"slug\");\r\n\r\n  const getProfile = useCallback(() => {\r\n    if (slug) {\r\n      axios\r\n        .get(`/company_profile/${slug}`, getConfig())\r\n        .then((res) => {\r\n          res.data.company_representative_type =\r\n            res.data.company_representative_type + \"\";\r\n          dispatch({ type: \"SET_PROFILE\", payload: res.data }); //Set the data in dataContext\r\n          setProfileInfo({\r\n            //Set data locally, in case use change, he changes this.\r\n            name: res.data.company_name,\r\n            companyMission: res.data.company_mission,\r\n            companyDescription: res.data.company_description,\r\n            companyType: res.data.company_type,\r\n            companyWebsite: res.data.company_website,\r\n            companyRep: res.data.representative_name,\r\n            industryType: res.data.industry_type,\r\n            phoneNumber: res.data.company_phone_no,\r\n            streetAddress: getStreetAddress(res.data.company_address),\r\n            city: getCity(res.data.company_address),\r\n            state: getState(res.data.company_address),\r\n            zip: res.data.company_zip,\r\n            streetAddress2: getStreetAddress(res.data.mailing_address),\r\n            city2: getCity(res.data.mailing_address),\r\n            state2: getState(res.data.mailing_address),\r\n            zip2: res.data.mailing_zip,\r\n            isSolo: res.data.company_representative_type,\r\n            contact_email: res.data.company_contact_email,\r\n          });\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, [setLoading, setProfileInfo, dispatch, slug]);\r\n\r\n  useEffect(() => {\r\n    getProfile();\r\n  }, [getProfile]);\r\n\r\n  const [showEditFields, setShowEditFields] = useState(false);\r\n\r\n  const handleOpenEdit = () => {\r\n    setShowEditFields(!showEditFields);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setProfileInfo({\r\n      ...profileInfo,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setProfileInfo({\r\n      name: profile.company_name,\r\n      companyMission: profile.company_mission,\r\n      companyDescription: profile.company_description,\r\n      companyType: profile.company_type,\r\n      companyWebsite: profile.company_website,\r\n      companyRep: profile.representative_name,\r\n      industryType: profile.industry_type,\r\n      phoneNumber: profile.company_phone_no,\r\n      zip: profile.company_zip,\r\n      streetAddress: getStreetAddress(profile.company_address),\r\n      city: getCity(profile.company_address),\r\n      state: getState(profile.company_address),\r\n      streetAddress2: getStreetAddress(profile.mailing_address),\r\n      city2: getCity(profile.mailing_address),\r\n      state2: getState(profile.mailing_address),\r\n      zip2: profile.zip2,\r\n      isSolo: profile.company_representative_type,\r\n      contact_email: profile.company_contact_email,\r\n    });\r\n    setShowEditFields(!showEditFields);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  //api for select IndustryType\r\n  const [industryTypes, setIndustryTypes] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/company_profile/list_industry_type\", getConfig())\r\n      .then((res) => {\r\n        const data = res.data.industry_type.map((item, index) => {\r\n          return {\r\n            label: item,\r\n            value: index,\r\n          };\r\n        });\r\n        setIndustryTypes(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleDialogClose = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setAuthError(\"\");\r\n    setDialogOpen(false);\r\n  };\r\n\r\n  const [authError, setAuthError] = useState(\"\");\r\n  const [updateErrors, setUpdateErrors] = useState({\r\n    company_phone_no: \"\",\r\n    company_name: \"\",\r\n    industry_type: \"\",\r\n    representative_name: \"\",\r\n    company_representative_type: \"\",\r\n    company_type: \"\",\r\n    company_address: \"\",\r\n    mailing_address: \"\",\r\n    company_mission: \"\",\r\n    company_zip: \"\",\r\n    company_description: \"\",\r\n    company_contact_email: \"\",\r\n    mailing_zip: \"\",\r\n  });\r\n\r\n  const handleConfirm = () => {\r\n    setLoading2(true);\r\n    axios\r\n      .post(\"/token/\", {\r\n        email: email,\r\n        password: password,\r\n      })\r\n      .then((res) => {\r\n        //first remove local storage\r\n        localStorage.setItem(\"token\", res.data.access);\r\n        localStorage.setItem(\"role_id\", res.data.role_id);\r\n        localStorage.setItem(\"email_id\", res.data.email_id);\r\n        localStorage.setItem(\"slug\", res.data.slug);\r\n        let slug = res.data.slug;\r\n        let address = `${profileInfo.streetAddress}, ${profileInfo.city}, ${profileInfo.state} ${profileInfo.zip} `;\r\n        let token =\r\n          \"pk.eyJ1Ijoicm9oaXRzaGFyZGhhIiwiYSI6ImNrajIxcWVxaTIyZWgycXF0NWwxMG9wMTMifQ.NuOk3LeRP5b5Gvtso3MFrg\";\r\n        axios\r\n          .get(\r\n            `https://api.mapbox.com/geocoding/v5/mapbox.places/${address}.json?access_token=${token}`,\r\n            getConfig()\r\n          )\r\n          .then((response) => {\r\n            axios\r\n              .put(\r\n                `/company_profile/${slug}/update`,\r\n                {\r\n                  username: localStorage.getItem(\"email_id\"),\r\n                  company_name: profileInfo.name,\r\n                  company_phone_no: profileInfo.phoneNumber,\r\n                  industry_type: profileInfo.industryType,\r\n                  representative_name: profileInfo.companyRep,\r\n                  company_representative_type: profileInfo.isSolo,\r\n                  company_type: profileInfo.companyType,\r\n                  company_address: getCompanyAddress(),\r\n                  mailing_address: getMailingAddress(),\r\n                  company_zip: profileInfo.zip,\r\n                  mailing_zip: profileInfo.zip2,\r\n                  company_website: profileInfo.companyWebsite,\r\n                  company_mission: profileInfo.companyMission,\r\n                  company_description: profileInfo.companyDescription,\r\n                  company_contact_email: profileInfo.contact_email,\r\n                  company_latitude: getTruncatedCoordinate(\r\n                    String(response.data.features[0].geometry.coordinates[1])\r\n                  ),\r\n                  company_longitude: getTruncatedCoordinate(\r\n                    String(response.data.features[0].geometry.coordinates[0])\r\n                  ),\r\n                },\r\n                getConfig()\r\n              )\r\n              .then((res) => {\r\n                dispatch({ type: \"UPDATE_PROFILE\", payload: res.data });\r\n                setDialogOpen(false);\r\n                setShowEditFields(false);\r\n                setLoading2(false);\r\n                axios\r\n                  .post(\"/token/\", {\r\n                    email: email,\r\n                    password: password,\r\n                  })\r\n                  .then((res) => {\r\n                    localStorage.setItem(\"token\", res.data.access);\r\n                    localStorage.setItem(\"role_id\", res.data.role_id);\r\n                    localStorage.setItem(\"email_id\", res.data.email_id);\r\n                    localStorage.setItem(\"slug\", res.data.slug);\r\n                    setEmail(null);\r\n                    setPassword(null);\r\n                    //2nd time token obtain error\r\n                  })\r\n                  .catch((err) => {\r\n                    console.log(err.response.data);\r\n                  });\r\n                //Profile update api error.\r\n              })\r\n              .catch((err) => {\r\n                console.log(err.response.data);\r\n                setUpdateErrors({ ...updateErrors, ...err.response.data });\r\n                setDialogOpen(false);\r\n                setLoading2(false);\r\n              });\r\n          })\r\n          //Logitute / Latitute api error.\r\n          .catch((err) => {\r\n            console.log(err.response.data);\r\n          });\r\n      })\r\n      //Log In api error.\r\n      .catch((err) => {\r\n        setLoading2(false);\r\n        setAuthError(\r\n          err.response.data.detail +\r\n            \". Make sure your email and password is correct.\"\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <LinearProgress color=\"secondary\" />\r\n      ) : (\r\n        <>\r\n          <div className={classes.profileHeader}>\r\n            <img\r\n              alt=\"profile logo\"\r\n              className={classes.profileLogo}\r\n              src={CompanyDashboard}\r\n            ></img>\r\n          </div>\r\n          {showEditFields ? (\r\n            <Typography style={{ padding: \"20px\" }}>\r\n              <span className={classes.labelAsterisk}>*</span> - Required Fields\r\n            </Typography>\r\n          ) : null}\r\n          <form>\r\n            <List>\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemIcon>\r\n                  <BusinessRoundedIcon fontSize=\"large\" />\r\n                </ListItemIcon>\r\n                {showEditFields === false ? (\r\n                  <ListItemText\r\n                    classes={{\r\n                      secondary: classes.inline,\r\n                      primary: classes.inputLabelBold,\r\n                    }}\r\n                    primary=\"Company Name\"\r\n                    secondary={\r\n                      <React.Fragment>\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"body2\"\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          {profileInfo.name}\r\n                        </Typography>\r\n                      </React.Fragment>\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <div className={classes.fullWidth}>\r\n                    <TextField\r\n                      label=\"Company Name\"\r\n                      className={classes.formInput}\r\n                      value={profileInfo.name}\r\n                      onChange={handleChange}\r\n                      placeholder={profileInfo.name}\r\n                      name=\"name\"\r\n                      required\r\n                      InputLabelProps={{\r\n                        classes: {\r\n                          root: classes.inputLabel,\r\n                          asterisk: classes.labelAsterisk,\r\n                        },\r\n                      }}\r\n                      helperText={`${profileInfo.name.length}/50`}\r\n                      inputProps={{ maxLength: 50 }}\r\n                      error={updateErrors.company_name !== \"\"}\r\n                    ></TextField>\r\n                    {updateErrors.company_name ? (\r\n                      <Typography color=\"error\">\r\n                        {updateErrors.company_name}\r\n                      </Typography>\r\n                    ) : null}\r\n                  </div>\r\n                )}\r\n                {showEditFields === false ? (\r\n                  <IconButton\r\n                    edge=\"end\"\r\n                    className={classes.icon}\r\n                    onClick={handleOpenEdit}\r\n                  >\r\n                    <EditTwoToneIcon />\r\n                  </IconButton>\r\n                ) : null}\r\n              </ListItem>\r\n              {!showEditFields ? (\r\n                <Divider variant=\"inset\" component=\"li\" />\r\n              ) : null}\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemIcon>\r\n                  <ShortTextRoundedIcon fontSize=\"large\" />\r\n                </ListItemIcon>\r\n                {showEditFields === false ? (\r\n                  <ListItemText\r\n                    primary=\"Company Mission\"\r\n                    classes={{\r\n                      secondary: classes.inline,\r\n                      primary: classes.inputLabelBold,\r\n                    }}\r\n                    secondary={\r\n                      <React.Fragment>\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"body2\"\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          {profileInfo.companyMission}\r\n                        </Typography>\r\n                      </React.Fragment>\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <div className={classes.fullWidth}>\r\n                    <TextField\r\n                      multiline\r\n                      label=\"Company Mission\"\r\n                      className={classes.formInput}\r\n                      value={profileInfo.companyMission}\r\n                      onChange={handleChange}\r\n                      placeholder={profileInfo.companyMission}\r\n                      name=\"companyMission\"\r\n                      required\r\n                      helperText={`${profileInfo.companyMission.length}/225`}\r\n                      InputLabelProps={{\r\n                        classes: {\r\n                          root: classes.inputLabel,\r\n                          asterisk: classes.labelAsterisk,\r\n                        },\r\n                      }}\r\n                      inputProps={{ maxLength: 225 }}\r\n                      error={updateErrors.company_mission !== \"\"}\r\n                    ></TextField>\r\n                    {updateErrors.company_mission ? (\r\n                      <Typography>{updateErrors.company_mission}</Typography>\r\n                    ) : null}\r\n                  </div>\r\n                )}\r\n              </ListItem>\r\n              {!showEditFields ? (\r\n                <Divider variant=\"inset\" component=\"li\" />\r\n              ) : null}\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemIcon>\r\n                  <ShortTextRoundedIcon fontSize=\"large\" />\r\n                </ListItemIcon>\r\n                {showEditFields === false ? (\r\n                  <ListItemText\r\n                    primary=\"Company Description\"\r\n                    classes={{\r\n                      secondary: classes.inline,\r\n                      primary: classes.inputLabelBold,\r\n                    }}\r\n                    secondary={\r\n                      <React.Fragment>\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"body2\"\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          {profileInfo.companyDescription}\r\n                        </Typography>\r\n                      </React.Fragment>\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <div className={classes.fullWidth}>\r\n                    <TextField\r\n                      label=\"Company Description\"\r\n                      multiline\r\n                      className={classes.formInput}\r\n                      value={profileInfo.companyDescription}\r\n                      onChange={handleChange}\r\n                      name=\"companyDescription\"\r\n                      required\r\n                      helperText={`${profileInfo.companyDescription.length}/500`}\r\n                      InputLabelProps={{\r\n                        classes: {\r\n                          root: classes.inputLabel,\r\n                          asterisk: classes.labelAsterisk,\r\n                        },\r\n                      }}\r\n                      inputProps={{ maxLength: 500 }}\r\n                      error={updateErrors.company_description !== \"\"}\r\n                    ></TextField>\r\n                    {updateErrors.company_description ? (\r\n                      <Typography color=\"error\">\r\n                        {updateErrors.company_description}\r\n                      </Typography>\r\n                    ) : null}\r\n                  </div>\r\n                )}\r\n              </ListItem>\r\n              {!showEditFields ? (\r\n                <Divider variant=\"inset\" component=\"li\" />\r\n              ) : null}\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemIcon>\r\n                  <PersonRoundedIcon />\r\n                </ListItemIcon>\r\n                {showEditFields === false ? (\r\n                  <ListItemText\r\n                    primary=\"Company Representative\"\r\n                    classes={{\r\n                      secondary: classes.inline,\r\n                      primary: classes.inputLabelBold,\r\n                    }}\r\n                    secondary={\r\n                      <React.Fragment>\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"body2\"\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          {profileInfo.companyRep}\r\n                        </Typography>\r\n                      </React.Fragment>\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <div className={classes.fullWidth}>\r\n                    <TextField\r\n                      label=\"Company Representative\"\r\n                      className={classes.formInput}\r\n                      value={profileInfo.companyRep}\r\n                      onChange={handleChange}\r\n                      name=\"companyRep\"\r\n                      inputProps={{ maxLength: 50 }}\r\n                      required\r\n                      InputLabelProps={{\r\n                        classes: {\r\n                          root: classes.inputLabel,\r\n                          asterisk: classes.labelAsterisk,\r\n                        },\r\n                      }}\r\n                      error={updateErrors.representative_name !== \"\"}\r\n                    ></TextField>\r\n                    {updateErrors.representative_name ? (\r\n                      <Typography color=\"error\">\r\n                        {updateErrors.representative_name}\r\n                      </Typography>\r\n                    ) : null}\r\n                  </div>\r\n                )}\r\n              </ListItem>\r\n              {!showEditFields ? (\r\n                <Divider variant=\"inset\" component=\"li\" />\r\n              ) : null}\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemIcon>\r\n                  <LanguageRoundedIcon />\r\n                </ListItemIcon>\r\n                {showEditFields === false ? (\r\n                  <ListItemText\r\n                    primary=\"Website\"\r\n                    classes={{\r\n                      secondary: classes.inline,\r\n                      primary: classes.inputLabelBold,\r\n                    }}\r\n                    secondary={\r\n                      <React.Fragment>\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"body2\"\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          {profileInfo.companyWebsite}\r\n                        </Typography>\r\n                      </React.Fragment>\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <div className={classes.fullWidth}>\r\n                    <TextField\r\n                      label=\"Website\"\r\n                      required\r\n                      InputLabelProps={{\r\n                        classes: {\r\n                          root: classes.inputLabel,\r\n                          asterisk: classes.labelAsterisk,\r\n                        },\r\n                      }}\r\n                      className={classes.formInput}\r\n                      value={profileInfo.companyWebsite}\r\n                      onChange={handleChange}\r\n                      name=\"companyWebsite\"\r\n                      inputProps={{ maxLength: 50 }}\r\n                    ></TextField>\r\n                  </div>\r\n                )}\r\n              </ListItem>\r\n              {!showEditFields ? (\r\n                <Divider variant=\"inset\" component=\"li\" />\r\n              ) : null}\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemIcon>\r\n                  <ShortTextRoundedIcon fontSize=\"large\" />\r\n                </ListItemIcon>\r\n                {showEditFields === false ? (\r\n                  <ListItemText\r\n                    primary=\"Contact Email\"\r\n                    classes={{\r\n                      secondary: classes.inline,\r\n                      primary: classes.inputLabelBold,\r\n                    }}\r\n                    secondary={\r\n                      <React.Fragment>\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"body2\"\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          {profileInfo.contact_email}\r\n                        </Typography>\r\n                      </React.Fragment>\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <div className={classes.fullWidth}>\r\n                    <TextField\r\n                      label=\"Contact Email\"\r\n                      className={classes.formInput}\r\n                      value={profileInfo.contact_email}\r\n                      onChange={handleChange}\r\n                      placeholder={profileInfo.contact_email}\r\n                      name=\"contact_email\"\r\n                      required\r\n                      InputLabelProps={{\r\n                        classes: {\r\n                          root: classes.inputLabel,\r\n                          asterisk: classes.labelAsterisk,\r\n                        },\r\n                      }}\r\n                      inputProps={{ maxLength: 50 }}\r\n                      error={updateErrors.company_contact_email !== \"\"}\r\n                    ></TextField>\r\n                    {updateErrors.company_contact_email ? (\r\n                      <Typography color=\"error\">\r\n                        {updateErrors.company_contact_email}\r\n                      </Typography>\r\n                    ) : null}\r\n                  </div>\r\n                )}\r\n              </ListItem>\r\n              {!showEditFields ? (\r\n                <Divider variant=\"inset\" component=\"li\" />\r\n              ) : null}\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemIcon>\r\n                  <BusinessRoundedIcon />\r\n                </ListItemIcon>\r\n                {showEditFields === false ? (\r\n                  <ListItemText\r\n                    primary=\"Company Type\"\r\n                    classes={{\r\n                      secondary: classes.inline,\r\n                      primary: classes.inputLabelBold,\r\n                    }}\r\n                    secondary={\r\n                      <React.Fragment>\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"body2\"\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          {profileInfo.companyType === 0\r\n                            ? \"Social Business\"\r\n                            : profileInfo.companyType === 1\r\n                            ? \"Private\"\r\n                            : \"Non-Profit\"}\r\n                        </Typography>\r\n                      </React.Fragment>\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <div className={classes.fullWidth}>\r\n                    <FormControl required className={classes.fullWidth}>\r\n                      <InputLabel\r\n                        id=\"companyType\"\r\n                        classes={{\r\n                          root: classes.inputLabel,\r\n                          asterisk: classes.labelAsterisk,\r\n                        }}\r\n                      >\r\n                        Company Type\r\n                      </InputLabel>\r\n\r\n                      <Select\r\n                        value={profileInfo.companyType}\r\n                        id=\"CompanyType\"\r\n                        name=\"companyType\"\r\n                        className={classes.formInput}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <MenuItem value=\"1\">Private</MenuItem>\r\n                        <MenuItem value=\"2\">Non-Profit</MenuItem>\r\n                        <MenuItem value=\"0\">Social Business</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </div>\r\n                )}\r\n              </ListItem>\r\n              {!showEditFields ? (\r\n                <Divider variant=\"inset\" component=\"li\" />\r\n              ) : null}\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemIcon>\r\n                  <WorkRoundedIcon />\r\n                </ListItemIcon>\r\n                {showEditFields === false ? (\r\n                  <ListItemText\r\n                    primary=\"Industry Type\"\r\n                    classes={{\r\n                      secondary: classes.inline,\r\n                      primary: classes.inputLabelBold,\r\n                    }}\r\n                    secondary={\r\n                      <React.Fragment>\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"body2\"\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          {profileInfo.industryType}\r\n                        </Typography>\r\n                      </React.Fragment>\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <div className={classes.fullWidth}>\r\n                    <FormControl required className={classes.fullWidth}>\r\n                      <InputLabel\r\n                        id=\"industryType\"\r\n                        classes={{\r\n                          root: classes.inputLabel,\r\n                          asterisk: classes.labelAsterisk,\r\n                        }}\r\n                      >\r\n                        Industry Type\r\n                      </InputLabel>\r\n\r\n                      <Select\r\n                        className={classes.formInput}\r\n                        value={profileInfo.industryType}\r\n                        onChange={handleChange}\r\n                        name=\"industryType\"\r\n                        component=\"span\"\r\n                      >\r\n                        {industryTypes.map((item) => (\r\n                          <MenuItem key={item.label} value={item.label}>\r\n                            {item.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </div>\r\n                )}\r\n              </ListItem>\r\n              {!showEditFields ? (\r\n                <Divider variant=\"inset\" component=\"li\" />\r\n              ) : null}\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemIcon>\r\n                  <PhoneRoundedIcon />\r\n                </ListItemIcon>\r\n                {showEditFields === false ? (\r\n                  <ListItemText\r\n                    primary=\"Phone Number\"\r\n                    classes={{\r\n                      secondary: classes.inline,\r\n                      primary: classes.inputLabelBold,\r\n                    }}\r\n                    secondary={\r\n                      <React.Fragment>\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"body2\"\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          {profileInfo.phoneNumber}\r\n                        </Typography>\r\n                      </React.Fragment>\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <div className={classes.fullWidth}>\r\n                    <TextField\r\n                      label=\"Phone Number\"\r\n                      className={classes.formInput}\r\n                      value={profileInfo.phoneNumber}\r\n                      onChange={handleChange}\r\n                      name=\"phoneNumber\"\r\n                      required\r\n                      InputLabelProps={{\r\n                        classes: {\r\n                          root: classes.inputLabel,\r\n                          asterisk: classes.labelAsterisk,\r\n                        },\r\n                      }}\r\n                      inputProps={{ maxLength: 10 }}\r\n                      error={updateErrors.company_phone_no !== \"\"}\r\n                    ></TextField>\r\n                    {updateErrors.company_phone_no ? (\r\n                      <Typography color=\"error\">\r\n                        {updateErrors.company_phone_no}\r\n                      </Typography>\r\n                    ) : null}\r\n                  </div>\r\n                )}\r\n              </ListItem>\r\n              {!showEditFields ? (\r\n                <Divider variant=\"inset\" component=\"li\" />\r\n              ) : null}\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemIcon>\r\n                  <PeopleRoundedIcon />\r\n                </ListItemIcon>\r\n                {showEditFields === false ? (\r\n                  <ListItemText\r\n                    primary=\"One Person Company\"\r\n                    classes={{\r\n                      secondary: classes.inline,\r\n                      primary: classes.inputLabelBold,\r\n                    }}\r\n                    secondary={\r\n                      <React.Fragment>\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"body2\"\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          {profileInfo.isSolo === \"1\" ? \"Yes\" : \"No\"}\r\n                        </Typography>\r\n                      </React.Fragment>\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <div className={classes.fullWidth}>\r\n                    <FormControl required component=\"fieldset\">\r\n                      <FormLabel\r\n                        component=\"legend\"\r\n                        classes={{\r\n                          asterisk: classes.labelAsterisk,\r\n                        }}\r\n                      >\r\n                        Are you a one person company?\r\n                      </FormLabel>\r\n\r\n                      <RadioGroup\r\n                        aria-label=\"Are you one person company\"\r\n                        name=\"isSolo\"\r\n                        id=\"isSolo\"\r\n                        value={profileInfo.isSolo}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel\r\n                          value=\"1\"\r\n                          control={<Radio />}\r\n                          label=\"Yes (1)\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"0\"\r\n                          control={<Radio />}\r\n                          label=\"No (>=2)\"\r\n                        />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </div>\r\n                )}\r\n              </ListItem>\r\n              {!showEditFields ? (\r\n                <Divider variant=\"inset\" component=\"li\" />\r\n              ) : null}\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemIcon>\r\n                  <LocationOnRoundedIcon />\r\n                </ListItemIcon>\r\n                {showEditFields === false ? (\r\n                  <ListItemText\r\n                    primary=\"Company Address\"\r\n                    classes={{\r\n                      secondary: classes.inline,\r\n                      primary: classes.inputLabelBold,\r\n                    }}\r\n                    secondary={\r\n                      <React.Fragment>\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"body2\"\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          {`${profileInfo.streetAddress},  ${profileInfo.city}, ${profileInfo.state}, ${profileInfo.zip}`}\r\n                        </Typography>\r\n                      </React.Fragment>\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <>\r\n                    <Grid item container spacing={2}>\r\n                      <Grid item>\r\n                        <TextField\r\n                          label=\"Company Address\"\r\n                          className={classes.fullWidth}\r\n                          value={profileInfo.streetAddress}\r\n                          onChange={handleChange}\r\n                          name=\"streetAddress\"\r\n                          required\r\n                          InputLabelProps={{\r\n                            classes: {\r\n                              root: classes.inputLabel,\r\n                              asterisk: classes.labelAsterisk,\r\n                            },\r\n                          }}\r\n                          inputProps={{ maxLength: 40 }}\r\n                          placeholder=\"Street Address\"\r\n                        ></TextField>\r\n                        {profileInfo.streetAddress === \"\" ? (\r\n                          <Typography color=\"error\">\r\n                            {updateErrors.company_address}\r\n                          </Typography>\r\n                        ) : null}\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <TextField\r\n                          label=\"City\"\r\n                          className={classes.fullWidth}\r\n                          value={profileInfo.city}\r\n                          onChange={handleChange}\r\n                          required\r\n                          InputLabelProps={{\r\n                            classes: {\r\n                              root: classes.inputLabel,\r\n                              asterisk: classes.labelAsterisk,\r\n                            },\r\n                          }}\r\n                          inputProps={{ maxLength: 20 }}\r\n                          name=\"city\"\r\n                        ></TextField>\r\n                        {profileInfo.city === \"\" ? (\r\n                          <Typography color=\"error\">\r\n                            {updateErrors.company_address}\r\n                          </Typography>\r\n                        ) : null}\r\n                      </Grid>\r\n                      <Grid item className={classes.selectInput}>\r\n                        <FormControl required className={classes.fullWidth}>\r\n                          <InputLabel\r\n                            id=\"state\"\r\n                            classes={{\r\n                              root: classes.inputLabel,\r\n                              asterisk: classes.labelAsterisk,\r\n                            }}\r\n                          >\r\n                            State\r\n                          </InputLabel>\r\n                          <Select\r\n                            className={classes.fullWidth}\r\n                            label=\"State\"\r\n                            value={profileInfo.state}\r\n                            onChange={handleChange}\r\n                            name=\"state\"\r\n                            placeholder=\"state\"\r\n                          >\r\n                            {states.map((state) => (\r\n                              <MenuItem key={state} value={state}>\r\n                                {state}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <TextField\r\n                          label=\"Zipcode\"\r\n                          required\r\n                          InputLabelProps={{\r\n                            classes: {\r\n                              root: classes.inputLabel,\r\n                              asterisk: classes.labelAsterisk,\r\n                            },\r\n                          }}\r\n                          className={classes.fullWidth}\r\n                          value={profileInfo.zip}\r\n                          onChange={handleChange}\r\n                          inputProps={{ maxLength: 5 }}\r\n                          name=\"zip\"\r\n                        ></TextField>\r\n                        {profileInfo.zip === \"\" ? (\r\n                          <Typography color=\"error\">\r\n                            {updateErrors.company_zip}\r\n                          </Typography>\r\n                        ) : null}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n              </ListItem>\r\n              {!showEditFields ? (\r\n                <Divider variant=\"inset\" component=\"li\" />\r\n              ) : null}\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemIcon>\r\n                  <LocationOnRoundedIcon />\r\n                </ListItemIcon>\r\n                {showEditFields === false ? (\r\n                  <ListItemText\r\n                    primary=\"Mailing Address\"\r\n                    classes={{\r\n                      secondary: classes.inline,\r\n                      primary: classes.inputLabelBold,\r\n                    }}\r\n                    secondary={\r\n                      <React.Fragment>\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"body2\"\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          {`${profileInfo.streetAddress2},  ${profileInfo.city2}, ${profileInfo.state2}, ${profileInfo.zip2}`}\r\n                        </Typography>\r\n                      </React.Fragment>\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <>\r\n                    <Grid item container spacing={2}>\r\n                      <Grid item>\r\n                        <TextField\r\n                          label=\"Mailing Address\"\r\n                          required\r\n                          InputLabelProps={{\r\n                            classes: {\r\n                              root: classes.inputLabel,\r\n                              asterisk: classes.labelAsterisk,\r\n                            },\r\n                          }}\r\n                          className={classes.fullWidth}\r\n                          value={profileInfo.streetAddress2}\r\n                          onChange={handleChange}\r\n                          name=\"streetAddress2\"\r\n                          inputProps={{ maxLength: 40 }}\r\n                          placeholder=\"Street Address\"\r\n                        ></TextField>\r\n                        {profileInfo.streetAddress2 === \"\" ? (\r\n                          <Typography color=\"error\">\r\n                            {updateErrors.mailing_address}\r\n                          </Typography>\r\n                        ) : null}\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <TextField\r\n                          label=\"City\"\r\n                          required\r\n                          InputLabelProps={{\r\n                            classes: {\r\n                              root: classes.inputLabel,\r\n                              asterisk: classes.labelAsterisk,\r\n                            },\r\n                          }}\r\n                          className={classes.fullWidth}\r\n                          value={profileInfo.city2}\r\n                          onChange={handleChange}\r\n                          inputProps={{ maxLength: 20 }}\r\n                          name=\"city2\"\r\n                        ></TextField>\r\n                        {profileInfo.city2 === \"\" ? (\r\n                          <Typography color=\"error\">\r\n                            {updateErrors.mailing_address}\r\n                          </Typography>\r\n                        ) : null}\r\n                      </Grid>\r\n                      <Grid item className={classes.selectInput}>\r\n                        <FormControl required className={classes.fullWidth}>\r\n                          <InputLabel\r\n                            id=\"state2\"\r\n                            classes={{\r\n                              root: classes.inputLabel,\r\n                              asterisk: classes.labelAsterisk,\r\n                            }}\r\n                          >\r\n                            State\r\n                          </InputLabel>\r\n                          <Select\r\n                            className={classes.fullWidth}\r\n                            label=\"State\"\r\n                            value={profileInfo.state2}\r\n                            onChange={handleChange}\r\n                            name=\"state2\"\r\n                          >\r\n                            {states.map((state) => (\r\n                              <MenuItem key={state} value={state}>\r\n                                {state}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <TextField\r\n                          label=\"Zipcode\"\r\n                          required\r\n                          InputLabelProps={{\r\n                            classes: {\r\n                              root: classes.inputLabel,\r\n                              asterisk: classes.labelAsterisk,\r\n                            },\r\n                          }}\r\n                          className={classes.fullWidth}\r\n                          value={profileInfo.zip2}\r\n                          onChange={handleChange}\r\n                          inputProps={{ maxLength: 5 }}\r\n                          name=\"zip2\"\r\n                        ></TextField>\r\n                        {profileInfo.zip2 === \"\" ? (\r\n                          <Typography color=\"error\">\r\n                            {updateErrors.mailing_zip}\r\n                          </Typography>\r\n                        ) : null}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n              </ListItem>\r\n              {showEditFields ? (\r\n                <ListItem>\r\n                  <Grid\r\n                    container\r\n                    id=\"buttons-container\"\r\n                    justify=\"flex-end\"\r\n                    spacing={4}\r\n                  >\r\n                    <Grid item>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        onClick={handleCancel}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        onClick={handleSave}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </ListItem>\r\n              ) : null}\r\n            </List>\r\n          </form>\r\n        </>\r\n      )}\r\n      <Dialog\r\n        onClose={handleDialogClose}\r\n        open={dialogOpen}\r\n        className={classes.dialog}\r\n      >\r\n        <DialogTitle>Enter Email and Password to Confirm</DialogTitle>\r\n        {loading2 ? <LinearProgress /> : null}\r\n        {authError ? (\r\n          <Alert\r\n            className={classes.loginAlert}\r\n            variant=\"filled\"\r\n            severity=\"error\"\r\n          >\r\n            {authError}\r\n          </Alert>\r\n        ) : null}\r\n        <DialogContent>\r\n          <TextField\r\n            ref={inputref}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n            required\r\n            className={classes.dialogInput}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            onKeyPress={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                handleConfirm();\r\n              }\r\n            }}\r\n            value={password}\r\n            required\r\n            type=\"password\"\r\n            className={classes.dialogInput}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions className={classes.dialogConfirm}>\r\n          <Button\r\n            onClick={handleConfirm}\r\n            color=\"secondary\"\r\n            variant=\"outlined\"\r\n            className={classes.dialogConfirm}\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport CompanyDashboard from \"../../assets/CompanyDashboard.jpg\";\r\nimport AvatarImage from \"../../assets/image.jpg\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, LinearProgress } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\n\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport classNames from \"classnames\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nimport axios from \"axios\";\r\nimport { getConfig } from \"../../authConfig\";\r\n\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DataContext } from \"../../contexts/dataContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  main: {\r\n    width: \"100%\",\r\n  },\r\n  profileLogo: {\r\n    backgroundRepeat: \"no-repeat\",\r\n    position: \"relative\",\r\n    objectPosition: \"20% 30%\",\r\n    width: \"100vw\",\r\n    height: \"15vw\",\r\n    maxWidth: \"100%\",\r\n    zIndex: 1,\r\n    objectFit: \"cover\",\r\n  },\r\n  icon: {\r\n    objectFit: \"contain\",\r\n    position: \"relative\",\r\n    width: \"5%\",\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  download: {\r\n    objectFit: \"contain\",\r\n    position: \"relative\",\r\n    width: \"5%\",\r\n  },\r\n  skills: {\r\n    position: \"relative\",\r\n    border: \"1px solid #A6A6A6\",\r\n    borderRadius: \"50%\",\r\n    color: \"#5B5B5B\",\r\n    padding: \"2%\",\r\n    width: \"5%\",\r\n  },\r\n  skillsContainer: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  sectionHeader: {\r\n    fontWeight: \"bold\",\r\n    color: \"#606060\",\r\n  },\r\n  sectionContent: {\r\n    color: \"#5B5B5B\",\r\n    display: \"inline\",\r\n  },\r\n  profileImage: {\r\n    width: theme.spacing(20),\r\n    height: theme.spacing(20),\r\n    position: \"absolute\",\r\n    top: \"15%\",\r\n    right: \"4%\",\r\n    zIndex: 1,\r\n    objectFit: \"contain\",\r\n  },\r\n\r\n  breadcrumbs: {\r\n    padding: \"10px\",\r\n  },\r\n  column: {\r\n    flexBasis: \"33.33%\",\r\n    padding: \"15px\",\r\n  },\r\n  companyProjectCards: {\r\n    paddingLeft: \"70px\",\r\n    paddingRight: \"70px\",\r\n    paddingTop: \"20px\",\r\n    [theme.breakpoints.down(\"xm\")]: {\r\n      paddingLeft: \"10px\",\r\n      paddingRight: \"10px\",\r\n      paddingTop: \"10px\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      paddingLeft: \"10px\",\r\n      paddingRight: \"10px\",\r\n      paddingTop: \"10px\",\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      paddingLeft: \"20px\",\r\n      paddingRight: \"20px\",\r\n      paddingTop: \"20px\",\r\n    },\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n  cardText: {\r\n    fontSize: \"13px\",\r\n  },\r\n  cardHeader: {\r\n    fontSize: \"20px\",\r\n  },\r\n  chips: {\r\n    margin: \"5px\",\r\n  },\r\n  deadline: {\r\n    padding: \"5px\",\r\n  },\r\n  cardContent: {\r\n    padding: \"8px\",\r\n  },\r\n  addProject: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"#C8102E\",\r\n    },\r\n    margin: theme.spacing(2),\r\n  },\r\n  delete: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"#C8102E\",\r\n      color: \"#ffffff\",\r\n    },\r\n    margin: theme.spacing(2),\r\n    fontSize: \"0.8125rem !important\",\r\n  },\r\n\r\n  media: {\r\n    height: 140,\r\n  },\r\n  spinner: {\r\n    width: \"30%\",\r\n    height: \"30%\",\r\n  },\r\n  cardAction: {\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  projectAdd: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CompanyProject() {\r\n  const classes = useStyles();\r\n\r\n  const [companyProjects, setCompanyProjects] = useState([]);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const { data } = useContext(DataContext);\r\n\r\n  const { profile } = data;\r\n\r\n  const id = profile.id;\r\n\r\n  let { url } = useRouteMatch();\r\n\r\n  const createProject = () => {\r\n    let path = `project/create`;\r\n    history.push(path);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(\r\n        \"/company_project/list_by_company\",\r\n        {\r\n          username_id: parseInt(id),\r\n        },\r\n        getConfig()\r\n      )\r\n      .then((res) => {\r\n        setIsLoading(false);\r\n        setCompanyProjects(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n      });\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <img\r\n        alt=\"profile background\"\r\n        className={classes.profileLogo}\r\n        src={CompanyDashboard}\r\n      ></img>\r\n\r\n      <Breadcrumbs aria-label=\"breadcrumb\" className={classes.breadcrumbs}>\r\n        <Link style={{ textDecoration: \"none\", color: \"#000\" }} to=\"/\">\r\n          Home\r\n        </Link>\r\n        <Link style={{ textDecoration: \"none\", color: \"#000\" }} to=\"/dashboard\">\r\n          Profile\r\n        </Link>\r\n        <Typography style={{ color: \"#c8102e\" }}>My Projects</Typography>\r\n      </Breadcrumbs>\r\n      <div className={classes.projectAdd}>\r\n        <Button\r\n          onClick={createProject}\r\n          size=\"medium\"\r\n          variant=\"outlined\"\r\n          style={{\r\n            backgroundColor: \"#C8102E\",\r\n            color: \"#FFFFFF\",\r\n            margin: \"20px\",\r\n          }}\r\n        >\r\n          <AddIcon\r\n            className={classNames(classes.leftIcon, classes.iconSmall)}\r\n          />\r\n          ADD NEW PROJECT\r\n        </Button>\r\n      </div>\r\n\r\n      {isLoading ? (\r\n        <div>\r\n          <Grid container justify=\"center\" alignItems=\"center\" direction=\"row\">\r\n            <Grid item md={4}>\r\n              <LinearProgress color=\"secondary\" />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      ) : (\r\n        <div className={classes.companyProjectCards}>\r\n          <Grid container spacing={3}>\r\n            {companyProjects.map((project, index) => (\r\n              <Grid item xs={12} sm={12} md={6} lg={4} key={index}>\r\n                <Card className={classes.root}>\r\n                  <Link\r\n                    style={{ textDecoration: \"none\", color: \"black\" }}\r\n                    to={{\r\n                      pathname: `${url}/${project.project_id}`,\r\n                    }}\r\n                  >\r\n                    <CardActionArea className={classes.cardActionArea}>\r\n                      <CardMedia\r\n                        component=\"img\"\r\n                        alt=\"Project Photo\"\r\n                        height=\"80\"\r\n                        image={AvatarImage}\r\n                        title=\"Project Photo\"\r\n                        className={classes.media}\r\n                      />\r\n                      <CardContent className={classes.cardContent}>\r\n                        <Typography\r\n                          style={{ wordBreak: \"break-all\" }}\r\n                          gutterBottom\r\n                          variant=\"h5\"\r\n                          component=\"h2\"\r\n                          className={classes.cardHeader}\r\n                        >\r\n                          {project.project_name}\r\n                        </Typography>\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          color=\"textSecondary\"\r\n                          component=\"p\"\r\n                          className={classes.deadline}\r\n                        >\r\n                          Deadline: {project.project_deadline.substring(0, 10)}\r\n                        </Typography>\r\n                        {project.project_tech.length > 0 ? (\r\n                          <>\r\n                            {project.project_tech\r\n                              .split(\",\")\r\n                              .map((skill, index) => (\r\n                                <Chip\r\n                                  label={skill}\r\n                                  className={classes.chips}\r\n                                  key={index}\r\n                                />\r\n                              ))}\r\n                          </>\r\n                        ) : null}\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                  </Link>\r\n                  <CardActions className={classes.cardAction}>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                      {project.is_published === true ? (\r\n                        <>\r\n                          <VisibilityIcon />\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                            component=\"p\"\r\n                            className={classes.deadline}\r\n                          >\r\n                            PUBLIC\r\n                          </Typography>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <VisibilityOffIcon />\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                            component=\"p\"\r\n                            className={classes.deadline}\r\n                          >\r\n                            DRAFT\r\n                          </Typography>\r\n                        </>\r\n                      )}\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  LinearProgress,\r\n  Grid,\r\n  Typography,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  Avatar,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { getConfig } from \"../../authConfig\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport { styled } from \"@material-ui/core/styles\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogTitle: {\r\n    fontSize: \"10px\",\r\n  },\r\n  formControl: {\r\n    disply: \"block\",\r\n    minWidth: theme.spacing(15),\r\n    margin: \"5px\",\r\n  },\r\n  button: {\r\n    margin: \"5px\",\r\n  },\r\n  dataGrid: {\r\n    \"& > div\": { height: \"fit-content !important\" },\r\n    \"& .MuiDataGrid-cell\": { maxHeight: \"none !important\", flexWrap: \"wrap\" },\r\n    \"& .MuiDataGrid-row\": { maxHeight: \"none !important\" },\r\n    \"& .MuiDataGrid-viewport\": { maxHeight: \"none !important\" },\r\n    \"& .MuiDataGrid-window\": { overflowY: \"auto !important\" },\r\n    \"& .actions\": { display: \"flex\", justifyContent: \"space-evenly\" },\r\n  },\r\n  chips: {\r\n    margin: \"5px\",\r\n  },\r\n  accordionContainer: {\r\n    boxShadow: \"none\",\r\n    width: \"100%\",\r\n    background: \"none\",\r\n  },\r\n  accordionDetails: {\r\n    flexWrap: \"wrap\",\r\n  },\r\n  heading: {\r\n    color: \"#0000008a\",\r\n  },\r\n}));\r\n\r\nconst MyDataGrid = styled(DataGrid)`\r\n  .container {\r\n    height: 500px !important;\r\n  }\r\n  .cell {\r\n    max-width: none !important;\r\n  }\r\n`;\r\n\r\nconst CompanyProjectTeam = ({ id }) => {\r\n  //const Id = profile.id;\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [showEditFields, setShowEditFields] = useState({});\r\n  const [teamMembers, setTeamMembers] = useState({});\r\n  const [teamMembersDelta, setTeamMembersDelta] = useState({});\r\n\r\n  const getSavedStudents = useCallback(() => {\r\n    //useCallback allows function to be created only first render.\r\n    //Get all saved profiles\r\n    let team = {};\r\n    let showEditFieldsTemp = {};\r\n    setLoading(true);\r\n    axios\r\n      .get(`/project_select_student/all`, getConfig())\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        const savedMembers = res.data.filter((item) => {\r\n          return parseInt(item.project_id) === parseInt(id);\r\n        });\r\n        savedMembers.forEach((member) => {\r\n          team[member.student_db_id] = member;\r\n          showEditFieldsTemp[member.student_db_id] = false;\r\n        });\r\n        setTeamMembers(team);\r\n        setTeamMembersDelta(team);\r\n        setShowEditFields(showEditFieldsTemp);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n      });\r\n  }, [setTeamMembers, setTeamMembersDelta, setShowEditFields, setLoading, id]);\r\n\r\n  useEffect(() => {\r\n    getSavedStudents();\r\n  }, [getSavedStudents]);\r\n\r\n  const handleSave = (\r\n    id,\r\n    student_db_id,\r\n    student_name,\r\n    project_id,\r\n    student_skills\r\n  ) => {\r\n    axios\r\n      .put(\r\n        `/project_select_student/${id}/update`,\r\n        {\r\n          student_db_id: student_db_id,\r\n          project_preference_for_student:\r\n            teamMembersDelta[student_db_id].project_preference_for_student,\r\n        },\r\n        getConfig()\r\n      )\r\n      .then((res) => {\r\n        console.log(\"update skill\", student_skills);\r\n\r\n        setTeamMembers({\r\n          ...teamMembers,\r\n          [student_db_id]: {\r\n            id: res.data.id,\r\n            project_id: project_id,\r\n            student_db_id: res.data.student_db_id,\r\n            student_name: student_name,\r\n            student_skills: student_skills,\r\n            project_preference_for_student:\r\n              res.data.project_preference_for_student,\r\n          },\r\n        });\r\n        setShowEditFields({\r\n          ...showEditFields,\r\n          [res.data.student_db_id]: false,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const showFields = (student_db_id) => {\r\n    setShowEditFields({\r\n      ...showEditFields,\r\n      [student_db_id]: true,\r\n    });\r\n  };\r\n\r\n  const handleChange = (e, student_db_id) => {\r\n    setTeamMembersDelta({\r\n      ...teamMembersDelta,\r\n      [student_db_id]: {\r\n        ...teamMembersDelta[student_db_id],\r\n        project_preference_for_student: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    axios\r\n      .delete(`/project_select_student/${id}/delete`, getConfig())\r\n      .then((res) => {\r\n        // you set and clean the state here, not call axios again\r\n        /* getSavedStudents();*/\r\n\r\n        const filterObject = (obj, filter, filterValue) =>\r\n          Object.keys(obj).reduce(\r\n            (acc, val) =>\r\n              obj[val][filter] === filterValue\r\n                ? acc\r\n                : {\r\n                    ...acc,\r\n                    [val]: obj[val],\r\n                  },\r\n            {}\r\n          );\r\n\r\n        setTeamMembers(filterObject(teamMembers, \"id\", id));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleCancel = (student_db_id) => {\r\n    setShowEditFields({\r\n      ...showEditFields,\r\n      [student_db_id]: false,\r\n    });\r\n  };\r\n\r\n  const showStars = (num) => {\r\n    if (num === 0) {\r\n      return (\r\n        <>\r\n          <span>No Proference</span>\r\n        </>\r\n      );\r\n    } else if (num === 1) {\r\n      return (\r\n        <>\r\n          <StarIcon style={{ color: \"#ffb400\" }} />\r\n          <StarIcon style={{ color: \"#0000008a\" }} />\r\n          <StarIcon style={{ color: \"#0000008a\" }} />\r\n        </>\r\n      );\r\n    } else if (num === 2) {\r\n      return (\r\n        <>\r\n          <StarIcon style={{ color: \"#ffb400\" }} />\r\n          <StarIcon style={{ color: \"#ffb400\" }} />\r\n          <StarIcon style={{ color: \"#0000008a\" }} />\r\n        </>\r\n      );\r\n    } else if (num === 3) {\r\n      return (\r\n        <>\r\n          <StarIcon style={{ color: \"#ffb400\" }} />\r\n          <StarIcon style={{ color: \"#ffb400\" }} />\r\n          <StarIcon style={{ color: \"#ffb400\" }} />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      field: \"icon\",\r\n      headerName: \"Avatar\",\r\n      width: 130,\r\n      renderCell: (params) => {\r\n        return <Avatar />;\r\n      },\r\n      sortable: false,\r\n      disableColumnMenu: false,\r\n    },\r\n    {\r\n      field: \"student_name\",\r\n      headerName: \"Student Name\",\r\n      width: 260,\r\n      renderCell: (params) => {\r\n        return (\r\n          <Link\r\n            to={{\r\n              pathname: `/dashboard/search/${params.row.student_db_id}`,\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <Typography>{params.row.student_name}</Typography>\r\n          </Link>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: \"preference\",\r\n      headerName: \"Preference\",\r\n      width: 130,\r\n      renderCell: (params) => {\r\n        return showStars(params.row.project_preference_for_student);\r\n      },\r\n      sortComparator: (v1, v2, param1, param2) =>\r\n        param1.row.project_preference_for_student -\r\n        param2.row.project_preference_for_student,\r\n    },\r\n    {\r\n      field: \"student_skills\",\r\n      headerName: \"Student Skills\",\r\n      sortable: false,\r\n      width: 330,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Accordion className={classes.accordionContainer}>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className={classes.heading}>\r\n                  Click here to see the skills\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails className={classes.accordionDetails}>\r\n                {Object.keys(params.row.student_skills).length &&\r\n                params.row.student_skills ? (\r\n                  params.row.student_skills.map((skill, index) => (\r\n                    <Chip label={skill} className={classes.chips} key={index} />\r\n                  ))\r\n                ) : (\r\n                  <>\r\n                    <Typography className={classes.heading}>None</Typography>\r\n                  </>\r\n                )}\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: \"action\",\r\n      headerName: \"Action\",\r\n      width: 500,\r\n      cellClassName: \"actions\",\r\n      sortable: false,\r\n      align: \"right\",\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            {showEditFields[params.row.student_db_id] ? (\r\n              <>\r\n                <Grid item xs={5} md={3}>\r\n                  <FormControl className={classes.formControl}>\r\n                    <Select\r\n                      label=\"experience\"\r\n                      name={params.row.project_id}\r\n                      className={classes.preference}\r\n                      onChange={(e) =>\r\n                        handleChange(e, params.row.student_db_id)\r\n                      }\r\n                    >\r\n                      <MenuItem value={1}>Low</MenuItem>\r\n                      <MenuItem value={2}>Medium</MenuItem>\r\n                      <MenuItem value={3}>High</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    // disabled={\r\n                    //   saveStudent.project_id !== project.project_id\r\n                    // }\r\n                    onClick={() =>\r\n                      handleSave(\r\n                        params.row.id,\r\n                        params.row.student_db_id,\r\n                        params.row.student_name,\r\n                        params.row.project_id,\r\n                        params.row.student_skills\r\n                      )\r\n                    }\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    // disabled={\r\n                    //   saveStudent.project_id !== project.project_id\r\n                    // }\r\n                    onClick={() => handleCancel(params.row.student_db_id)}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Grid>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    // disabled={\r\n                    //   saveStudent.project_id !== project.project_id\r\n                    // }\r\n                    onClick={() => showFields(params.row.student_db_id)}\r\n                  >\r\n                    Update\r\n                  </Button>\r\n                </Grid>\r\n              </>\r\n            )}\r\n\r\n            <Grid item>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                className={classes.button}\r\n                onClick={() => {\r\n                  handleDelete(params.row.id);\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Grid>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const rows = Object.entries(teamMembers).map(([id, member]) => {\r\n    return {\r\n      id: member.id,\r\n      project_id: member.project_id,\r\n      project_preference_for_student: member.project_preference_for_student,\r\n      student_db_id: member.student_db_id,\r\n      student_name: member.student_name,\r\n      student_skills: member.student_skills,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div>\r\n          <Grid container justify=\"center\" alignItems=\"center\" direction=\"row\">\r\n            <Grid item md={4}>\r\n              <LinearProgress color=\"secondary\" />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      ) : (\r\n        <Grid container direction=\"row\" spacing={1}>\r\n          {Object.keys(teamMembers).length > 0 ? (\r\n            <>\r\n              <div\r\n                style={{ height: \"600px\", width: \"100%\" }}\r\n                className={classes.dataGrid}\r\n              >\r\n                <MyDataGrid autoPageSize={true} rows={rows} columns={columns} />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <Container>\r\n              <Typography style={{ fontStyle: \"italic\" }}>\r\n                No Team members Added yet.\r\n              </Typography>\r\n            </Container>\r\n          )}\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CompanyProjectTeam;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport CompanyDashboard from \"../../assets/CompanyDashboard.jpg\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  FormControl,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Grid,\r\n  TextField,\r\n  Box,\r\n  List,\r\n  ListItem,\r\n  Divider,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  IconButton,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  DialogContentText,\r\n  DialogContent,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport makeAnimated from \"react-select/animated\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nimport axios from \"axios\";\r\nimport { getConfig } from \"../../authConfig\";\r\n\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport PropTypes from \"prop-types\";\r\nimport StarsRoundedIcon from \"@material-ui/icons/StarsRounded\";\r\nimport WorkOutlineOutlinedIcon from \"@material-ui/icons/WorkOutlineOutlined\";\r\nimport AccountCircleRoundedIcon from \"@material-ui/icons/AccountCircleRounded\";\r\n// import HelpRoundedIcon from '@material-ui/icons/HelpRounded';\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\n\r\nimport BusinessCenterRoundedIcon from \"@material-ui/icons/BusinessCenterRounded\";\r\nimport SubjectRoundedIcon from \"@material-ui/icons/SubjectRounded\";\r\nimport LaptopRoundedIcon from \"@material-ui/icons/LaptopRounded\";\r\nimport DateRangeRoundedIcon from \"@material-ui/icons/DateRangeRounded\";\r\n\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\n\r\nimport EditTwoToneIcon from \"@material-ui/icons/EditTwoTone\";\r\nimport ClearRoundedIcon from \"@material-ui/icons/ClearRounded\";\r\nimport CheckRoundedIcon from \"@material-ui/icons/CheckRounded\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nimport Select from \"react-select\";\r\nimport { DataContext } from \"../../contexts/dataContext\";\r\n\r\nimport CompanyProjectTeam from \"./CompanyProjectTeam\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  main: {\r\n    width: \"100%\",\r\n  },\r\n  formControl: {\r\n    width: \"100%\",\r\n  },\r\n  profileLogo: {\r\n    backgroundRepeat: \"no-repeat\",\r\n    position: \"relative\",\r\n    objectPosition: \"20% 30%\",\r\n    width: \"100vw\",\r\n    height: \"15vw\",\r\n    maxWidth: \"100%\",\r\n    zIndex: 1,\r\n    objectFit: \"cover\",\r\n  },\r\n  icon: {\r\n    objectFit: \"contain\",\r\n    position: \"relative\",\r\n    width: \"5%\",\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  download: {\r\n    objectFit: \"contain\",\r\n    position: \"relative\",\r\n    width: \"5%\",\r\n  },\r\n  skills: {\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    border: \"none\",\r\n    cursor: \"default\",\r\n    height: \"32px\",\r\n    display: \"inline-flex\",\r\n    outline: \"0\",\r\n    padding: \"0\",\r\n    fontSize: \"0.8125rem\",\r\n    boxSizing: \"border-box\",\r\n    transition:\r\n      \"background-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n    alignItems: \"center\",\r\n    whiteSpace: \"nowrap\",\r\n    borderRadius: \"16px\",\r\n    verticalAlign: \"middle\",\r\n    justifyContent: \"center\",\r\n    textDecoration: \"none\",\r\n    backgroundColor: \"#e0e0e0\",\r\n    position: \"relative\",\r\n  },\r\n  skillsContainer: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  sectionHeader: {\r\n    fontWeight: \"bold\",\r\n    color: \"#606060\",\r\n  },\r\n  sectionContent: {\r\n    color: \"#5B5B5B\",\r\n    display: \"inline\",\r\n  },\r\n  profileImage: {\r\n    width: theme.spacing(20),\r\n    height: theme.spacing(20),\r\n    position: \"absolute\",\r\n    top: \"15%\",\r\n    right: \"4%\",\r\n    zIndex: 1,\r\n    objectFit: \"contain\",\r\n  },\r\n\r\n  breadcrumbs: {\r\n    padding: \"10px\",\r\n  },\r\n  column: {\r\n    flexBasis: \"33.33%\",\r\n    padding: \"15px\",\r\n  },\r\n  companyProjectCards: {\r\n    padding: \"70px\",\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  cardActionArea: {\r\n    height: \"230px\",\r\n  },\r\n  cardText: {\r\n    fontSize: \"13px\",\r\n  },\r\n  cardHeader: {\r\n    fontSize: \"20px\",\r\n  },\r\n  chips: {\r\n    margin: \"5px\",\r\n  },\r\n  deadline: {\r\n    padding: \"5px\",\r\n  },\r\n  customTabRoot: {\r\n    color: \"#C8102E\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  customTabIndicator: {\r\n    backgroundColor: \"#C8102E\",\r\n  },\r\n  tabs: {\r\n    marginTop: \"15px\",\r\n    marginRight: \"15px\",\r\n    marginLeft: \"15px\",\r\n    boxShadow:\r\n      \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\",\r\n    [theme.breakpoints.down(\"xm\")]: {\r\n      maxWidth: \"100%\",\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  active_tab: {\r\n    color: \"#C8102E\",\r\n  },\r\n  default_tab: {\r\n    color: \"#000000\",\r\n  },\r\n  textForm: {\r\n    width: \"100%\",\r\n  },\r\n  tabsPanel: {\r\n    backgroundColor: \"#ffffff\",\r\n    marginRight: \"15px\",\r\n    marginLeft: \"15px\",\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    padding: \"10px\",\r\n    height: \"100%\",\r\n  },\r\n  selectProjectType: {\r\n    width: \"100%\",\r\n    zIndex: 1000,\r\n    paddingTop: \"10px\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n  error: {\r\n    paddingLeft: \"10px\",\r\n    paddingRight: \"10px\",\r\n    fontSize: \"15px\",\r\n  },\r\n  selectCompanySkills: {\r\n    width: \"100%\",\r\n    padding: \"10px\",\r\n    zIndex: 100,\r\n  },\r\n  tabsItem: {},\r\n  iconList: {\r\n    textAlign: \"right\",\r\n  },\r\n  divider: {\r\n    listStyle: \"none\",\r\n    margin: \"10px\",\r\n  },\r\n  information: {\r\n    margin: \"10px\",\r\n  },\r\n  iconListGrid: {\r\n    textAlign: \"center\",\r\n  },\r\n  deleteButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-prevent-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-prevent-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          <Typography component={\"span\"}>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-prevent-tab-${index}`,\r\n    \"aria-controls\": `scrollable-prevent-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function CompanyProject({ match }) {\r\n  let history = useHistory();\r\n\r\n  const { data } = useContext(DataContext);\r\n\r\n  const { profile } = data;\r\n\r\n  const id = profile.id;\r\n\r\n  const classes = useStyles();\r\n\r\n  const animatedComponents = makeAnimated();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n\r\n  //Dialog to confirm the delete operation.\r\n  const handleOpenDeleteDialog = () => {\r\n    setOpenDeleteDialog(true);\r\n  };\r\n\r\n  const handleCloseDeleteDialog = () => {\r\n    setOpenDeleteDialog(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    axios\r\n      .delete(\r\n        \"/company_project/\" + match.params.project + \"/delete\",\r\n        getConfig()\r\n      )\r\n      .then((res) => {\r\n        history.goBack();\r\n      })\r\n      .catch((err) => console.log(err.response.message));\r\n    setOpenDeleteDialog(false);\r\n  };\r\n\r\n  //api for select ProjectType\r\n  const [projectType, setProjectType] = useState({});\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/company_project/list_project_type\", getConfig())\r\n      .then((res) => {\r\n        const data = res.data.project_type.map((item, index) => {\r\n          return {\r\n            label: item,\r\n            value: index,\r\n          };\r\n        });\r\n\r\n        setProjectType(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [updateSuccess, setUpdateSuccess] = useState(false);\r\n  const [updateFailed, setUpdateFailed] = useState(false);\r\n\r\n  // Initial Info\r\n  const [companyInfo, setCompanyInfo] = useState({});\r\n\r\n  // Skills Array\r\n  const [skills, setSkills] = useState({});\r\n\r\n  const [companyEdit, showCompanyEdit] = useState({\r\n    project_description: false,\r\n    project_name: false,\r\n    project_type: false,\r\n    project_deadline: false,\r\n    project_tech: false,\r\n    is_published: false,\r\n\r\n    company_project_image: false,\r\n    company_project_skill: false,\r\n    company_project_team_capacity: false,\r\n    company_project_students_selected: false,\r\n  });\r\n\r\n  const [companyInput, setCompanyInput] = useState({});\r\n\r\n  const [updateErrors, setUpdateErrors] = useState({\r\n    project_description: null,\r\n    project_name: null,\r\n    project_type: null,\r\n    project_tech: null,\r\n    project_deadline: null,\r\n  });\r\n\r\n  //opening the edit field\r\n  const handleOpenEdit = (key) => {\r\n    showCompanyEdit({\r\n      ...companyEdit,\r\n      [key]: true,\r\n    });\r\n  };\r\n  //closing the edit field\r\n  const handleCloseEdit = (key) => {\r\n    showCompanyEdit({\r\n      ...companyEdit,\r\n      [key]: false,\r\n    });\r\n  };\r\n\r\n  const handleCloseUpdateSucess = () => {\r\n    setUpdateSuccess(false);\r\n  };\r\n  const handleCloseUpdateFailed = () => {\r\n    setUpdateFailed(false);\r\n  };\r\n\r\n  //saving the edited data\r\n  const handleSave = (key) => {\r\n    //Make api call to save data here.\r\n    setCompanyInfo(companyInput);\r\n    handleCloseEdit(key);\r\n\r\n    const data = {\r\n      project_name: companyInput.project_name,\r\n      project_description: companyInput.project_description,\r\n      project_type: companyInput.project_type,\r\n      project_deadline: companyInput.project_deadline,\r\n      project_tech: companyInput.project_tech\r\n        ? Array.prototype.map\r\n            .call(companyInput.project_tech, (s) => s.label)\r\n            .toString()\r\n        : \"\",\r\n      is_published: companyInput.is_published,\r\n      username: id,\r\n    };\r\n\r\n    axios\r\n      .put(\r\n        \"/company_project/\" + match.params.project + \"/update\",\r\n        data,\r\n        getConfig()\r\n      )\r\n      .then((res) => {\r\n        setUpdateErrors({});\r\n        showCompanyEdit({\r\n          ...companyEdit,\r\n          [key]: false,\r\n        });\r\n        setUpdateSuccess(true);\r\n      })\r\n      .catch((err) => {\r\n        setUpdateErrors(err.response.data);\r\n        setUpdateFailed(true);\r\n      });\r\n  };\r\n\r\n  //not saving the edited data if the user does not want to change\r\n  const handleCancel = (key) => {\r\n    setCompanyInput(companyInfo);\r\n    handleCloseEdit(key);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n\r\n    axios\r\n      .get(\r\n        \"/company_project/\" + match.params.project,\r\n\r\n        getConfig()\r\n      )\r\n      .then((res) => {\r\n        setIsLoading(false);\r\n\r\n        setCompanyInfo({\r\n          project_name: res.data.project_name,\r\n          project_description: res.data.project_description,\r\n          project_type: res.data.project_type,\r\n          project_deadline: res.data.project_deadline,\r\n          project_tech: res.data.project_tech.split(\",\").map((skill, index) => {\r\n            return { label: skill, value: index };\r\n          }),\r\n          is_published: res.data.is_published,\r\n        });\r\n        setCompanyInput({\r\n          project_name: res.data.project_name,\r\n          project_description: res.data.project_description,\r\n          project_type: res.data.project_type,\r\n          project_deadline: res.data.project_deadline,\r\n          project_tech: res.data.project_tech.split(\",\").map((skill, index) => {\r\n            return { label: skill, value: index };\r\n          }),\r\n          is_published: res.data.is_published,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n      });\r\n\r\n    axios\r\n      .get(\"/skill/\", getConfig())\r\n      .then((res) => {\r\n        const data = res.data.map((skill) => {\r\n          return {\r\n            label: skill.skill_name,\r\n            value: skill.id,\r\n          };\r\n        });\r\n\r\n        setSkills(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n      });\r\n  }, [match.params.id, match.params.project]);\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <img\r\n        alt=\"profile background\"\r\n        className={classes.profileLogo}\r\n        src={CompanyDashboard}\r\n      ></img>\r\n      <Breadcrumbs aria-label=\"breadcrumb\" className={classes.breadcrumbs}>\r\n        <Link color=\"inherit\" href=\"/\">\r\n          Home\r\n        </Link>\r\n        <Link color=\"inherit\" href=\"/dashboard\">\r\n          Profile\r\n        </Link>\r\n        <Link color=\"inherit\" href=\"/dashboard/projects\">\r\n          My Projects\r\n        </Link>\r\n        <Typography\r\n          component={\"span\"}\r\n          style={{ color: \"#c8102e\" }}\r\n          color=\"textPrimary\"\r\n        >\r\n          {companyInfo.project_name}\r\n        </Typography>\r\n      </Breadcrumbs>\r\n\r\n      {isLoading ? (\r\n        <>\r\n          <div>\r\n            <Grid\r\n              container\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              direction=\"row\"\r\n            >\r\n              <Grid item md={4}>\r\n                <LinearProgress color=\"secondary\" />\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Grid container justify=\"flex-end\">\r\n            <Button\r\n              className={classes.deleteButton}\r\n              variant=\"contained\"\r\n              onClick={handleOpenDeleteDialog}\r\n              color=\"secondary\"\r\n            >\r\n              <DeleteIcon />\r\n              Delete\r\n            </Button>\r\n          </Grid>\r\n          <div>\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChange}\r\n              centered\r\n              classes={{\r\n                root: classes.customTabRoot,\r\n                indicator: classes.customTabIndicator,\r\n              }}\r\n              className={classes.tabs}\r\n            >\r\n              <Tab\r\n                className={classes.tabsItem}\r\n                label=\"DESCRIPTION\"\r\n                icon={<StarsRoundedIcon />}\r\n                {...a11yProps(0)}\r\n              />\r\n              <Tab\r\n                className={classes.tabsItem}\r\n                label=\"DETAILS\"\r\n                icon={<WorkOutlineOutlinedIcon />}\r\n                {...a11yProps(1)}\r\n              />\r\n              <Tab\r\n                className={classes.tabsItem}\r\n                label=\"MY TEAM\"\r\n                icon={<AccountCircleRoundedIcon {...a11yProps(2)} />}\r\n              />\r\n              {/* <Tab className={classes.tabsItem} label=\"INFORMATION\" icon={<HelpRoundedIcon />} {...a11yProps(3)} /> */}\r\n            </Tabs>\r\n            <TabPanel className={classes.tabsPanel} value={value} index={0}>\r\n              <Grid container direction=\"row\" spacing={3}>\r\n                <Grid item xs={1} className={classes.iconList}>\r\n                  <BusinessCenterRoundedIcon />\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Box component={\"span\"} className={classes.sectionHeader}>\r\n                    Project Name\r\n                  </Box>\r\n                  {companyEdit.project_name === false ? (\r\n                    <Box\r\n                      component=\"div\"\r\n                      variant=\"body2\"\r\n                      className={classes.information}\r\n                      color=\"textPrimary\"\r\n                    >\r\n                      {companyInfo.project_name}\r\n\r\n                      {updateErrors.project_name ? (\r\n                        <Typography className={classes.error} color=\"error\">\r\n                          {updateErrors.project_name} Project not saved. Please\r\n                          fix all errors before saving.\r\n                        </Typography>\r\n                      ) : null}\r\n                    </Box>\r\n                  ) : (\r\n                    <TextField\r\n                      autoFocus\r\n                      onFocus={(e) =>\r\n                        e.currentTarget.setSelectionRange(\r\n                          e.currentTarget.value.length,\r\n                          e.currentTarget.value.length\r\n                        )\r\n                      }\r\n                      className={`${classes.textForm} ${classes.information}`}\r\n                      multiline={true}\r\n                      name=\"project_name\"\r\n                      inputProps={{\r\n                        maxLength: 100,\r\n                      }}\r\n                      helperText={`${companyInput.project_name.length}/100`}\r\n                      onKeyDown={(e) => {\r\n                        if (e.key === \"Enter\") {\r\n                          handleSave(\"project_name\");\r\n                        }\r\n                      }}\r\n                      onChange={(e) => {\r\n                        setCompanyInput({\r\n                          ...companyInput,\r\n                          project_name: e.target.value,\r\n                        });\r\n                      }}\r\n                      value={companyInput.project_name}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={2} className={classes.iconListGrid}>\r\n                  {companyEdit.project_name === false ? (\r\n                    <IconButton\r\n                      className={classes.icon}\r\n                      onClick={() => {\r\n                        handleOpenEdit(\"project_name\");\r\n                      }}\r\n                    >\r\n                      <EditTwoToneIcon />\r\n                    </IconButton>\r\n                  ) : (\r\n                    <>\r\n                      <Grid container direction=\"row\">\r\n                        <Grid item xs={6}>\r\n                          <IconButton\r\n                            className={classes.icon}\r\n                            onClick={() => {\r\n                              handleCancel(\"project_name\");\r\n                            }}\r\n                          >\r\n                            <ClearRoundedIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <IconButton\r\n                            className={classes.icon}\r\n                            onClick={() => {\r\n                              handleSave(\"project_name\");\r\n                            }}\r\n                          >\r\n                            <CheckRoundedIcon style={{ color: \"green\" }} />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Divider\r\n                variant=\"inset\"\r\n                component=\"li\"\r\n                className={classes.divider}\r\n              />\r\n\r\n              <Grid container direction=\"row\" spacing={3}>\r\n                <Grid item xs={1} className={classes.iconList}>\r\n                  <SubjectRoundedIcon />\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Box component={\"span\"} className={classes.sectionHeader}>\r\n                    Description\r\n                  </Box>\r\n                  {companyEdit.project_description === false ? (\r\n                    <Box\r\n                      style={{ whiteSpace: \"pre-line\" }}\r\n                      component=\"div\"\r\n                      variant=\"body2\"\r\n                      className={classes.information}\r\n                      color=\"textPrimary\"\r\n                    >\r\n                      {companyInfo.project_description}\r\n\r\n                      {updateErrors.project_description ? (\r\n                        <Typography className={classes.error} color=\"error\">\r\n                          {updateErrors.project_description} Project not saved.\r\n                          Please fix all errors before saving.\r\n                        </Typography>\r\n                      ) : null}\r\n                    </Box>\r\n                  ) : (\r\n                    <TextField\r\n                      autoFocus\r\n                      onFocus={(e) =>\r\n                        e.currentTarget.setSelectionRange(\r\n                          e.currentTarget.value.length,\r\n                          e.currentTarget.value.length\r\n                        )\r\n                      }\r\n                      className={`${classes.textForm} ${classes.information}`}\r\n                      multiline={true}\r\n                      name=\"project_description\"\r\n                      inputProps={{\r\n                        maxLength: 3500,\r\n                      }}\r\n                      helperText={`${companyInput.project_description.length}/3500`}\r\n                      onChange={(e) => {\r\n                        setCompanyInput({\r\n                          ...companyInput,\r\n                          project_description: e.target.value,\r\n                        });\r\n                      }}\r\n                      value={companyInput.project_description}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={2} className={classes.iconListGrid}>\r\n                  {companyEdit.project_description === false ? (\r\n                    <IconButton\r\n                      className={classes.icon}\r\n                      onClick={() => {\r\n                        handleOpenEdit(\"project_description\");\r\n                      }}\r\n                    >\r\n                      <EditTwoToneIcon />\r\n                    </IconButton>\r\n                  ) : (\r\n                    <>\r\n                      <Grid container direction=\"row\">\r\n                        <Grid item xs={6}>\r\n                          <IconButton\r\n                            className={classes.icon}\r\n                            onClick={() => {\r\n                              handleCancel(\"project_description\");\r\n                            }}\r\n                          >\r\n                            <ClearRoundedIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <IconButton\r\n                            className={classes.icon}\r\n                            onClick={() => {\r\n                              handleSave(\"project_description\");\r\n                            }}\r\n                          >\r\n                            <CheckRoundedIcon style={{ color: \"green\" }} />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Divider\r\n                variant=\"inset\"\r\n                component=\"li\"\r\n                className={classes.divider}\r\n              />\r\n\r\n              <Grid container direction=\"row\" spacing={3}>\r\n                <Grid item xs={1} className={classes.iconList}>\r\n                  {companyInfo.is_published === true ? (\r\n                    <>\r\n                      <VisibilityIcon />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <VisibilityOffIcon />\r\n                    </>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Box component={\"span\"} className={classes.sectionHeader}>\r\n                    Visibility\r\n                  </Box>\r\n                  {companyEdit.is_published === false ? (\r\n                    <Box\r\n                      component=\"div\"\r\n                      variant=\"body2\"\r\n                      className={`${classes.inline} ${classes.sectionContent}`}\r\n                      color=\"textPrimary\"\r\n                    >\r\n                      {companyInfo.is_published === true ? (\r\n                        <>\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                            component=\"div\"\r\n                            className={classes.information}\r\n                          >\r\n                            PUBLIC\r\n                          </Typography>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                            component=\"div\"\r\n                            className={classes.deadline}\r\n                          >\r\n                            DRAFT\r\n                          </Typography>\r\n                        </>\r\n                      )}\r\n                    </Box>\r\n                  ) : (\r\n                    <FormControl\r\n                      component=\"fieldset\"\r\n                      style={{\r\n                        width: \"100%\",\r\n                        paddingRight: \"10px\",\r\n                        paddingLeft: \"10px\",\r\n                      }}\r\n                    >\r\n                      <FormGroup aria-label=\"position\" row>\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={companyInput.is_published || false}\r\n                              value={companyInfo.is_published}\r\n                              style={{ color: \"#C8102E\" }}\r\n                              onKeyDown={(e) => {\r\n                                if (e.key === \"Enter\") {\r\n                                  handleSave(\"is_published\");\r\n                                }\r\n                              }}\r\n                              onChange={(e) => {\r\n                                setCompanyInput({\r\n                                  ...companyInput,\r\n                                  is_published: e.target.checked,\r\n                                });\r\n                              }}\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography style={{ fontSize: 15 }}>\r\n                              Check if you want to publish this project\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                      </FormGroup>\r\n                    </FormControl>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={2} className={classes.iconListGrid}>\r\n                  {companyEdit.is_published === false ? (\r\n                    <IconButton\r\n                      className={classes.icon}\r\n                      onClick={() => {\r\n                        handleOpenEdit(\"is_published\");\r\n                      }}\r\n                    >\r\n                      <EditTwoToneIcon />\r\n                    </IconButton>\r\n                  ) : (\r\n                    <>\r\n                      <Grid container direction=\"row\">\r\n                        <Grid item xs={6}>\r\n                          <IconButton\r\n                            className={classes.icon}\r\n                            onClick={() => {\r\n                              handleCancel(\"is_published\");\r\n                            }}\r\n                          >\r\n                            <ClearRoundedIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <IconButton\r\n                            className={classes.icon}\r\n                            onClick={() => {\r\n                              handleSave(\"is_published\");\r\n                            }}\r\n                          >\r\n                            <CheckRoundedIcon style={{ color: \"green\" }} />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </TabPanel>\r\n            <TabPanel className={classes.tabsPanel} value={value} index={1}>\r\n              <Grid container direction=\"row\" spacing={3}>\r\n                <Grid item xs={1} className={classes.iconList}>\r\n                  <BusinessCenterRoundedIcon />\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Box component={\"span\"} className={classes.sectionHeader}>\r\n                    Project Type\r\n                  </Box>\r\n                  {companyEdit.project_type === false ? (\r\n                    <Box\r\n                      component=\"div\"\r\n                      variant=\"body2\"\r\n                      className={classes.information}\r\n                      color=\"textPrimary\"\r\n                    >\r\n                      {companyInfo.project_type}\r\n                    </Box>\r\n                  ) : (\r\n                    <>\r\n                      <Select\r\n                        autoFocus\r\n                        className={`${classes.selectProjectType} ${classes.information}`}\r\n                        closeMenuOnSelect={true}\r\n                        options={projectType}\r\n                        value={{\r\n                          label: companyInput.project_type,\r\n                          value: companyInput.project_type,\r\n                        }}\r\n                        onKeyDown={(e) => {\r\n                          if (e.key === \"Enter\") {\r\n                            handleSave(\"project_type\");\r\n                          }\r\n                        }}\r\n                        name=\"project_type\"\r\n                        onChange={(e) => {\r\n                          setCompanyInput({\r\n                            ...companyInput,\r\n                            project_type: e.label,\r\n                          });\r\n                        }}\r\n                      />\r\n                    </>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={2} className={classes.iconListGrid}>\r\n                  {companyEdit.project_type === false ? (\r\n                    <IconButton\r\n                      className={classes.icon}\r\n                      onClick={() => {\r\n                        handleOpenEdit(\"project_type\");\r\n                      }}\r\n                    >\r\n                      <EditTwoToneIcon />\r\n                    </IconButton>\r\n                  ) : (\r\n                    <>\r\n                      <Grid container direction=\"row\">\r\n                        <Grid item xs={6}>\r\n                          <IconButton\r\n                            className={classes.icon}\r\n                            onClick={() => {\r\n                              handleCancel(\"project_type\");\r\n                            }}\r\n                          >\r\n                            <ClearRoundedIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <IconButton\r\n                            className={classes.icon}\r\n                            onClick={() => {\r\n                              handleSave(\"project_type\");\r\n                            }}\r\n                          >\r\n                            <CheckRoundedIcon style={{ color: \"green\" }} />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Divider\r\n                variant=\"inset\"\r\n                component=\"li\"\r\n                className={classes.divider}\r\n              />\r\n\r\n              <Grid container direction=\"row\" spacing={3}>\r\n                <Grid item xs={1} className={classes.iconList}>\r\n                  <DateRangeRoundedIcon />\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Box component={\"span\"} className={classes.sectionHeader}>\r\n                    Deadline\r\n                  </Box>\r\n                  {companyEdit.project_deadline === false ? (\r\n                    <Box\r\n                      component=\"div\"\r\n                      variant=\"body2\"\r\n                      className={classes.information}\r\n                      color=\"textPrimary\"\r\n                    >\r\n                      {companyInfo.project_deadline}\r\n                    </Box>\r\n                  ) : (\r\n                    <TextField\r\n                      autoFocus\r\n                      className={`${classes.textForm} ${classes.information}`}\r\n                      type=\"date\"\r\n                      name=\"project_deadline\"\r\n                      onKeyDown={(e) => {\r\n                        if (e.key === \"Enter\") {\r\n                          handleSave(\"project_deadline\");\r\n                        }\r\n                      }}\r\n                      onChange={(e) => {\r\n                        setCompanyInput({\r\n                          ...companyInput,\r\n                          project_deadline: e.target.value,\r\n                        });\r\n                      }}\r\n                      value={companyInput.project_deadline}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={2} className={classes.iconListGrid}>\r\n                  {companyEdit.project_deadline === false ? (\r\n                    <IconButton\r\n                      className={classes.icon}\r\n                      onClick={() => {\r\n                        handleOpenEdit(\"project_deadline\");\r\n                      }}\r\n                    >\r\n                      <EditTwoToneIcon />\r\n                    </IconButton>\r\n                  ) : (\r\n                    <>\r\n                      <Grid container direction=\"row\">\r\n                        <Grid item xs={6}>\r\n                          <IconButton\r\n                            className={classes.icon}\r\n                            onClick={() => {\r\n                              handleCancel(\"project_deadline\");\r\n                            }}\r\n                          >\r\n                            <ClearRoundedIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <IconButton\r\n                            className={classes.icon}\r\n                            onClick={() => {\r\n                              handleSave(\"project_deadline\");\r\n                            }}\r\n                          >\r\n                            <CheckRoundedIcon style={{ color: \"green\" }} />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Divider\r\n                variant=\"inset\"\r\n                component=\"li\"\r\n                className={classes.divider}\r\n              />\r\n\r\n              <Grid container direction=\"row\" spacing={3}>\r\n                <Grid item xs={1} className={classes.iconList}>\r\n                  <LaptopRoundedIcon />\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Box component={\"span\"} className={classes.sectionHeader}>\r\n                    Skills\r\n                  </Box>\r\n                  {\r\n                    <>\r\n                      {companyEdit.project_tech === false ? (\r\n                        <Box\r\n                          component=\"div\"\r\n                          variant=\"body2\"\r\n                          className={classes.information}\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          {Object.keys(companyInput).length &&\r\n                          companyInput.project_tech ? (\r\n                            // Filters companyInput first because when the array is empty it will still have 1 objet inside with label \"\"\r\n                            // Picks the labels that are not an empty string and displays the skills on the Chips\r\n                            companyInput.project_tech\r\n                              .filter((el) => {\r\n                                if (el.label !== \"\") {\r\n                                  return companyInput.project_tech;\r\n                                }\r\n                              })\r\n                              .map((skill, index) => {\r\n                                return (\r\n                                  <Chip\r\n                                    component={\"span\"}\r\n                                    label={skill.label}\r\n                                    className={classes.chips}\r\n                                    key={index}\r\n                                  />\r\n                                );\r\n                              })\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </Box>\r\n                      ) : (\r\n                        <Select\r\n                          autoFocus\r\n                          className={classes.selectCompanySkills}\r\n                          fullWidth\r\n                          closeMenuOnSelect={true}\r\n                          components={animatedComponents}\r\n                          isMulti\r\n                          isSearchable\r\n                          // If filtering by object, the default value has to be the same object as the options, not a copy\r\n                          value={skills.filter((el) => {\r\n                            return companyInput.project_tech.some((f) => {\r\n                              return f.label === el.label;\r\n                            });\r\n                          })}\r\n                          options={skills}\r\n                          onChange={(e) => {\r\n                            e = e ? e : [];\r\n\r\n                            setCompanyInput({\r\n                              ...companyInput,\r\n                              project_tech: e,\r\n                            });\r\n                          }}\r\n                          {...console.log(skills)}\r\n                        />\r\n                      )}\r\n\r\n                      {updateErrors.project_tech ? (\r\n                        <Typography className={classes.error} color=\"error\">\r\n                          {updateErrors.project_tech} Project \"\r\n                          {companyInfo.project_name}\" not saved. Please fix all\r\n                          errors before saving.\r\n                        </Typography>\r\n                      ) : null}\r\n                    </>\r\n                  }\r\n                </Grid>\r\n                <Grid item xs={2} className={classes.iconListGrid}>\r\n                  {companyEdit.project_tech === false ? (\r\n                    <IconButton\r\n                      className={classes.icon}\r\n                      onClick={() => {\r\n                        handleOpenEdit(\"project_tech\");\r\n                      }}\r\n                    >\r\n                      <EditTwoToneIcon />\r\n                    </IconButton>\r\n                  ) : (\r\n                    <>\r\n                      <Grid container direction=\"row\">\r\n                        <Grid item xs={6}>\r\n                          <IconButton\r\n                            className={classes.icon}\r\n                            onClick={() => {\r\n                              handleCancel(\"project_tech\");\r\n                            }}\r\n                          >\r\n                            <ClearRoundedIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <IconButton\r\n                            className={classes.icon}\r\n                            onClick={() => {\r\n                              handleSave(\"project_tech\");\r\n                            }}\r\n                          >\r\n                            <CheckRoundedIcon style={{ color: \"green\" }} />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </TabPanel>\r\n            <TabPanel className={classes.tabsPanel} value={value} index={2}>\r\n              <List>\r\n                {/* Comment out team capacity for now */}\r\n                {/* <ListItem alignItems=\"flex-start\">\r\n                  <ListItemIcon>\r\n                    <AccountCircleRoundedIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Box component={\"span\"} className={classes.sectionHeader}>\r\n                        Team Capacity\r\n                      </Box>\r\n                    }\r\n                    secondary={\r\n                      companyEdit.company_project_team_capacity === false ? (\r\n                        <Box\r\n                          component=\"span\"\r\n                          variant=\"body2\"\r\n                          className={`${classes.inline} ${classes.sectionContent}`}\r\n                          color=\"textPrimary\">\r\n                          {companyInfo.company_project_team_capacity}\r\n                        </Box>\r\n                      ) : (\r\n                        <TextField\r\n                          className={classes.textForm}\r\n                          multiline={true}\r\n                          name=\"company_project_team_capacity\"\r\n                          onChange={(e) => {\r\n                            setCompanyInput({\r\n                              ...companyInput,\r\n                              company_project_team_capacity: e.target.value,\r\n                            });\r\n                          }}\r\n                          value={companyInput.company_project_team_capacity}\r\n                        />\r\n                      )\r\n                    }\r\n                  />\r\n                  {companyEdit.company_project_team_capacity === false ? (\r\n                    <IconButton\r\n                      className={classes.icon}\r\n                      onClick={() => {\r\n                        handleOpenEdit(\"company_project_team_capacity\");\r\n                      }}>\r\n                      <EditTwoToneIcon />\r\n                    </IconButton>\r\n                  ) : (\r\n                    <>\r\n                      <IconButton\r\n                        className={classes.icon}\r\n                        onClick={() => {\r\n                          handleCancel(\"company_project_team_capacity\");\r\n                        }}>\r\n                        <ClearRoundedIcon />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        className={classes.icon}\r\n                        onClick={() => {\r\n                          handleSave(\"company_project_team_capacity\");\r\n                        }}>\r\n                        <CheckRoundedIcon style={{ color: \"green\" }} />\r\n                      </IconButton>\r\n                    </>\r\n                  )}\r\n                </ListItem> */}\r\n\r\n                <ListItem alignItems=\"flex-start\">\r\n                  <ListItemIcon>\r\n                    <SupervisorAccountIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Box component={\"span\"} className={classes.sectionHeader}>\r\n                        Student(s) Selected\r\n                      </Box>\r\n                    }\r\n                    // secondary={\r\n                    //   companyEdit.company_project_team_capacity === false ? (\r\n                    //     <Box\r\n                    //       component=\"span\"\r\n                    //       variant=\"body2\"\r\n                    //       className={`${classes.inline} ${classes.sectionContent}`}\r\n                    //       color=\"textPrimary\">\r\n                    //       {companyInfo.company_project_team_capacity}\r\n                    //     </Box>\r\n                    //   ) : (\r\n                    //     <TextField\r\n                    //       className={classes.textForm}\r\n                    //       multiline={true}\r\n                    //       name=\"company_project_team_capacity\"\r\n                    //       onChange={(e) => {\r\n                    //         setCompanyInput({\r\n                    //           ...companyInput,\r\n                    //           company_project_team_capacity: e.target.value,\r\n                    //         });\r\n                    //       }}\r\n                    //       value={companyInput.company_project_team_capacity}\r\n                    //     />\r\n                    //   )\r\n                    // }\r\n                  />\r\n                  {/* {companyEdit.company_project_team_capacity === false ? (\r\n                    <IconButton\r\n                      className={classes.icon}\r\n                      onClick={() => {\r\n                        handleOpenEdit(\"company_project_team_capacity\");\r\n                      }}>\r\n                      <EditTwoToneIcon />\r\n                    </IconButton>\r\n                  ) : (\r\n                    <>\r\n                      <IconButton\r\n                        className={classes.icon}\r\n                        onClick={() => {\r\n                          handleCancel(\"company_project_team_capacity\");\r\n                        }}>\r\n                        <ClearRoundedIcon />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        className={classes.icon}\r\n                        onClick={() => {\r\n                          handleSave(\"company_project_team_capacity\");\r\n                        }}>\r\n                        <CheckRoundedIcon style={{ color: \"green\" }} />\r\n                      </IconButton>\r\n                    </>\r\n                  )} */}\r\n                </ListItem>\r\n                <ListItem alignItems=\"flex-start\">\r\n                  <CompanyProjectTeam id={match.params.project} />\r\n                </ListItem>\r\n              </List>\r\n            </TabPanel>\r\n            {/* <TabPanel className={classes.tabsPanel} value={value} index={3}>\r\n            <List>\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemIcon>\r\n                  <SubjectRoundedIcon />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary={\r\n                    <Box component={'span'} className={classes.sectionHeader}>Information</Box>\r\n                  }\r\n                  secondary={\r\n                    <Box component={'span'}>\r\n                      <span>1. Being responsible with the student(s) <br />\r\n                            2. Provide specific requirements <br />\r\n                            3. Follow up with the student every week <br />\r\n                            4. ...\r\n                      </span>\r\n                    </Box>\r\n                  }\r\n                />\r\n              </ListItem> \r\n            </List>\r\n          </TabPanel>*/}\r\n          </div>\r\n        </>\r\n      )}\r\n      <Dialog\r\n        onClose={handleCloseDeleteDialog}\r\n        open={openDeleteDialog}\r\n        className={classes.dialog}\r\n      >\r\n        <DialogTitle>\r\n          Are you sure you want to delete the project:{\" \"}\r\n          {companyInfo.project_name}?\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            This project will be permanently removed\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions className={classes.dialogConfirm}>\r\n          <Button\r\n            onClick={handleDelete}\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            className={classes.dialogConfirm}\r\n          >\r\n            DELETE\r\n          </Button>\r\n          <Button\r\n            onClick={handleCloseDeleteDialog}\r\n            color=\"secondary\"\r\n            variant=\"outlined\"\r\n            className={classes.dialogConfirm}\r\n          >\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Snackbar\r\n        open={updateSuccess}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseUpdateSucess}\r\n      >\r\n        <Alert onClose={handleCloseUpdateSucess} severity=\"success\">\r\n          Project {companyInfo.project_name} was saved!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        open={updateFailed}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseUpdateFailed}\r\n      >\r\n        <Alert onClose={handleCloseUpdateFailed} severity=\"error\">\r\n          There was a problem when saving the project. Please fix all errors\r\n          before saving.\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport CompanyDashboard from \"../../assets/CompanyDashboard.jpg\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  FormControl,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  ListItem,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport axios from \"axios\";\r\nimport { getConfig } from \"../../authConfig\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\n\r\nimport { DataContext } from \"../../contexts/dataContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  main: {\r\n    width: \"100%\",\r\n  },\r\n  profileLogo: {\r\n    backgroundRepeat: \"no-repeat\",\r\n    objectPosition: \"10% 20%\",\r\n    width: \"100vw\",\r\n    height: \"15vw\",\r\n    maxWidth: \"100%\",\r\n    zIndex: 1,\r\n    objectFit: \"cover\",\r\n  },\r\n  icon: {\r\n    objectFit: \"contain\",\r\n    position: \"relative\",\r\n    width: \"5%\",\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  download: {\r\n    objectFit: \"contain\",\r\n    position: \"relative\",\r\n    width: \"5%\",\r\n  },\r\n  skills: {\r\n    position: \"relative\",\r\n    border: \"1px solid #A6A6A6\",\r\n    borderRadius: \"50%\",\r\n    color: \"#5B5B5B\",\r\n    padding: \"2%\",\r\n    width: \"5%\",\r\n  },\r\n  skillsContainer: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  sectionHeader: {\r\n    fontWeight: \"bold\",\r\n    color: \"#606060\",\r\n  },\r\n  sectionContent: {\r\n    color: \"#5B5B5B\",\r\n    display: \"inline\",\r\n  },\r\n  profileImage: {\r\n    width: theme.spacing(20),\r\n    height: theme.spacing(20),\r\n    position: \"absolute\",\r\n    top: \"15%\",\r\n    right: \"4%\",\r\n    zIndex: 1,\r\n    objectFit: \"contain\",\r\n  },\r\n\r\n  breadcrumbs: {\r\n    padding: \"10px\",\r\n  },\r\n  column: {\r\n    flexBasis: \"33.33%\",\r\n    padding: \"15px\",\r\n  },\r\n  companyProjectCards: {\r\n    paddingLeft: \"70px\",\r\n    paddingRight: \"70px\",\r\n    paddingTop: \"20px\",\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n  cardText: {\r\n    fontSize: \"13px\",\r\n  },\r\n  cardHeader: {\r\n    fontSize: \"20px\",\r\n  },\r\n  chips: {\r\n    margin: \"5px\",\r\n  },\r\n  deadline: {\r\n    padding: \"5px\",\r\n  },\r\n  cardContent: {\r\n    padding: \"8px\",\r\n  },\r\n  addProject: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"#C8102E\",\r\n    },\r\n    margin: theme.spacing(2),\r\n  },\r\n\r\n  media: {\r\n    height: 140,\r\n  },\r\n  selectProjectType: {\r\n    width: \"100%\",\r\n    zIndex: 1000,\r\n    paddingTop: \"10px\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n  selectCompanySkills: {\r\n    width: \"100%\",\r\n    padding: \"10px\",\r\n    zIndex: 100,\r\n  },\r\n  addCompanyProjectFields: {\r\n    marginLeft: \"10px\",\r\n    marginRight: \"10px\",\r\n  },\r\n  error: {\r\n    paddingLeft: \"10px\",\r\n    paddingRight: \"10px\",\r\n    fontSize: \"15px\",\r\n  },\r\n  labelAsterisk: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nexport default function CompanyProjectCreate() {\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n\r\n  const animatedComponents = makeAnimated();\r\n\r\n  //api for select ProjectType\r\n  const [projectType, setProjectType] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/company_project/list_project_type\", getConfig())\r\n      .then((res) => {\r\n        const data = res.data.project_type.map((item, index) => {\r\n          return {\r\n            label: item,\r\n            value: index,\r\n          };\r\n        });\r\n\r\n        setProjectType(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const { data } = useContext(DataContext);\r\n  const { profile } = data;\r\n\r\n  const [companyInput, setCompanyInput] = useState({\r\n    project_description: \"\",\r\n    project_name: \"\",\r\n    project_type: \"\",\r\n    project_tech: \"\",\r\n    project_deadline: \"\",\r\n    is_published: false,\r\n  });\r\n\r\n  const [skills, setSkills] = useState({});\r\n\r\n  const handleSave = (key) => {\r\n    saveToDB(companyInput);\r\n  };\r\n\r\n  const [updateErrors, setUpdateErrors] = useState({\r\n    project_description: null,\r\n    project_name: null,\r\n    project_type: null,\r\n    project_tech: null,\r\n    project_deadline: null,\r\n  });\r\n\r\n  const saveToDB = (values) => {\r\n    const data = {\r\n      project_description: values.project_description,\r\n      project_name: values.project_name,\r\n      project_type: values.project_type,\r\n      project_tech: values.project_tech ? values.project_tech : \"\",\r\n      project_deadline: values.project_deadline,\r\n      is_published: values.is_published,\r\n      username: profile.id,\r\n    };\r\n\r\n    axios\r\n      .post(\"/company_project/create\", data, getConfig())\r\n      .then((res) => {\r\n        history.push(\"/dashboard/projects\");\r\n      })\r\n      .catch((err) => {\r\n        setUpdateErrors(err.response.data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/skill/\", getConfig())\r\n      .then((res) => {\r\n        const data = res.data.map((skill) => {\r\n          return { label: skill.skill_name, value: skill.id };\r\n        });\r\n\r\n        setSkills(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <img\r\n        alt=\"profile background\"\r\n        className={classes.profileLogo}\r\n        src={CompanyDashboard}\r\n      ></img>\r\n\r\n      <Breadcrumbs aria-label=\"breadcrumb\" className={classes.breadcrumbs}>\r\n        <Link color=\"inherit\" href=\"/\">\r\n          Home\r\n        </Link>\r\n        <Link color=\"inherit\" href=\"/dashboard\">\r\n          Profile\r\n        </Link>\r\n        <Link color=\"inherit\" href=\"/dashboard/projects\">\r\n          My Projects\r\n        </Link>\r\n        <Typography style={{ color: \"#c8102e\" }}>Add New Project</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <div>\r\n        <Grid container>\r\n          <Typography className={classes.addCompanyProjectFields}>\r\n            <span className={classes.labelAsterisk}>*</span> - Required Fields\r\n          </Typography>\r\n          <TextField\r\n            className={classes.addCompanyProjectFields}\r\n            autoFocus\r\n            required\r\n            inputProps={{\r\n              maxLength: 100,\r\n            }}\r\n            helperText={`${companyInput.project_name.length}/100`}\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Project Name\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            name=\"project_name\"\r\n            onChange={(e) => {\r\n              setCompanyInput({\r\n                ...companyInput,\r\n                project_name: e.target.value,\r\n              });\r\n            }}\r\n            InputLabelProps={{\r\n              classes: {\r\n                asterisk: classes.labelAsterisk,\r\n              },\r\n            }}\r\n            value={companyInput.project_name || \"\"}\r\n          />\r\n          {updateErrors.project_name ? (\r\n            <Typography className={classes.error} color=\"error\">\r\n              {updateErrors.project_name}\r\n            </Typography>\r\n          ) : null}\r\n\r\n          <TextField\r\n            className={classes.addCompanyProjectFields}\r\n            autoFocus\r\n            required\r\n            inputProps={{\r\n              maxLength: 3500,\r\n            }}\r\n            helperText={`${companyInput.project_description.length}/3500`}\r\n            margin=\"dense\"\r\n            id=\"outlined-multiline-static\"\r\n            multiline\r\n            rows={4}\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            name=\"project_description\"\r\n            InputLabelProps={{\r\n              classes: {\r\n                asterisk: classes.labelAsterisk,\r\n              },\r\n            }}\r\n            onChange={(e) => {\r\n              setCompanyInput({\r\n                ...companyInput,\r\n                project_description: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n          {updateErrors.project_description ? (\r\n            <Typography className={classes.error} color=\"error\">\r\n              {updateErrors.project_description}\r\n            </Typography>\r\n          ) : null}\r\n\r\n          <FormControl required className={classes.selectProjectType}>\r\n            <FormHelperText>\r\n              Project Type<span className={classes.labelAsterisk}>*</span>\r\n            </FormHelperText>\r\n            <Select\r\n              //className={classes.selectProjectType}\r\n              closeMenuOnSelect={true}\r\n              label=\"Project Type\"\r\n              name=\"projectType\"\r\n              onChange={(e) => {\r\n                setCompanyInput({ ...companyInput, project_type: e.label });\r\n              }}\r\n              {...console.log(projectType)}\r\n              options={projectType}\r\n            />\r\n\r\n            {updateErrors.project_type ? (\r\n              <Typography className={classes.error} color=\"error\">\r\n                {updateErrors.project_type}\r\n              </Typography>\r\n            ) : null}\r\n          </FormControl>\r\n          <FormControl required className={classes.selectCompanySkills}>\r\n            <FormHelperText>\r\n              Skills<span className={classes.labelAsterisk}>*</span>\r\n            </FormHelperText>\r\n            <Select\r\n              //className={classes.selectCompanySkills}\r\n              fullWidth\r\n              closeMenuOnSelect={true}\r\n              components={animatedComponents}\r\n              isMulti\r\n              isSearchable\r\n              options={skills}\r\n              onChange={(e) => {\r\n                e = e ? e : [];\r\n\r\n                var skillsSeparatedByCommas = Array.prototype.map\r\n                  .call(e, (s) => s.label)\r\n                  .toString();\r\n\r\n                setCompanyInput({\r\n                  ...companyInput,\r\n                  project_tech: skillsSeparatedByCommas,\r\n                });\r\n              }}\r\n            />\r\n            {updateErrors.project_tech ? (\r\n              <Typography className={classes.error} color=\"error\">\r\n                {updateErrors.project_tech}\r\n              </Typography>\r\n            ) : null}\r\n          </FormControl>\r\n\r\n          <TextField\r\n            className={classes.addCompanyProjectFields}\r\n            required\r\n            margin=\"dense\"\r\n            id=\"date\"\r\n            type=\"date\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n              classes: {\r\n                asterisk: classes.labelAsterisk,\r\n              },\r\n            }}\r\n            variant=\"outlined\"\r\n            label=\"Deadline\"\r\n            onChange={(e) => {\r\n              setCompanyInput({\r\n                ...companyInput,\r\n                project_deadline: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n          {updateErrors.project_deadline ? (\r\n            <Typography className={classes.error} color=\"error\">\r\n              {updateErrors.project_deadline}\r\n            </Typography>\r\n          ) : null}\r\n\r\n          <FormControl\r\n            component=\"fieldset\"\r\n            style={{\r\n              width: \"100%\",\r\n              paddingRight: \"10px\",\r\n              paddingLeft: \"10px\",\r\n            }}\r\n          >\r\n            <FormGroup aria-label=\"position\" row>\r\n              <FormControlLabel\r\n                value=\"end\"\r\n                control={\r\n                  <Checkbox\r\n                    style={{ color: \"#C8102E\" }}\r\n                    onChange={(e) => {\r\n                      setCompanyInput({\r\n                        ...companyInput,\r\n                        is_published: e.target.checked,\r\n                      });\r\n                    }}\r\n                  />\r\n                }\r\n                label={\r\n                  <Typography style={{ fontSize: 15 }}>\r\n                    Check if you want to publish this project\r\n                  </Typography>\r\n                }\r\n              />\r\n            </FormGroup>\r\n          </FormControl>\r\n        </Grid>\r\n        <ListItem>\r\n          <Grid container id=\"buttons-container\" justify=\"flex-end\" spacing={1}>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                size=\"large\"\r\n                onClick={handleSave}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </ListItem>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useContext, useCallback } from \"react\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { getConfig } from \"../../authConfig\";\r\nimport { DataContext } from \"../../contexts/dataContext\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    disply: \"block\",\r\n    minWidth: theme.spacing(8 * 2),\r\n  },\r\n  saveProfileContainer: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  containerTitle: {\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst SaveStudent = ({ studentId }) => {\r\n  const { data } = useContext(DataContext);\r\n  const { profile } = data;\r\n  const Id = profile.id;\r\n  const classes = useStyles();\r\n  const [companyProjectsToShow, setCompanyProjectsToShow] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [saveStudent, setSaveStudent] = useState({\r\n    student_db_id: null,\r\n    project_id: null,\r\n    project_preference_for_student: null,\r\n  });\r\n  const [addSuccess, setAddSuccess] = useState(false);\r\n  const [addFailed, setAddFailed] = useState(false);\r\n  const [nameProjectToSave, setNameProjectToSave] = useState(\"\");\r\n\r\n  const handleCloseAddSucess = () => {\r\n    setAddSuccess(false);\r\n  };\r\n  const handleCloseAddFailed = () => {\r\n    setAddFailed(false);\r\n  };\r\n\r\n  const getCompanyProjects = useCallback(() => {\r\n    //get all projects of this company.\r\n    const companyProjects = axios.post(\r\n      \"/company_project/list_by_company\",\r\n      { username_id: parseInt(Id) },\r\n      getConfig()\r\n    );\r\n    //get all saved projects\r\n    const savedProjects = axios.get(\"/project_select_student/all\", getConfig());\r\n    axios\r\n      .all([companyProjects, savedProjects])\r\n      .then(\r\n        axios.spread((...responses) => {\r\n          const companyProjectsRes = responses[0];\r\n          const savedProjectsRes = responses[1];\r\n\r\n          const sp = savedProjectsRes.data.filter((item) => {\r\n            return parseInt(item.student_db_id) === parseInt(studentId);\r\n          });\r\n          let projectsToShow = [];\r\n\r\n          companyProjectsRes.data.forEach((project) => {\r\n            if (\r\n              !sp.some((element) => element.project_id === project.project_id)\r\n            ) {\r\n              projectsToShow.push(project);\r\n            }\r\n          });\r\n\r\n          setCompanyProjectsToShow(projectsToShow);\r\n          setLoading(false);\r\n        })\r\n      )\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [setCompanyProjectsToShow, setLoading, Id, studentId]);\r\n\r\n  useEffect(() => {\r\n    getCompanyProjects();\r\n  }, [getCompanyProjects]);\r\n\r\n  const handleSave = () => {\r\n    if (saveStudent.student_db_id) {\r\n      axios\r\n        .post(\"/project_select_student/create\", saveStudent, getConfig())\r\n        .then(() => {\r\n          setCompanyProjectsToShow([\r\n            ...companyProjectsToShow.filter((project) => {\r\n              return project.project_id !== saveStudent.project_id;\r\n            }),\r\n          ]);\r\n          setSaveStudent({\r\n            student_db_id: null,\r\n            project_id: null,\r\n            project_preference_for_student: null,\r\n          });\r\n          setAddSuccess(true);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setAddFailed(true);\r\n        });\r\n    } else {\r\n      alert(\"Peference is required\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (e, projectName) => {\r\n    setSaveStudent({\r\n      student_db_id: parseInt(studentId),\r\n      project_id: parseInt(e.target.name),\r\n      project_preference_for_student: parseInt(e.target.value),\r\n    });\r\n    setNameProjectToSave(projectName);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? null : (\r\n        <Grid direction=\"row\" className={classes.saveProfileContainer}>\r\n          {companyProjectsToShow.length > 0 ? (\r\n            <>\r\n              <Typography className={classes.containerTitle}>\r\n                Save Profile to the following Projects\r\n              </Typography>\r\n              <>\r\n                {companyProjectsToShow.map((project, index) => (\r\n                  <Grid container key={index} alignItems=\"center\" spacing={1}>\r\n                    <Grid item xs={12} sm={12} md={7} lg={7}>\r\n                      <Typography style={{ wordBreak: \"break-all\" }}>\r\n                        {project.project_name}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6} md={3} lg={3}>\r\n                      <FormControl className={classes.formControl}>\r\n                        <InputLabel>Preference</InputLabel>\r\n                        <Select\r\n                          label=\"experience\"\r\n                          id={project.project_name}\r\n                          name={project.project_id}\r\n                          className={classes.preference}\r\n                          onChange={(e) => {\r\n                            return handleChange(e, project.project_name);\r\n                          }}\r\n                        >\r\n                          <MenuItem value={3}>Highest</MenuItem>\r\n                          <MenuItem value={2}>Intermediate</MenuItem>\r\n                          <MenuItem value={1}>Lowest</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6} md={2} lg={2}>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        onClick={handleSave}\r\n                        disabled={saveStudent.project_id !== project.project_id}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                ))}\r\n              </>\r\n            </>\r\n          ) : (\r\n            <Container>\r\n              <Typography style={{ fontStyle: \"italic\" }}>\r\n                No Projects to Add to For this Profile\r\n              </Typography>\r\n            </Container>\r\n          )}\r\n          <Snackbar\r\n            open={addSuccess}\r\n            autoHideDuration={6000}\r\n            onClose={handleCloseAddSucess}\r\n          >\r\n            <Alert onClose={handleCloseAddSucess} severity=\"success\">\r\n              This student was saved to project {nameProjectToSave}! Please\r\n              check this student in the 'My Projects/My Team' tab\r\n            </Alert>\r\n          </Snackbar>\r\n          <Snackbar\r\n            open={addFailed}\r\n            autoHideDuration={6000}\r\n            onClose={handleCloseAddFailed}\r\n          >\r\n            <Alert onClose={handleCloseAddFailed} severity=\"error\">\r\n              There was a problem when saving this student to{\" \"}\r\n              {nameProjectToSave}\r\n            </Alert>\r\n          </Snackbar>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SaveStudent;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Divider,\r\n  ListItemIcon,\r\n  Typography,\r\n  Grid,\r\n  Chip,\r\n  ListItemText,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  VerticalTimeline,\r\n  VerticalTimelineElement,\r\n} from \"react-vertical-timeline-component\";\r\nimport clsx from \"clsx\";\r\nimport WebRoundedIcon from \"@material-ui/icons/WebRounded\";\r\nimport FormatListBulletedTwoToneIcon from \"@material-ui/icons/FormatListBulletedTwoTone\";\r\nimport SchoolRoundedIcon from \"@material-ui/icons/SchoolRounded\";\r\nimport StarsIcon from \"@material-ui/icons/Stars\";\r\nimport HorizontalSplitIcon from \"@material-ui/icons/HorizontalSplit\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { getConfig } from \"../../authConfig\";\r\nimport SaveStudent from \"./SaveStudent\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogInput: {\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  loginAlert: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  dialogConfirm: {\r\n    marginBottom: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  profileLogo: {\r\n    backgroundRepeat: \"no-repeat\",\r\n    position: \"relative\",\r\n    objectPosition: \"20% 30%\",\r\n    width: \"100vw\",\r\n    height: \"15vw\",\r\n    maxWidth: \"100%\",\r\n    zIndex: 1,\r\n    objectFit: \"cover\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(5),\r\n  },\r\n  skills: {\r\n    position: \"relative\",\r\n    border: \"1px solid #A6A6A6\",\r\n    borderRadius: \"50%\",\r\n    color: \"#5B5B5B\",\r\n    padding: \"1%\",\r\n    width: \"20px\",\r\n  },\r\n  skillsContainer: {\r\n    \"& > *\": {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  },\r\n  sectionHeader: {\r\n    fontWeight: \"bold\",\r\n    color: \"#606060\",\r\n  },\r\n  sectionContent: {\r\n    color: \"#5B5B5B\",\r\n    display: \"inline\",\r\n  },\r\n  select: {\r\n    width: \"30vh\",\r\n    fontSize: \"small\",\r\n  },\r\n  myProjects: {\r\n    fontWeight: \"bold\",\r\n    color: \"#606060\",\r\n    padding: \"0 auto\",\r\n  },\r\n  flexColumn: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  flexRow: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  skillRoot: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    flexWrap: \"wrap\",\r\n    listStyle: \"none\",\r\n    padding: theme.spacing(0.5),\r\n    margin: 0,\r\n    \"& > * \": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n  beginnerChip: {\r\n    margin: theme.spacing(0.5),\r\n    color: theme.palette.text.primary,\r\n    borderColor: theme.palette.text.primary,\r\n  },\r\n  intermediateChip: {\r\n    margin: theme.spacing(0.5),\r\n    color: theme.palette.warning.main,\r\n    borderColor: theme.palette.warning.main,\r\n  },\r\n  expertChip: {\r\n    margin: theme.spacing(0.5),\r\n    color: theme.palette.success.main,\r\n    borderColor: theme.palette.success.main,\r\n  },\r\n  beginnerDeleteIcon: {\r\n    fill: theme.palette.text.main,\r\n  },\r\n  intermediateDeleteIcon: {\r\n    fill: theme.palette.warning.main,\r\n  },\r\n  expertDeleteIcon: {\r\n    fill: theme.palette.success.main,\r\n  },\r\n  right: {\r\n    position: \"static\",\r\n  },\r\n  skillsRoot: {\r\n    display: \"flex\",\r\n    padding: theme.spacing(0.5),\r\n    alignItems: \"center\",\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  profileImage: {\r\n    width: theme.spacing(10),\r\n  },\r\n  test: {\r\n    backgroundColor: \"none\",\r\n  },\r\n  paper: {\r\n    // padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  name: {\r\n    textAlign: \"left\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  degree: {\r\n    textAlign: \"left\",\r\n    fontSize: \"small\",\r\n  },\r\n  capsLightLabel: {\r\n    textTransform: \"uppercase\",\r\n    color: theme.palette.text.secondary,\r\n    fontSize: \"0.8rem\",\r\n  },\r\n  projectDetails: {\r\n    fontSize: \"0.8rem\",\r\n  },\r\n  starIcon: {\r\n    float: \"right\",\r\n  },\r\n  projectsContainer: {\r\n    marginLeft: theme.spacing(0),\r\n  },\r\n  projectTitle: {\r\n    textTransform: \"uppercase\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n}));\r\n\r\nconst StudentDetailed = ({ match }) => {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(true);\r\n  const [student, setStudent] = useState();\r\n  const [studentProjects, setStudentProjects] = useState([]);\r\n\r\n  const getStudent = useCallback(() => {\r\n    const student = axios.get(\r\n      `/student_profile/id/${match.params.id}`,\r\n      getConfig()\r\n    );\r\n    const studentProjects = axios.post(\r\n      `/student_project/list_by_student`,\r\n      {\r\n        username_id: match.params.id,\r\n      },\r\n      getConfig()\r\n    );\r\n    axios.all([student, studentProjects]).then(\r\n      axios.spread((...responses) => {\r\n        const studentRes = responses[0];\r\n        const studentProjectRes = responses[1];\r\n        setStudent(studentRes.data);\r\n        setStudentProjects(studentProjectRes.data);\r\n        setLoading(false);\r\n      })\r\n    );\r\n  }, [match.params.id]);\r\n\r\n  useEffect(() => {\r\n    getStudent();\r\n  }, [getStudent]);\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <LinearProgress color=\"secondary\" />\r\n      ) : (\r\n        <>\r\n          <List className={classes.root}>\r\n            <ListItem>\r\n              <ListItemIcon edge=\"start\">\r\n                <PersonIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>\r\n                <div\r\n                  className={classes.flexRow}\r\n                  style={{ justifyContent: \"space-between\" }}\r\n                >\r\n                  <div className={classes.flexColumn}>\r\n                    <Typography className={classes.sectionHeader}>\r\n                      Name\r\n                    </Typography>\r\n                    <Typography className={classes.sectionContent}>\r\n                      {student.full_name}\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              </ListItemText>\r\n            </ListItem>\r\n            <Divider variant=\"inset\" component=\"li\" />\r\n            <ListItem>\r\n              <ListItemIcon edge=\"start\">\r\n                <FormatListBulletedTwoToneIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>\r\n                <div\r\n                  className={classes.flexRow}\r\n                  style={{ justifyContent: \"space-between\" }}\r\n                >\r\n                  <div className={classes.flexColumn}>\r\n                    <Typography className={classes.sectionHeader}>\r\n                      Bio\r\n                    </Typography>\r\n                    <Typography className={classes.sectionContent}>\r\n                      {student.student_description}\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              </ListItemText>\r\n            </ListItem>\r\n            <Divider variant=\"inset\" component=\"li\" />\r\n            <ListItem alignItems=\"flex-start\">\r\n              <ListItemIcon>\r\n                <SchoolRoundedIcon />\r\n              </ListItemIcon>\r\n              <div className={classes.flexColumn}>\r\n                <Typography className={classes.sectionHeader}>\r\n                  Academic\r\n                </Typography>\r\n                <Typography\r\n                  className={classes.sectionContent}\r\n                >{`Graduation Date: ${student.graduation_date}`}</Typography>\r\n                <Typography\r\n                  className={classes.sectionContent}\r\n                >{`Degree: ${student.degree}`}</Typography>\r\n                <Typography className={classes.sectionContent}>\r\n                  {\" \"}\r\n                  {`Major: ${student.major}`}\r\n                </Typography>\r\n              </div>\r\n            </ListItem>\r\n            <Divider variant=\"inset\" component=\"li\" />\r\n            <ListItem alignItems=\"flex-start\">\r\n              <ListItemIcon>\r\n                <StarsIcon />\r\n              </ListItemIcon>\r\n              <div className={classes.flexColumn}>\r\n                <Typography className={classes.sectionHeader}>\r\n                  Skills\r\n                </Typography>\r\n                <ul className={classes.skillRoot}>\r\n                  {student.student_skills.map((skill) => {\r\n                    return (\r\n                      <li key={skill.skill_name}>\r\n                        <Chip\r\n                          variant=\"outlined\"\r\n                          classes={\r\n                            skill.experience_level === 1\r\n                              ? {\r\n                                  root: classes.beginnerChip,\r\n                                }\r\n                              : skill.experience_level === 2\r\n                              ? {\r\n                                  root: classes.intermediateChip,\r\n                                }\r\n                              : {\r\n                                  root: classes.expertChip,\r\n                                }\r\n                          }\r\n                          label={skill.skill_name}\r\n                        />\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </div>\r\n            </ListItem>\r\n            <Divider variant=\"inset\" component=\"li\" />\r\n            {studentProjects.length > 0 ? (\r\n              <ListItem alignItems=\"flex-start\">\r\n                <Grid container>\r\n                  <Grid item>\r\n                    <ListItemIcon>\r\n                      <HorizontalSplitIcon />\r\n                    </ListItemIcon>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography className={classes.sectionHeader}>\r\n                      My Projects\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <VerticalTimeline\r\n                      layout={\"1-column-left\"}\r\n                      className={classes.projectsContainer}\r\n                    >\r\n                      {studentProjects.map((project, index) => (\r\n                        <VerticalTimelineElement\r\n                          className={classes.IconStyle}\r\n                          iconStyle={{ background: \"#C8102E\", color: \"#fff\" }}\r\n                          contentArrowStyle={{\r\n                            borderRight: \"7px solid #C8102E\",\r\n                          }}\r\n                          key={index}\r\n                          icon={<WebRoundedIcon />}\r\n                        >\r\n                          <h3 className={classes.verticalElementTitle}>\r\n                            {project.project_name}\r\n                          </h3>\r\n                          <h5 className={classes.verticalElementSubtitle}>\r\n                            {project.project_role}\r\n                          </h5>\r\n                          {project.project_tech\r\n                            .split(\",\")\r\n                            .map((skill, index) => (\r\n                              <Chip\r\n                                label={skill}\r\n                                variant=\"outlined\"\r\n                                classes={\r\n                                  skill.experience_level === 1\r\n                                    ? {\r\n                                        root: classes.beginnerChip,\r\n                                      }\r\n                                    : skill.experience_level === 2\r\n                                    ? {\r\n                                        root: classes.intermediateChip,\r\n                                      }\r\n                                    : {\r\n                                        root: classes.expertChip,\r\n                                      }\r\n                                }\r\n                                key={index}\r\n                              />\r\n                            ))}\r\n\r\n                          <p>\r\n                            {project.project_description} {project.student_id}\r\n                          </p>\r\n                          <div className={clsx(classes.column, classes.helper)}>\r\n                            <Typography variant=\"caption\">\r\n                              View source link\r\n                              <br />\r\n                              <a\r\n                                href={`${project.project_link}`}\r\n                                className={classes.link}\r\n                              >\r\n                                {project.project_link}\r\n                              </a>\r\n                            </Typography>\r\n                          </div>\r\n                          <div>\r\n                            <h5>\r\n                              Date: {project.project_start_date} -{\" \"}\r\n                              {project.project_end_date}\r\n                            </h5>\r\n                          </div>\r\n                        </VerticalTimelineElement>\r\n                      ))}\r\n                    </VerticalTimeline>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n            ) : null}\r\n          </List>\r\n        </>\r\n      )}\r\n      <SaveStudent studentId={match.params.id}></SaveStudent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudentDetailed;\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  Chip,\r\n  Button,\r\n  Card,\r\n  Link,\r\n  CardHeader,\r\n  CardContent,\r\n  Avatar,\r\n  Divider,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  studentName: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  subheader: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  skillsRoot: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  chip: {\r\n    marginRight: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  chipLabel: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  qualification: {\r\n    textTransform: \"uppercase\",\r\n  },\r\n  actionArea: {\r\n    padding: theme.spacing(1),\r\n    \"&:focus\": {\r\n      border: `1px solid ${theme.palette.secondary.main}`,\r\n    },\r\n  },\r\n  fieldTitle: {\r\n    textTransform: \"uppercase\",\r\n    color: theme.palette.text.secondary,\r\n    fontSize: \"0.7rem\",\r\n    letterSpacing: \"0.05rem\",\r\n  },\r\n  fieldValue: {\r\n    fontSize: \"0.7rem\",\r\n  },\r\n  cardHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  cardContent: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  gridRoot: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  card: {\r\n    width: \"280px\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n  },\r\n  noPaddingTop: {\r\n    paddingTop: \"0\",\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(5),\r\n    height: theme.spacing(5),\r\n  },\r\n  spinner: {\r\n    position: \"relative\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n  buttonContainer: {\r\n    justifyContent: \"center\",\r\n  },\r\n  loader: {\r\n    position: \"relative\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n}));\r\n\r\nconst StudentsList = ({ loading, studentsList }) => {\r\n  let { url } = useRouteMatch();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <LinearProgress\r\n          color=\"secondary\"\r\n          style={{ margin: \"20px\" }}></LinearProgress>\r\n      ) : (\r\n        <Grid container justify={\"center\"}>\r\n          {studentsList.map((student) => (\r\n            <Grid item key={student.username_id} style={{ margin: \"15px\" }}>\r\n              <Card className={classes.card}>\r\n                <div>\r\n                  <CardHeader\r\n                    classes={{\r\n                      root: classes.cardHeader,\r\n                      title: classes.studentName,\r\n                      subheader: classes.subheader,\r\n                    }}\r\n                    avatar={<Avatar className={classes.avatar}></Avatar>}\r\n                    title={student.full_name}\r\n                    subheader={`${student.degree} - ${student.major}`}></CardHeader>\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography className={classes.fieldTitle}>\r\n                      Graduation Date\r\n                    </Typography>\r\n                    <Typography className={classes.fieldValue}>\r\n                      {student.graduation_date}\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardContent\r\n                    className={`${classes.cardContent} ${classes.noPaddingTop}`}>\r\n                    <Typography className={classes.fieldTitle} >\r\n                      Description\r\n                    </Typography>\r\n                    <Typography className={classes.fieldValue} style={{wordBreak: 'break-all' }}>\r\n                      {student.student_description}\r\n                    </Typography>\r\n                  </CardContent>\r\n\r\n                  <CardContent\r\n                    className={`${classes.cardContent} ${classes.noPaddingTop}`}>\r\n                    <Typography\r\n                      variant=\"subtitle2\"\r\n                      className={classes.fieldTitle}>\r\n                      Skills\r\n                    </Typography>\r\n                    <div className={classes.skillsRoot} style={{ flexWrap: \"wrap\"}}>\r\n                      {student.student_skills.map((skill, index) => (\r\n                        <Chip\r\n                          key={index}\r\n                          label={skill.skill_name}\r\n                          classes={{\r\n                            root: classes.chip,\r\n                            label: classes.chipLabel,\r\n                          }}\r\n                          color=\"primary\"\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                        />\r\n                      ))}\r\n                    </div>\r\n                  </CardContent>\r\n                </div>\r\n                <div>\r\n                  <Divider></Divider>\r\n                  <CardContent>\r\n                    <Link\r\n                      href={`${url}/${student.student_db_id}`}\r\n                      style={{ textDecoration: \"none\" }}>\r\n                      <Button\r\n                        color=\"secondary\"\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        className={classes.button}>\r\n                        View Profile\r\n                      </Button>\r\n                    </Link>\r\n                  </CardContent>\r\n                </div>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudentsList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Chip,\r\n  Tooltip,\r\n  IconButton,\r\n} from \"@material-ui/core/\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport axios from \"axios\";\r\nimport { getConfig } from \"../../authConfig\";\r\nimport StudentsLists from \"../../components/StudentPublic/StudentsList\";\r\n\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchBackground: {\r\n    //backgroundColor: \"rgba(200,16,46,1)\",\r\n    margin: \"10px\",\r\n    borderRadius: \"5px\",\r\n    flex: \"column\",\r\n  },\r\n  header: {\r\n    textAlign: \"center\",\r\n    fontSize: \"35px\",\r\n    fontWeight: \"bold\",\r\n    //color: \"white\",\r\n    fontFamily: \"Helvetica\",\r\n    marginBottom: theme.spacing(1.5),\r\n  },\r\n  SearchLabels: {\r\n    fontFamily: \"Helvetica\",\r\n    //color: \"white\",\r\n  },\r\n  SearchButton: {\r\n    marginLeft: \"10px\",\r\n  },\r\n  KeywordSearch: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"10px\",\r\n    objectFit: \"contain\",\r\n    width: 180,\r\n  },\r\n  zipCode: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"10px\",\r\n    objectFit: \"contain\",\r\n    width: 100,\r\n  },\r\n  MajorSearch: {\r\n    width: 150,\r\n    //borderRadius: \"10px\",\r\n    height: 40,\r\n  },\r\n  DegreeSearch: {\r\n    width: 150,\r\n    objectFit: \"contain\",\r\n    //borderRadius: \"10px\",\r\n    height: 40,\r\n  },\r\n  SkillSearch: {\r\n    objectFit: \"contain\",\r\n    borderRadius: \"10px\",\r\n    width: 150,\r\n  },\r\n  chipRoot: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    padding: theme.spacing(1),\r\n    listStyle: \"none\",\r\n    margin: 1,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  ButtonHelp: {\r\n    padding: \"5px\",\r\n  },\r\n}));\r\n\r\nconst customStyles = {\r\n  option: (provided) => ({\r\n    ...provided,\r\n    color: \"black\",\r\n  }),\r\n  control: (provided) => ({\r\n    ...provided,\r\n    color: \"black\",\r\n  }),\r\n  singleValue: (provided) => ({\r\n    ...provided,\r\n    color: \"black\",\r\n  }),\r\n};\r\n\r\nexport default function CompanySearch() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [studentsList, setStudentsList] = useState([]);\r\n  const [searchInput, setSearchInput] = useState({\r\n    //This is the data from api\r\n    major: \"\",\r\n    degree_level: \"\",\r\n    zipcode: \"\",\r\n    keywords: [],\r\n    student_skills: [],\r\n  });\r\n\r\n  const handleClick = async () => {\r\n    const data = {\r\n      major: searchInput.major,\r\n      degree: searchInput.degree_level,\r\n      zip: searchInput.zipcode,\r\n      keywords: searchInput.keywords,\r\n      student_skills: searchInput.student_skills,\r\n    };\r\n    setLoading(true);\r\n    axios\r\n      .post(\"/student_profile/search\", data, getConfig())\r\n      .then((res) => {\r\n        localStorage.setItem(\"search_history\", JSON.stringify(data));\r\n        setLoading(false);\r\n        setStudentsList(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      setSearchInput({\r\n        ...searchInput,\r\n        keywords: [...searchInput.keywords, e.target.value],\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (chipToDelete) => () => {\r\n    const newList = searchInput.keywords.filter(\r\n      (item) => item !== chipToDelete\r\n    );\r\n    setSearchInput({ ...searchInput, keywords: newList });\r\n  };\r\n  const classes = useStyles();\r\n  //this is the animated component for the react-select library\r\n  const animatedComponents = makeAnimated();\r\n  const [skills, setSkills] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/skill/\", getConfig())\r\n      .then((res) => {\r\n        const data = res.data.map((skill) => {\r\n          return { label: skill.skill_name, value: skill.id };\r\n        });\r\n\r\n        setSkills(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    //Restore seach to same data whecn going back.\r\n    let data = {};\r\n    if (JSON.parse(localStorage.getItem(\"search_history\"))) {\r\n      data = JSON.parse(localStorage.getItem(\"search_history\"));\r\n    } else {\r\n      data = {\r\n        major: \"\",\r\n        degree: \"\",\r\n        zip: \"\",\r\n        keywords: [],\r\n        student_skills: [],\r\n      };\r\n    }\r\n    axios\r\n      .post(\"/student_profile/search\", data, getConfig())\r\n      .then((res) => {\r\n        setLoading(false);\r\n        setStudentsList(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.searchBackground}>\r\n        <Grid>\r\n          <Typography className={classes.header}>FutureStart Search</Typography>\r\n        </Grid>\r\n        <ul className={classes.chipRoot}>\r\n          {searchInput.keywords.map((data, index) => (\r\n            <li key={index}>\r\n              <Chip\r\n                label={data}\r\n                onDelete={handleDelete(data)}\r\n                className={classes.chip}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <Grid\r\n          container\r\n          id=\"master\"\r\n          direction=\"column\"\r\n          justify=\"space-between\"\r\n          spacing={2}\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid\r\n            container\r\n            id=\"first-left\"\r\n            justify=\"center\"\r\n            item\r\n            xs={12}\r\n            spacing={4}\r\n            direction=\"row\"\r\n          >\r\n            <Grid item>\r\n              <Typography className={classes.SearchLabels} variant=\"h6\">\r\n                Keyword\r\n                <Tooltip\r\n                  title={\r\n                    <p style={{ fontSize: \"13px\" }}>\r\n                      Press enter to save your keywords after you type them.\r\n                      <br /> This will search the entire student description.\r\n                    </p>\r\n                  }\r\n                >\r\n                  <IconButton className={classes.ButtonHelp}>\r\n                    <HelpIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Typography>\r\n              <TextField\r\n                className={classes.KeywordSearch}\r\n                name=\"keywords\"\r\n                placeholder=\"Keyword\"\r\n                type=\"search\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onKeyDown={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography className={classes.SearchLabels} variant=\"h6\">\r\n                Major\r\n              </Typography>\r\n              <select\r\n                className={classes.MajorSearch}\r\n                defaultValue={\"\"}\r\n                name=\"major\"\r\n                onChange={(e) => {\r\n                  setSearchInput({ ...searchInput, major: e.target.value });\r\n                }}\r\n              >\r\n                <option value=\"\">Select Major</option>\r\n                <optgroup label=\"Gerald D. Hines College of Architecture and Design\">\r\n                  <option value=\"Architecture\">Architecture</option>\r\n                  <option value=\"Environmental_Design\">\r\n                    Environmental Design\r\n                  </option>\r\n                  <option value=\"Industrial_Design\">Industrial Design</option>\r\n                  <option value=\"Interior_Architecture\">\r\n                    Interior Architecture\r\n                  </option>\r\n                </optgroup>\r\n                <optgroup label=\"Kathrine G. McGovern College of the Arts\">\r\n                  <option value=\"Applied_Music\">Applied Music</option>\r\n                  <option value=\"Art\">Art</option>\r\n                  <option value=\"Art_History\">Art History</option>\r\n                  <option value=\"Dance\">Dance</option>\r\n                  <option value=\"Graphic_Design\">Graphic Design</option>\r\n                  <option value=\"Music\">Music</option>\r\n                  <option value=\"Painting\">Painting</option>\r\n                  <option value=\"Photography\">Photography/Digital Media</option>\r\n                  <option value=\"Sculpture\">Sculpture</option>\r\n                  <option value=\"Theatre\">Theatre</option>\r\n                </optgroup>\r\n                <optgroup label=\"C. T. Bauer College of Business\">\r\n                  <option value=\"Accounting\">Accounting</option>\r\n                  <option value=\"Entrepreneurship\">Entrepreneurship</option>\r\n                  <option value=\"Finance\">Finance</option>\r\n                  <option value=\"Management\">Management</option>\r\n                  <option value=\"Management_Information_Systems\">\r\n                    Management Information Systems\r\n                  </option>\r\n                  <option value=\"Marketing\">Marketing</option>\r\n                  <option value=\"Suppy_Chain_Management\">\r\n                    Suppy Chain Management\r\n                  </option>\r\n                </optgroup>\r\n                <optgroup label=\"College of Education\">\r\n                  <option value=\"Health\">Health</option>\r\n                  <option value=\"Human_Development_and_Family_Studies\">\r\n                    Human Development and Family Studies\r\n                  </option>\r\n                  <option value=\"Teaching_and_Learning\">\r\n                    Teaching and Learning\r\n                  </option>\r\n                </optgroup>\r\n                <optgroup label=\"Cullen College of Engineering\">\r\n                  <option value=\"Biomedical_Engineering\">\r\n                    Biomedical Engineering\r\n                  </option>\r\n\r\n                  <option value=\"Chemical_Engineering\">\r\n                    Chemical Engineering\r\n                  </option>\r\n\r\n                  <option value=\"Civil_Engineering\">Civil Engineering</option>\r\n\r\n                  <option value=\"Computer_Engineering\">\r\n                    Computer Engineering\r\n                  </option>\r\n\r\n                  <option value=\"Computer_Engineering_and_Analytics\">\r\n                    Computer Engineering and Analytics\r\n                  </option>\r\n                  <option value=\"Construction_Engineering\">\r\n                    Construction Engineering\r\n                  </option>\r\n                  <option value=\"Electrical_Engineering\">\r\n                    Electrical Engineering\r\n                  </option>\r\n                  <option value=\"Industrial_Engineering\">\r\n                    Industrial Engineering\r\n                  </option>\r\n                  <option value=\"Mechanical_Engineering\">\r\n                    Mechanical Engineering\r\n                  </option>\r\n                  <option value=\"Petroleum_Engineering\">\r\n                    Petroleum Engineering\r\n                  </option>\r\n                  <option value=\"Systems_Engineering\">\r\n                    Systems Engineering\r\n                  </option>\r\n                </optgroup>\r\n                <optgroup label=\"Conrad N. Hilton College of Hotel and Restaurant Management\">\r\n                  <option value=\"Hotel_and_Restaurant_Management\">\r\n                    Hotel and Restaurant Management\r\n                  </option>\r\n                </optgroup>\r\n                <optgroup label=\"College of Liberal Arts and Social Sciences\">\r\n                  <option value=\"African_American_Studies\">\r\n                    African American Studies\r\n                  </option>\r\n                  <option value=\"American_Sign_Language_Interpreting\">\r\n                    American Sign Language Interpreting\r\n                  </option>\r\n                  <option value=\"Anthropology\">Anthropology</option>\r\n                  <option value=\"Chinese_Studies\">Chinese Studies</option>\r\n                  <option value=\"Communication_Sciences_and_Disorders\">\r\n                    Communication Sciences and Disorders\r\n                  </option>\r\n                  <option value=\"Communication_Studies\">\r\n                    Communication Studies\r\n                  </option>\r\n                  <option value=\"Economics\">Economics</option>\r\n                  <option value=\"English\">English</option>\r\n                  <option value=\"Exercise_Science\">Exercise Science</option>\r\n                  <option value=\"Fitness_and_Sports\">Fitness and Sports</option>\r\n\r\n                  <option value=\"French\">French</option>\r\n                  <option value=\"Health_Communication\">\r\n                    Health Communication\r\n                  </option>\r\n                  <option value=\"History\">History</option>\r\n                  <option value=\"Human_Nutrition_and_Foods\">\r\n                    Human Nutrition and Foods\r\n                  </option>\r\n                  <option value=\"Journalism\">Journalism</option>\r\n                  <option value=\"Liberal_Studies\">Liberal Studies</option>\r\n                  <option value=\"Media_Production\">Media Production</option>\r\n                  <option value=\"Philosophy\">Philosophy</option>\r\n                  <option value=\"Political Science\">Political Science</option>\r\n                  <option value=\"Psychology\">Psychology</option>\r\n                  <option value=\"Religious_Studies\">Religious Studies</option>\r\n                  <option value=\"Sociology\">Sociology</option>\r\n                  <option value=\"Spanish\">Spanish</option>\r\n                  <option value=\"Sports_Administration\">\r\n                    Sports Administration\r\n                  </option>\r\n                  <option value=\"Strategic_Communication\">\r\n                    Strategic Communication\r\n                  </option>\r\n\r\n                  <option value=\"Women’s,_Gender,_and_Sexuality_Studies\">\r\n                    Women’s, Gender, and Sexuality Studies\r\n                  </option>\r\n                  <option value=\"World_Cultures_and_Literatures\">\r\n                    World Cultures and Literatures\r\n                  </option>\r\n                </optgroup>\r\n                <optgroup label=\"College of Natural Sciences and Mathematics\">\r\n                  <option value=\"Biochemical_and_Biophysical_Sciences\">\r\n                    Biochemical and Biophysical Sciences\r\n                  </option>\r\n                  <option value=\"Biology\">Biology</option>\r\n                  <option value=\"Chemistry\">Chemistry</option>\r\n                  <option value=\"Computer_Science\">Computer Science</option>\r\n                  <option value=\"Earth_Science\">Earth Science</option>\r\n                  <option value=\"Environmental_Sciences\">\r\n                    Environmental Sciences\r\n                  </option>\r\n                  <option value=\"Geology\">Geology</option>\r\n                  <option value=\"Geophysics\">Geophysics</option>\r\n                  <option value=\"Honors_Biomedical_Sciences\">\r\n                    Honors Biomedical Sciences\r\n                  </option>\r\n                  <option value=\"Mathematical_Biology\">\r\n                    Mathematical Biology\r\n                  </option>\r\n                  <option value=\"Mathematics\">Mathematics</option>\r\n\r\n                  <option value=\"Physics\">Physics</option>\r\n                </optgroup>\r\n                <optgroup label=\"College of Nursing\">\r\n                  <option value=\"Pre-Nursing\">Pre-Nursing</option>\r\n                  <option value=\"Nursing,_BSN_(RN-BSN)\">\r\n                    Nursing, BSN (RN-BSN)\r\n                  </option>\r\n                  <option value=\"Nursing,_BSN_(Second_Degree)\">\r\n                    Nursing, BSN (Second Degree)\r\n                  </option>\r\n                </optgroup>\r\n                <optgroup label=\"College of Technology\">\r\n                  <option value=\"Biotechnology\">Biotechnology</option>\r\n\r\n                  <option value=\"Computer_Engineering_Technology\">\r\n                    Computer Engineering Technology\r\n                  </option>\r\n                  <option value=\"Computer_Information_Systems\">\r\n                    Computer Information Systems\r\n                  </option>\r\n                  <option value=\"Construction_Management\">\r\n                    Construction Management\r\n                  </option>\r\n                  <option value=\"Digital_Media\">Digital Media</option>\r\n                  <option value=\"Electrical_Power_Engineering_Technology\">\r\n                    Electrical Power Engineering Technology\r\n                  </option>\r\n                  <option value=\"Human_Resources_Development\">\r\n                    Human Resources Development\r\n                  </option>\r\n                  <option value=\"Mechanical_Engineering_Technology\">\r\n                    Mechanical Engineering Technology\r\n                  </option>\r\n                  <option value=\"Retailing_and_Consumer_Science\">\r\n                    Retailing and Consumer Science{\" \"}\r\n                  </option>\r\n                  <option value=\"Supply_Chain_and_Logistics_Technology\">\r\n                    Supply Chain and Logistics Technology\r\n                  </option>\r\n                  <option value=\"Technology_Leadership_and_Innovation_Management \">\r\n                    Technology Leadership and Innovation Management{\" \"}\r\n                  </option>\r\n                </optgroup>\r\n                <optgroup label=\"Pre-Professional Tracks\">\r\n                  <option value=\"Pre-Dentistry\">Pre-Dentistry</option>\r\n                  <option value=\"Pre-Law\">Pre-Law</option>\r\n                  <option value=\"Pre-Medicine\">Pre-Medicine</option>\r\n                  <option value=\"Pre-Optometry\">Pre-Optometry</option>\r\n                  <option value=\"Pre-Pharmacy\">Pre-Pharmacy</option>\r\n                  <option value=\"Pre-Physical_Therapy\">\r\n                    Pre-Physical Therapy\r\n                  </option>\r\n                  <option value=\"Pre-Veterinary_Medicine\">\r\n                    Pre-Veterinary Medicine\r\n                  </option>\r\n                </optgroup>\r\n              </select>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography className={classes.SearchLabels} variant=\"h6\">\r\n                Degree Type\r\n              </Typography>\r\n              <select\r\n                defaultValue={\"\"}\r\n                name=\"degree_level\"\r\n                onChange={(e) => {\r\n                  setSearchInput({\r\n                    ...searchInput,\r\n                    degree_level: e.target.value,\r\n                  });\r\n                }}\r\n                className={classes.DegreeSearch}\r\n              >\r\n                <option value=\"\">Select Degree type</option>\r\n                <option value=\"Undergraduate\">Undergraduate</option>\r\n                <option value=\"Graduate\">Graduate</option>\r\n              </select>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography className={classes.SearchLabels} variant=\"h6\">\r\n                Skills\r\n              </Typography>\r\n              <Select\r\n                AutoSize={true}\r\n                closeMenuOnSelect={true}\r\n                components={animatedComponents}\r\n                isMulti\r\n                isSearchable\r\n                className={classes.SkillSearch}\r\n                onChange={(e) => {\r\n                  e = e ? e : [];\r\n                  var skillsSeparatedByCommas = Array.prototype.map\r\n                    .call(e, (s) => s.label)\r\n                    .toString();\r\n                  if (skillsSeparatedByCommas.length > 0) {\r\n                    setSearchInput({\r\n                      ...searchInput,\r\n                      student_skills: skillsSeparatedByCommas.split(\",\"),\r\n                    });\r\n                  } else {\r\n                    setSearchInput({\r\n                      ...searchInput,\r\n                      student_skills: [],\r\n                    });\r\n                  }\r\n                }}\r\n                options={skills}\r\n                styles={customStyles}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography className={classes.SearchLabels} variant=\"h6\">\r\n                Zipcode\r\n              </Typography>\r\n              <TextField\r\n                inputProps={{ maxLength: 5 }}\r\n                className={classes.zipCode}\r\n                name=\"zipCode\"\r\n                placeholder=\"zipcode\"\r\n                type=\"string\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onChange={(e) => {\r\n                  setSearchInput({\r\n                    ...searchInput,\r\n                    zipcode: e.target.value,\r\n                  });\r\n                }}\r\n              ></TextField>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.SearchButton}\r\n                onClick={handleClick}\r\n              >\r\n                Search\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <div>\r\n        <Grid>\r\n          <StudentsLists loading={loading} studentsList={studentsList} />\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, useRouteMatch, Switch } from \"react-router-dom\";\r\nimport CompanyProfile from \"../CompanyProfile/CompanyProfile\";\r\nimport CompanyProjectList from \"../CompanyProject/CompanyProjectList\";\r\nimport CompanyProjectTemplate from \"../CompanyProject/CompanyProjectTemplate\";\r\nimport CompanyProjectCreate from \"../CompanyProject/CompanyProjectCreate\";\r\nimport StudentDetailed from \"../../components/StudentPublic/StudentDetailed\";\r\nimport CompanySearch from \"../CompanySearch/CompanySearch\";\r\n\r\nconst CompanyRoutes = () => {\r\n  let { path } = useRouteMatch();\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route path={`${path}`} exact component={CompanyProfile} />\r\n\r\n        <Route\r\n          path={`${path}/projects`}\r\n          exact\r\n          render={(props) => <CompanyProjectList {...props} />}\r\n        />\r\n\r\n        <Route\r\n          path={`${path}/projects/:project`}\r\n          render={(props) => <CompanyProjectTemplate {...props} />}\r\n        />\r\n\r\n        <Route\r\n          path={`${path}/project/create`}\r\n          exact\r\n          component={CompanyProjectCreate}\r\n        />\r\n\r\n        <Route path={`${path}/search`} exact component={CompanySearch} />\r\n        <Route path={`${path}/search/:id`} component={StudentDetailed} />\r\n        {/* <Route\r\n          path={`${path}/*`}\r\n          render={() => (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/whoTouchMySpaghet\",\r\n              }}\r\n            />\r\n          )}\r\n        /> */}\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyRoutes;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AccountCircleRoundedIcon from \"@material-ui/icons/AccountCircleRounded\";\r\nimport BusinessRoundedIcon from \"@material-ui/icons/BusinessRounded\";\r\nimport SearchRoundedIcon from \"@material-ui/icons/SearchRounded\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport { ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"black\",\r\n    fontFamily: \"Lato\",\r\n  },\r\n}));\r\n\r\nconst CompanyMenu = () => {\r\n  const classes = useStyles();\r\n  let { url } = useRouteMatch();\r\n\r\n  const options = [\r\n    { text: \"Profile\", url: `${url}`, icon: <AccountCircleRoundedIcon /> },\r\n    {\r\n      text: \"My Projects\",\r\n      url: `${url}/projects`,\r\n      icon: <BusinessRoundedIcon />,\r\n    },\r\n    {\r\n      text: \"Search\",\r\n      url: `${url}/search`,\r\n      icon: <SearchRoundedIcon />,\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      {options.map((item, index) => (\r\n        <Link to={item.url} className={classes.link} key={item.text}>\r\n          <ListItem key={item.text}>\r\n            <ListItemIcon>{item.icon}</ListItemIcon>\r\n            <ListItemText primary={item.text} />\r\n          </ListItem>\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyMenu;\r\n","import {Table,Link, Grid, TablePagination,TableFooter, LinearProgress, Paper, TableBody, TableCell,TableContainer,TableHead,TableRow, Button} from \"@material-ui/core/\";\r\nimport React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { makeStyles, withStyles,useTheme } from \"@material-ui/core/styles\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root:{\r\n    margin: theme.spacing(2),\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  exportButton:{\r\n    marginTop:theme.spacing(0.5),\r\n    marginBottom:theme.spacing(0.5)\r\n  },\r\n  exportText:{\r\n    color:\"white\",\r\n    textDecoration:\"none\"\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#dd2c00\",\r\n    color: theme.palette.common.white,\r\n  }\r\n}))(TableCell);\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <Grid className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nconst AdminMatchingTable = ({ loading, matchingList }) => {\r\n    const classes = useStyles();\r\n    let { url } = useRouteMatch();\r\n    const columns = [\r\n    {label:\"Company\", key: \"company_name\", align:\"center\" }, \r\n    {label:\"Project\", key:\"project_name\", align:\"center\" } , \r\n    {label:\"Student\", key:\"student_name\", align:\"center\" }, \r\n    {label:\"PeopleSoft ID\", key: \"student_id\", align:\"center\" }, \r\n    {label:\"Company Preference\", key:\"project_preference_for_student\", align:\"center\" },\r\n    {label:\"Student Preference\", key:\"student_preference_for_project\",align:\"center\" }];\r\n \r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n          {loading ? (\r\n            <LinearProgress\r\n              color=\"secondary\"\r\n              style={{ margin: \"20px\" }}\r\n            />\r\n          ) : (\r\n            <div>\r\n              <div>\r\n                <Button className={classes.exportButton} variant=\"contained\" color=\"secondary\">\r\n                  <CSVLink\r\n                    data={matchingList}\r\n                    headers={columns}\r\n                    filename={\"MatchingReport.csv\"}\r\n                    className={classes.exportText} \r\n                  >\r\n                    Export\r\n                  </CSVLink>\r\n                </Button>\r\n              </div>\r\n              <TableContainer component={Paper}>\r\n                  <Table stickyHeader={true} className={classes.table} aria-label=\"simple table\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          {columns.map((column) => (\r\n                              <StyledTableCell key={column.key} align={column.align}>{column.label}</StyledTableCell>\r\n                          ))}\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                      {(rowsPerPage > 0\r\n                        ? matchingList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                        : matchingList\r\n                      ).map((row,index) => (\r\n                          <StyledTableRow key={index}>\r\n                            {columns.map((column) => {\r\n                              if(column.label === \"Project\"){\r\n                                return (\r\n                                    <TableCell key={column.key} align={column.align}>\r\n                                      <Link\r\n                                       style={{ textDecoration: \"underline\", color:\"black\" }}\r\n                                       href={`${url}/projects/${row.project_id}`}\r\n                                        >\r\n                                        {row[column.key]}\r\n                                      </Link>\r\n                                    </TableCell>\r\n                                ); \r\n                              }else if(column.label===\"Student\"){\r\n                                return (\r\n                                  <TableCell key={column.key} align={column.align}>\r\n                                    <Link\r\n                                      style={{ textDecoration: \"underline\", color:\"black\" }}\r\n                                      href={`${url}/search/${row.student_db_id}`}\r\n                                      >\r\n                                      {row[column.key]}\r\n                                    </Link>\r\n                                  </TableCell>\r\n                              ); \r\n                              }else{\r\n                              return (\r\n                                <TableCell key={column.key} align={column.align}>\r\n                                  {row[column.key]}\r\n                                </TableCell>\r\n                              );\r\n                            }\r\n                            })}\r\n                          </StyledTableRow>\r\n                      ))}\r\n                      </TableBody>\r\n                      <TableFooter>\r\n                        <TableRow>\r\n                          <TablePagination\r\n                            rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                            colSpan={3}\r\n                            count={matchingList.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            SelectProps={{\r\n                              inputProps: { 'aria-label': 'rows per page' },\r\n                              native: true,\r\n                            }}\r\n                            onChangePage={handleChangePage}\r\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                            ActionsComponent={TablePaginationActions}\r\n                          />\r\n                        </TableRow>\r\n                      </TableFooter>\r\n                  </Table>\r\n              </TableContainer>\r\n            </div>\r\n          )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminMatchingTable;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { getConfig } from \"../../authConfig\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  Button,\r\n  createMuiTheme,\r\n  responsiveFontSizes,\r\n  MuiThemeProvider,\r\n} from \"@material-ui/core/\";\r\nimport AdminMatchingTable from \"../../components/AdminMatchingTable/AdminMatchingTable\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  reportBackground: {\r\n    backgroundColor: \"rgba(200,16,46,1)\",\r\n    margin: \"10px\",\r\n    borderRadius: \"5px\",\r\n    flex: \"column\",\r\n  },\r\n  header: {\r\n    textAlign: \"center\",\r\n    fontSize: \"50px\",\r\n    fontWeight: \"400\",\r\n    color: \"white\",\r\n    fontFamily: \"Helvetica\",\r\n    marginBottom: theme.spacing(1.5),\r\n  },\r\n  preferenceSearch: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"10px\",\r\n    width: 280,\r\n    objectFit: \"contain\",\r\n    height: 40,\r\n    padding: \"10px\",\r\n  },\r\n  searchButton: {\r\n    backgroundColor: \"#324CE7\",\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#a60d27\",\r\n      color: \"white\",\r\n    },\r\n  },\r\n  childGrid: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function AdminProfile() {\r\n  let theme = createMuiTheme();\r\n  theme = responsiveFontSizes(theme);\r\n  const classes = useStyles();\r\n\r\n  const [reportInput, setReportInput] = useState({\r\n    project_preference_for_student: 0,\r\n    student_preference_for_project: 0,\r\n    company_name: \"Company Name\",\r\n  });\r\n\r\n  function ReplacePreferences(matchingList) {\r\n    const preferences = {\r\n      0: \"No Preference\",\r\n      1: \"Low\",\r\n      2: \"Medium\",\r\n      3: \"High\",\r\n    };\r\n    for (let i = 0; i < matchingList.length; i++) {\r\n      let studentPreference = matchingList[i].student_preference_for_project;\r\n      let companyPreference = matchingList[i].project_preference_for_student;\r\n      matchingList[i].project_preference_for_student =\r\n        preferences[companyPreference];\r\n      matchingList[i].student_preference_for_project =\r\n        preferences[studentPreference];\r\n    }\r\n    return matchingList;\r\n  }\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [matchingList, setMatchingList] = useState([]);\r\n\r\n  //api for select Company Name\r\n  const [companyNameList, setCompanyNameList] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/company_profile/list_company_name\", getConfig())\r\n      .then((res) => {\r\n        setCompanyNameList(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    //Restore seach to same data when going back.\r\n    let data = {};\r\n    if (JSON.parse(localStorage.getItem(\"search_history\"))) {\r\n      data = JSON.parse(localStorage.getItem(\"search_history\"));\r\n      axios\r\n        .post(\"/project_select_student/admin_matching\", data, getConfig())\r\n        .then((res) => {\r\n          setLoading(false);\r\n          setMatchingList(ReplacePreferences(res.data));\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    setLoading(true);\r\n    const data = {\r\n      company_name:\r\n        reportInput.company_name === \"Company Name\"\r\n          ? \"\"\r\n          : reportInput.company_name,\r\n      project_preference_for_student:\r\n        reportInput.project_preference_for_student,\r\n      student_preference_for_project:\r\n        reportInput.student_preference_for_project,\r\n    };\r\n    axios\r\n      .post(\"/project_select_student/admin_matching\", data, getConfig())\r\n      .then((res) => {\r\n        localStorage.setItem(\"search_history\", JSON.stringify(data));\r\n        setLoading(false);\r\n        setMatchingList(ReplacePreferences(res.data));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.reportBackground}>\r\n        <MuiThemeProvider theme={theme}>\r\n          <Typography className={classes.header}>Matching Report</Typography>\r\n        </MuiThemeProvider>\r\n        <Grid\r\n          container\r\n          id=\"master\"\r\n          direction=\"row\"\r\n          className={classes.parentGrid}\r\n          justify=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n          spacing={3}\r\n        >\r\n          <Grid item className={classes.childGrid}>\r\n            <Select\r\n              className={classes.preferenceSearch}\r\n              value={reportInput.student_preference_for_project}\r\n              onChange={(e) => {\r\n                setReportInput({\r\n                  ...reportInput,\r\n                  student_preference_for_project: e.target.value,\r\n                });\r\n              }}\r\n              label=\"Student Preference For Project\"\r\n            >\r\n              <MenuItem value={0}>\r\n                <em>Student Preference For Project</em>\r\n              </MenuItem>\r\n              <MenuItem value={1}>Low</MenuItem>\r\n              <MenuItem value={2}>Medium</MenuItem>\r\n              <MenuItem value={3}>High</MenuItem>\r\n            </Select>\r\n          </Grid>\r\n          <Grid item className={classes.childGrid}>\r\n            <Select\r\n              className={classes.preferenceSearch}\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={reportInput.project_preference_for_student}\r\n              onChange={(e) => {\r\n                setReportInput({\r\n                  ...reportInput,\r\n                  project_preference_for_student: e.target.value,\r\n                });\r\n              }}\r\n              label=\"Company Preference For Student\"\r\n            >\r\n              <MenuItem value={0}>\r\n                <em>Company Preference For Student</em>\r\n              </MenuItem>\r\n              <MenuItem value={1}>Low</MenuItem>\r\n              <MenuItem value={2}>Medium</MenuItem>\r\n              <MenuItem value={3}>High</MenuItem>\r\n            </Select>\r\n          </Grid>\r\n          <Grid item className={classes.childGrid}>\r\n            <Select\r\n              className={classes.preferenceSearch}\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={reportInput.company_name}\r\n              onChange={(e) => {\r\n                setReportInput({\r\n                  ...reportInput,\r\n                  company_name: e.target.value,\r\n                });\r\n              }}\r\n              label=\"Company Name\"\r\n            >\r\n              <MenuItem value={\"Company Name\"}>\r\n                <em>Company Name</em>\r\n              </MenuItem>\r\n              {companyNameList.map((companyName) => (\r\n                <MenuItem value={companyName.company_name}>\r\n                  {companyName.company_name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n          <Grid item className={classes.childGrid}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.searchButton}\r\n              onClick={handleClick}\r\n            >\r\n              Search\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <div>\r\n        <Grid>\r\n          <AdminMatchingTable loading={loading} matchingList={matchingList} />\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import DeckGL from \"@deck.gl/react\";\r\nimport { IconLayer } from \"@deck.gl/layers\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { StaticMap } from \"react-map-gl\";\r\nimport { MapView } from \"@deck.gl/core\";\r\nimport locationIconAtlas from \"../../assets/location-icon-atlas.png\";\r\nimport locationIconMapping from \"../../assets/location-icon-mapping.json\";\r\nimport { getConfig } from \"../../authConfig\";\r\nimport axios from \"axios\";\r\n\r\nconst MAP_VIEW = new MapView({ repeat: true });\r\n\r\nconst INITIAL_VIEW_STATE = {\r\n  longitude: -95.5698,\r\n  latitude: 29.7604,\r\n  zoom: 8,\r\n  maxZoom: 20,\r\n  pitch: 0,\r\n  bearing: 0,\r\n};\r\n\r\nconst TOKEN =\r\n  \"pk.eyJ1Ijoicm9oaXRzaGFyZGhhIiwiYSI6ImNrajIxcWVxaTIyZWgycXF0NWwxMG9wMTMifQ.NuOk3LeRP5b5Gvtso3MFrg\";\r\n\r\nfunction getTooltip({ object }) {\r\n  return (\r\n    object && {\r\n      html: `\\\r\n      <div style=\"width:250px\">\r\n      <div><b>Company Information</b></div>\r\n      <div>Name: ${object.name}</div>\r\n      <div>Address: ${object.address}</div>\r\n      <div>Description: ${object.description}</div>\r\n      <div>Email: ${object.contact_email}</div>\r\n      <div>Contact: ${object.phone}</div>\r\n      <div>Website: ${object.website}</div>\r\n      <div>\r\n\r\n      `,\r\n    }\r\n  );\r\n}\r\n\r\nexport default function AdminMap({\r\n  iconMapping = locationIconMapping,\r\n  iconAtlas = locationIconAtlas,\r\n}) {\r\n  const mapStyle =\r\n    \"https://basemaps.cartocdn.com/gl/positron-gl-style/style.json\";\r\n\r\n  const [data, setData] = useState([]);\r\n  const layerProps = {\r\n    data,\r\n    pickable: true,\r\n    getPosition: (d) => d.coordinates,\r\n    iconAtlas,\r\n    iconMapping,\r\n  };\r\n\r\n  const getAddress = (address) => {\r\n    if (address !== \"\") {\r\n      const res = address.split(\"|\");\r\n      return `${res[0]}, ${res[1]}, ${res[2]} `;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/company_profile/\", getConfig())\r\n      .then((res) => {\r\n        res.data.map((res) => {\r\n          let address = getAddress(res.company_address) + res.company_zip;\r\n          setData((data) => [\r\n            ...data,\r\n            {\r\n              coordinates: [\r\n                parseFloat(res.company_longitude),\r\n                parseFloat(res.company_latitude),\r\n              ],\r\n              name: res.company_name,\r\n              description: res.company_description,\r\n              phone: res.company_phone_no,\r\n              website: res.company_website,\r\n              contact_email: res.company_contact_email,\r\n              address: address,\r\n            },\r\n          ]);\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  const layer = new IconLayer({\r\n    ...layerProps,\r\n    id: \"icon\",\r\n    getIcon: (d) => \"marker\",\r\n    sizeUnits: \"meters\",\r\n    sizeScale: 2000,\r\n    sizeMinPixels: 30,\r\n    pickable: true,\r\n  });\r\n  return (\r\n    <DeckGL\r\n      width={\"100%\"}\r\n      layers={[layer]}\r\n      views={MAP_VIEW}\r\n      initialViewState={INITIAL_VIEW_STATE}\r\n      controller={true}\r\n      getTooltip={getTooltip}\r\n      useDevicePixels={false}\r\n    >\r\n      <StaticMap\r\n        reuseMaps\r\n        mapStyle={mapStyle}\r\n        mapboxApiAccessToken={TOKEN}\r\n        preventStyleDiffing={true}\r\n      />\r\n    </DeckGL>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Divider,\r\n  ListItemIcon,\r\n  Typography,\r\n  Grid,\r\n  Chip,\r\n  ListItemText,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  VerticalTimeline,\r\n  VerticalTimelineElement,\r\n} from \"react-vertical-timeline-component\";\r\nimport clsx from \"clsx\";\r\nimport WebRoundedIcon from \"@material-ui/icons/WebRounded\";\r\nimport FormatListBulletedTwoToneIcon from \"@material-ui/icons/FormatListBulletedTwoTone\";\r\nimport SchoolRoundedIcon from \"@material-ui/icons/SchoolRounded\";\r\nimport StarsIcon from \"@material-ui/icons/Stars\";\r\nimport HorizontalSplitIcon from \"@material-ui/icons/HorizontalSplit\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { getConfig } from \"../../authConfig\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(5),\r\n  },\r\n  skills: {\r\n    position: \"relative\",\r\n    border: \"1px solid #A6A6A6\",\r\n    borderRadius: \"50%\",\r\n    color: \"#5B5B5B\",\r\n    padding: \"1%\",\r\n    width: \"20px\",\r\n  },\r\n  skillsContainer: {\r\n    \"& > *\": {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  },\r\n  sectionHeader: {\r\n    fontWeight: \"bold\",\r\n    color: \"#606060\",\r\n  },\r\n  sectionContent: {\r\n    color: \"#5B5B5B\",\r\n    display: \"inline\",\r\n  },\r\n  select: {\r\n    width: \"30vh\",\r\n    fontSize: \"small\",\r\n  },\r\n  myProjects: {\r\n    fontWeight: \"bold\",\r\n    color: \"#606060\",\r\n    padding: \"0 auto\",\r\n  },\r\n  flexColumn: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  flexRow: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  skillRoot: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    flexWrap: \"wrap\",\r\n    listStyle: \"none\",\r\n    padding: theme.spacing(0.5),\r\n    margin: 0,\r\n    \"& > * \": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n  beginnerChip: {\r\n    margin: theme.spacing(0.5),\r\n    color: theme.palette.text.primary,\r\n    borderColor: theme.palette.text.primary,\r\n  },\r\n  intermediateChip: {\r\n    margin: theme.spacing(0.5),\r\n    color: theme.palette.warning.main,\r\n    borderColor: theme.palette.warning.main,\r\n  },\r\n  expertChip: {\r\n    margin: theme.spacing(0.5),\r\n    color: theme.palette.success.main,\r\n    borderColor: theme.palette.success.main,\r\n  },\r\n  beginnerDeleteIcon: {\r\n    fill: theme.palette.text.main,\r\n  },\r\n  intermediateDeleteIcon: {\r\n    fill: theme.palette.warning.main,\r\n  },\r\n  expertDeleteIcon: {\r\n    fill: theme.palette.success.main,\r\n  },\r\n  right: {\r\n    position: \"static\",\r\n  },\r\n  skillsRoot: {\r\n    display: \"flex\",\r\n    padding: theme.spacing(0.5),\r\n    alignItems: \"center\",\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  profileImage: {\r\n    width: theme.spacing(10),\r\n  },\r\n  name: {\r\n    textAlign: \"left\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  degree: {\r\n    textAlign: \"left\",\r\n    fontSize: \"small\",\r\n  },\r\n  verticalElementTitle: {\r\n    margin: 0,\r\n    display: \"flex\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  projectLabels: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  chips: {\r\n    marginTop: theme.spacing(1),\r\n    color: \"#FFFFFF\",\r\n    background: \"#C8102E\",\r\n    margin: theme.spacing(0.3),\r\n  },\r\n  projectDescLabel: {\r\n    marginTop: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  projectDesc: {\r\n    marginBottom: theme.spacing(5),\r\n  },\r\n  column: {\r\n    flexBasis: \"33.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: theme.spacing(1, 1),\r\n  },\r\n  projectLink: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  link: {\r\n    color: \"0000EE\",\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n  projectDate: {\r\n    marginTop: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  projectTimeline: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AdminStudentView = ({ match }) => {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(true);\r\n  const [student, setStudent] = useState();\r\n  const [studentProjects, setStudentProjects] = useState([]);\r\n\r\n  const getStudent = useCallback(() => {\r\n    const student = axios.get(\r\n      `/student_profile/id/${match.params.id}`,\r\n      getConfig()\r\n    );\r\n    const studentProjects = axios.post(\r\n      `/student_project/list_by_student`,\r\n      {\r\n        username_id: match.params.id,\r\n      },\r\n      getConfig()\r\n    );\r\n    axios.all([student, studentProjects]).then(\r\n      axios.spread((...responses) => {\r\n        const studentRes = responses[0];\r\n        const studentProjectRes = responses[1];\r\n        setStudent(studentRes.data);\r\n        setStudentProjects(studentProjectRes.data);\r\n        setLoading(false);\r\n      })\r\n    );\r\n  }, [match.params.id]);\r\n\r\n  useEffect(() => {\r\n    getStudent();\r\n  }, [getStudent]);\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <LinearProgress color=\"secondary\" />\r\n      ) : (\r\n        <>\r\n          <List className={classes.root}>\r\n            <ListItem>\r\n              <ListItemIcon edge=\"start\">\r\n                <PersonIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>\r\n                <div\r\n                  className={classes.flexRow}\r\n                  style={{ justifyContent: \"space-between\" }}\r\n                >\r\n                  <div className={classes.flexColumn}>\r\n                    <Typography className={classes.sectionHeader}>\r\n                      Name\r\n                    </Typography>\r\n                    <Typography className={classes.sectionContent}>\r\n                      {student.full_name}\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              </ListItemText>\r\n            </ListItem>\r\n            <Divider variant=\"inset\" component=\"li\" />\r\n            <ListItem>\r\n              <ListItemIcon edge=\"start\">\r\n                <FormatListBulletedTwoToneIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>\r\n                <div\r\n                  className={classes.flexRow}\r\n                  style={{ justifyContent: \"space-between\" }}\r\n                >\r\n                  <div className={classes.flexColumn}>\r\n                    <Typography className={classes.sectionHeader}>\r\n                      Bio\r\n                    </Typography>\r\n                    <Typography className={classes.sectionContent}>\r\n                      {student.student_description}\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              </ListItemText>\r\n            </ListItem>\r\n            <Divider variant=\"inset\" component=\"li\" />\r\n            <ListItem alignItems=\"flex-start\">\r\n              <ListItemIcon>\r\n                <SchoolRoundedIcon />\r\n              </ListItemIcon>\r\n              <div className={classes.flexColumn}>\r\n                <Typography className={classes.sectionHeader}>\r\n                  Academic\r\n                </Typography>\r\n                <Typography\r\n                  className={classes.sectionContent}\r\n                >{`Graduation Date: ${student.graduation_date}`}</Typography>\r\n                <Typography\r\n                  className={classes.sectionContent}\r\n                >{`Degree: ${student.degree}`}</Typography>\r\n                <Typography className={classes.sectionContent}>\r\n                  {\" \"}\r\n                  {`Major: ${student.major}`}\r\n                </Typography>\r\n              </div>\r\n            </ListItem>\r\n            <Divider variant=\"inset\" component=\"li\" />\r\n            <ListItem alignItems=\"flex-start\">\r\n              <ListItemIcon>\r\n                <StarsIcon />\r\n              </ListItemIcon>\r\n              <div className={classes.flexColumn}>\r\n                <Typography className={classes.sectionHeader}>\r\n                  Skills\r\n                </Typography>\r\n                <ul className={classes.skillRoot}>\r\n                  {student.student_skills.map((skill) => {\r\n                    return (\r\n                      <li key={skill.skill_name}>\r\n                        <Chip\r\n                          variant=\"outlined\"\r\n                          classes={\r\n                            skill.experience_level === 1\r\n                              ? {\r\n                                  root: classes.beginnerChip,\r\n                                }\r\n                              : skill.experience_level === 2\r\n                              ? {\r\n                                  root: classes.intermediateChip,\r\n                                }\r\n                              : {\r\n                                  root: classes.expertChip,\r\n                                }\r\n                          }\r\n                          label={skill.skill_name}\r\n                        />\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </div>\r\n            </ListItem>\r\n            <Divider variant=\"inset\" component=\"li\" />\r\n            {studentProjects.length > 0 ? (\r\n              <ListItem alignItems=\"flex-start\">\r\n                <Grid container>\r\n                  <Grid item>\r\n                    <ListItemIcon>\r\n                      <HorizontalSplitIcon />\r\n                    </ListItemIcon>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography className={classes.sectionHeader}>\r\n                      My Projects\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <VerticalTimeline layout={\"1-column-left\"}>\r\n                      {studentProjects.map((project, index) => (\r\n                        <VerticalTimelineElement\r\n                          className={classes.IconStyle}\r\n                          iconStyle={{ background: \"#C8102E\", color: \"#fff\" }}\r\n                          contentArrowStyle={{\r\n                            borderRight: \"7px solid #C8102E\",\r\n                          }}\r\n                          key={index}\r\n                          icon={<WebRoundedIcon />}\r\n                        >\r\n                          <div className={classes.verticalElementTitle}>\r\n                            <h3 className={classes.projectLabels}>\r\n                              Project Name:\r\n                            </h3>\r\n                            <h3 style={{ color: \"rgb(200, 16, 46)\" }}>\r\n                              \"{project.project_name}\"\r\n                            </h3>\r\n                          </div>\r\n                          <div className={classes.verticalElementTitle}>\r\n                            <h3 className={classes.projectLabels}>\r\n                              Project Role:\r\n                            </h3>\r\n                            <h3 style={{ color: \"rgb(200, 16, 46)\" }}>\r\n                              {project.project_role}\r\n                            </h3>\r\n                          </div>\r\n                          <div className={classes.verticalElementTitle}>\r\n                            {project.project_tech !== \"\" ? (\r\n                              project.project_tech\r\n                                .split(\",\")\r\n                                .map((skill, index) => (\r\n                                  <Chip\r\n                                    label={skill}\r\n                                    className={classes.chips}\r\n                                    key={index}\r\n                                  />\r\n                                ))\r\n                            ) : (\r\n                              <Chip label=\"None\" className={classes.chips} />\r\n                            )}\r\n                          </div>\r\n                          <div className={classes.projectDescLabel}>\r\n                            <h3>Project Description:</h3>\r\n                            <p\r\n                              className={classes.projectDesc}\r\n                              style={{ fontWeight: \"lighter\" }}\r\n                            >\r\n                              * {project.project_description}{\" \"}\r\n                              {project.student_id}\r\n                            </p>\r\n                          </div>\r\n\r\n                          <div className={clsx(classes.column, classes.helper)}>\r\n                            <Typography\r\n                              variant=\"caption\"\r\n                              className={classes.projectLink}\r\n                            >\r\n                              Project Source Link\r\n                            </Typography>\r\n                            <br />\r\n                            <a\r\n                              href={\r\n                                project.project_tech.includes(\"https://\")\r\n                                  ? `${project.project_link}`\r\n                                  : `https://${project.project_link}`\r\n                              }\r\n                              className={classes.link}\r\n                              target=\"_blank\"\r\n                            >\r\n                              {project.project_link}\r\n                            </a>\r\n                          </div>\r\n                          <div className={classes.projectDate}>\r\n                            <h5>Project Timeline:</h5>\r\n                            <h5 className={classes.projectTimeline}>\r\n                              {project.project_start_date} -{\" \"}\r\n                              {project.project_in_progress\r\n                                ? \"present\"\r\n                                : project.project_end_date}\r\n                            </h5>\r\n                          </div>\r\n                        </VerticalTimelineElement>\r\n                      ))}\r\n                    </VerticalTimeline>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n            ) : null}\r\n          </List>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminStudentView;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Typography, Grid, Chip, LinearProgress } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport { getConfig } from \"../../authConfig\";\r\nimport BusinessRoundedIcon from \"@material-ui/icons/BusinessRounded\";\r\nimport ShortTextRoundedIcon from \"@material-ui/icons/ShortTextRounded\";\r\nimport LanguageRoundedIcon from \"@material-ui/icons/LanguageRounded\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  studentName: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  gridList: {\r\n    width: \"100%\",\r\n  },\r\n  subheader: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  skillsRoot: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  chip: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  chipLabel: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  qualification: {\r\n    textTransform: \"uppercase\",\r\n  },\r\n  actionArea: {\r\n    padding: theme.spacing(1),\r\n    \"&:focus\": {\r\n      border: `1px solid ${theme.palette.secondary.main}`,\r\n    },\r\n  },\r\n  fieldTitle: {\r\n    textTransform: \"uppercase\",\r\n    color: theme.palette.text.secondary,\r\n    fontSize: \"0.7rem\",\r\n    letterSpacing: \"0.05rem\",\r\n  },\r\n  fieldValue: {\r\n    fontSize: \"0.7rem\",\r\n  },\r\n  cardHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  cardContent: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  gridRoot: {\r\n    padding: \"10px\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  card: {\r\n    width: \"280px\",\r\n    height: \"100%\",\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n  },\r\n  noPaddingTop: {\r\n    paddingTop: \"0\",\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(5),\r\n    height: theme.spacing(5),\r\n  },\r\n  spinner: {\r\n    position: \"relative\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n  buttonContainer: {\r\n    justifyContent: \"center\",\r\n  },\r\n  loader: {\r\n    position: \"relative\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n  imageDiv: {\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    textAlign: \"center\",\r\n    height: \"200px\",\r\n    alignItems: \"center\",\r\n  },\r\n  divProjectName: {\r\n    alignItems: \"flex-end\",\r\n    zIndex: 2,\r\n    position: \"absolute\",\r\n    left: \"0px\",\r\n    width: \"100%\",\r\n  },\r\n  companyInfo: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  companyIcon: {\r\n    margin: \"10px\",\r\n  },\r\n  projectInfo: {\r\n    margin: \"20px\",\r\n  },\r\n  companyInfoContainer: {\r\n    padding: \"20px\",\r\n  },\r\n  projectBody: {\r\n    padding: \"20px\",\r\n  },\r\n  bottomSpace: {\r\n    paddingBottom: \"10px\",\r\n  },\r\n  chips: {\r\n    margin: \"5px\",\r\n  },\r\n  description: {\r\n    display: \"inline-block\",\r\n    wordBreak: \"break-word\",\r\n  },\r\n}));\r\n\r\nexport default function AdminCompanyView({ match }) {\r\n  const classes = useStyles();\r\n  // Initial Info\r\n  const [profileInfo, setCompanyInfo] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n\r\n    axios\r\n      .get(\r\n        \"/company_project/\" + match.params.project,\r\n\r\n        getConfig()\r\n      )\r\n      .then((res) => {\r\n        setIsLoading(false);\r\n\r\n        setCompanyInfo({\r\n          project_name: res.data.project_name,\r\n          project_description: res.data.project_description,\r\n          project_type: res.data.project_type,\r\n          project_deadline: res.data.project_deadline,\r\n          project_tech: res.data.project_tech\r\n            ? res.data.project_tech.split(\",\").map((skill, index) => {\r\n                return { label: skill, value: index };\r\n              })\r\n            : null,\r\n          company_name: res.data.company_name,\r\n          company_website: res.data.company_website,\r\n          company_contact_email: res.data.company_contact_email,\r\n          date_added: res.data.date_added,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n      });\r\n  }, [match.params.project]);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.imageDiv}>\r\n        <div className={classes.divProjectName}>\r\n          <Typography variant=\"h4\">Project</Typography>\r\n          <Typography variant=\"h5\">{profileInfo.project_name}</Typography>\r\n        </div>\r\n      </div>\r\n\r\n      {isLoading ? (\r\n        <LinearProgress\r\n          color=\"secondary\"\r\n          style={{ margin: \"20px\" }}\r\n        ></LinearProgress>\r\n      ) : (\r\n        <Grid container className={classes.gridRoot}>\r\n          <Grid container className={classes.gridRoot}>\r\n            <Grid item xs={11}>\r\n              <Grid container className={classes.companyInfoContainer}>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  sm={12}\r\n                  md={3}\r\n                  className={classes.companyInfo}\r\n                >\r\n                  <BusinessRoundedIcon className={classes.companyIcon} />\r\n\r\n                  {profileInfo.company_name}\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  sm={12}\r\n                  md={3}\r\n                  className={classes.companyInfo}\r\n                >\r\n                  <LanguageRoundedIcon className={classes.companyIcon} />\r\n\r\n                  {profileInfo.company_website}\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  sm={12}\r\n                  md={4}\r\n                  className={classes.companyInfo}\r\n                >\r\n                  <ShortTextRoundedIcon className={classes.companyIcon} />\r\n\r\n                  {profileInfo.company_contact_email}\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container className={classes.projectBody}>\r\n                <Grid item xs={12} className={classes.companyInfo}>\r\n                  <Typography\r\n                    variant=\"h6\"\r\n                    display=\"inline\"\r\n                    className={classes.bottomSpace}\r\n                  >\r\n                    {\" \"}\r\n                    Description:{\" \"}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} className={classes.companyInfo}>\r\n                  <Typography className={classes.description}>\r\n                    {profileInfo.project_description}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container className={classes.projectInfo}>\r\n                <Grid item xs={12} sm={12} md={3}>\r\n                  <Typography display=\"inline\" className={classes.bottomSpace}>\r\n                    {\" \"}\r\n                    Type:{\" \"}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" display=\"inline\">\r\n                    {profileInfo.project_type}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={3}>\r\n                  <Typography display=\"inline\" className={classes.bottomSpace}>\r\n                    {\" \"}\r\n                    Deadline:{\" \"}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" display=\"inline\">\r\n                    {profileInfo.project_deadline}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={3}>\r\n                  <Typography display=\"inline\" className={classes.bottomSpace}>\r\n                    {\" \"}\r\n                    Date Added:{\" \"}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" display=\"inline\">\r\n                    {profileInfo.date_added}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container className={classes.projectInfo}>\r\n                <Grid item xs={12}>\r\n                  {profileInfo.project_tech ? (\r\n                    profileInfo.project_tech.map((skill, index) => (\r\n                      <Chip\r\n                        component={\"span\"}\r\n                        label={skill.label}\r\n                        className={classes.chips}\r\n                        key={index}\r\n                      />\r\n                    ))\r\n                  ) : (\r\n                    <Chip\r\n                      label=\"No technology specified for this project\"\r\n                      component={\"span\"}\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { getConfig } from \"../../authConfig\";\r\n\r\nexport default function AdminCompanyProjects() {\r\n  // takes in the user input\r\n  const [searchInput, setSearchInput] = useState({\r\n    company_name: \"\",\r\n  });\r\n  const [noProjectsFound, setNoProjectsFound] = useState(false);\r\n  const [projectList, setProjectList] = useState([]);\r\n  // this is for the normal Search\r\n  const handleClickSearch = () => {\r\n    let data = {\r\n      company_name: searchInput.company_name,\r\n      industry_type: \"\",\r\n      project_name: \"\",\r\n      project_type: [],\r\n      project_tech: [],\r\n      keywords: [],\r\n    };\r\n    localStorage.setItem(\"search_history\", JSON.stringify(data));\r\n    axios\r\n      .post(\"/company_project/search\", data, getConfig())\r\n      .then((res) => {\r\n        setProjectList(res.data);\r\n        if (projectList.length <= 0) {\r\n          setNoProjectsFound(true);\r\n        } else {\r\n          setNoProjectsFound(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setNoProjectsFound(true);\r\n        console.log(err);\r\n      });\r\n  };\r\n  const handleKeypress = (e) => {\r\n    //it triggers by pressing the enter key\r\n    if (e.key === \"Enter\") {\r\n      handleClickSearch();\r\n    }\r\n  };\r\n\r\n  const [companyNameList, setCompanyNameList] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/company_profile/list_company_name\", getConfig())\r\n      .then((res) => {\r\n        const data = res.data.map((compName) => {\r\n          return { label: compName.company_name };\r\n        });\r\n        setCompanyNameList(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    //Restore seach to same data when going back.\r\n    let data = {};\r\n    if (JSON.parse(localStorage.getItem(\"search_history\"))) {\r\n      data = JSON.parse(localStorage.getItem(\"search_history\"));\r\n      axios\r\n        .post(\"/company_project/search\", data, getConfig())\r\n        .then((res) => {\r\n          setProjectList(res.data);\r\n          if (projectList.length <= 0) {\r\n            setNoProjectsFound(true);\r\n          } else {\r\n            setNoProjectsFound(false);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setNoProjectsFound(true);\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return <div>I am here</div>;\r\n}\r\n","import React from \"react\";\r\nimport { Route, useRouteMatch, Switch } from \"react-router-dom\";\r\nimport AdminProfile from \"../AdminProfile/AdminProfile\";\r\nimport AdminMap from \"../AdminMap/AdminMap\";\r\nimport AdminStudentView from \"../../components/StudentPublic/AdminStudentView\";\r\nimport AdminCompanyView from \"../../components/CompanyPublic/AdminCompanyView\";\r\nimport AdminCompanyProjects from \"../AdminCompanyProjects/AdminCompanyProjects\";\r\n\r\nconst AdminRoutes = () => {\r\n  let { path } = useRouteMatch();\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route path={`${path}`} exact component={AdminProfile} />\r\n        <Route path={`${path}/Maps`} exact component={AdminMap}/> \r\n        <Route path={`${path}/CompanyProjects`} exact component={AdminCompanyProjects} />\r\n        <Route path={`${path}/search/:id`} component={AdminStudentView} />\r\n        <Route\r\n          path={`${path}/projects/:project`}\r\n          render={(props) => <AdminCompanyView {...props} />}\r\n        />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminRoutes;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ExploreRoundedIcon from '@material-ui/icons/ExploreRounded';\r\nimport AssessmentRoundedIcon from '@material-ui/icons/AssessmentRounded';\r\nimport BusinessRoundedIcon from '@material-ui/icons/BusinessRounded';\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport { ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"black\",\r\n    fontFamily: \"Lato\",\r\n  },\r\n}));\r\n\r\nconst AdminMenu = () => {\r\n  const classes = useStyles();\r\n  let { url } = useRouteMatch();\r\n\r\n  const options = [\r\n    { text: \"Report\", url: `${url}`, icon: <AssessmentRoundedIcon /> },\r\n    {\r\n      text: \"My Map\",\r\n      url: `${url}/Maps`,\r\n      icon: <ExploreRoundedIcon />,\r\n    },\r\n    {\r\n      text:\"Company Projects\",\r\n      url: `${url}/CompanyProjects`,\r\n      icon:<BusinessRoundedIcon />\r\n    }\r\n  ];\r\n  return (\r\n    <div>\r\n      {options.map((item, index) => (\r\n        <Link to={item.url} className={classes.link} key={item.text}>\r\n          <ListItem key={item.text}>\r\n            <ListItemIcon>{item.icon}</ListItemIcon>\r\n            <ListItemText primary={item.text} />\r\n          </ListItem>\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminMenu;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DataContext } from \"../../contexts/dataContext\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n  Drawer,\r\n  AppBar,\r\n  CssBaseline,\r\n  Toolbar,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Divider,\r\n  IconButton,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport AccountCircleRoundedIcon from \"@material-ui/icons/AccountCircleRounded\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport StudentRoutes from \"./StudentRoutes\";\r\nimport StudentMenu from \"./StudentMenu\";\r\nimport CompanyRoutes from \"./CompanyRoutes\";\r\nimport CompanyMenu from \"./CompanyMenu\";\r\nimport axios from \"axios\";\r\nimport AdminRoutes from \"./AdminRoutes\";\r\nimport AdminMenu from \"./AdminMenu\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getConfig } from \"../../authConfig\";\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: drawerWidth,\r\n    },\r\n    background: \"rgba(200,16,46,1)\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: \"auto\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n  },\r\n  Logout: {\r\n    objectFit: \"contain\",\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  rightToolbar: {\r\n    marginLeft: \"auto\",\r\n    objectFit: \"contain\",\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"black\",\r\n    fontFamily: \"Lato\",\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const { data, dispatch } = useContext(DataContext);\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const slug = localStorage.getItem(\"slug\");\r\n  const role_id = localStorage.getItem(\"role_id\");\r\n\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (slug) {\r\n      let url;\r\n      if (role_id === \"0\") {\r\n        url = `/student_profile/${slug}`;\r\n      } else if (role_id === \"1\") {\r\n        url = `/company_profile/${slug}`;\r\n      } else if (role_id === \"2\") {\r\n        url = `/website_admin_profile/1`;\r\n      }\r\n      axios\r\n        .get(url, getConfig())\r\n        .then((res) => {\r\n          dispatch({ type: \"SET_PROFILE\", payload: res.data });\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          // to prevent user from changing their roles\r\n          // would keep commented while in developement\r\n          // console.log(err.response);\r\n          // if (err.response.status === 404) {\r\n          //   logout();\r\n          // }\r\n        });\r\n    }\r\n  }, [dispatch, role_id, slug]);\r\n\r\n  const userOptions = () => {\r\n    switch (role_id) {\r\n      case \"0\":\r\n        return {\r\n          name: data.profile.full_name ? data.profile.full_name : null,\r\n          menu: <StudentMenu />,\r\n          routes: <StudentRoutes />,\r\n        };\r\n      case \"1\":\r\n        return {\r\n          name: data.profile.company_name ? data.profile.company_name : null,\r\n          menu: <CompanyMenu />,\r\n          routes: <CompanyRoutes />,\r\n        };\r\n      case \"2\":\r\n        return {\r\n          name: data.profile.admin_first_name\r\n            ? data.profile.admin_last_name\r\n            : null,\r\n          menu: <AdminMenu />,\r\n          routes: <AdminRoutes />,\r\n        };\r\n\r\n      default: {\r\n        logout();\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n\r\n  //TODO\r\n  //logs out if no profile found 404\r\n\r\n  return (\r\n    <>\r\n      {loading ? null : (\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                edge=\"start\"\r\n                onClick={handleDrawerToggle}\r\n                className={classes.menuButton}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\">| Future Start |</Typography>\r\n              <AccountCircleRoundedIcon\r\n                color=\"inherit\"\r\n                className={classes.rightToolbar}\r\n              />\r\n              <Typography p={2}>{`Welcome! ${\r\n                userOptions() ? userOptions().name : \"\"\r\n              }`}</Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <nav className={classes.drawer}>\r\n            <Hidden smUp implementation=\"css\">\r\n              <Drawer\r\n                variant=\"temporary\"\r\n                anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n                open={mobileOpen}\r\n                onClose={handleDrawerToggle}\r\n                classes={{\r\n                  paper: classes.drawerPaper,\r\n                }}\r\n                ModalProps={{\r\n                  keepMounted: true, // Better open performance on mobile.\r\n                }}\r\n              >\r\n                <Toolbar />\r\n                <div className={classes.drawerContainer}>\r\n                  <List>\r\n                    {userOptions() ? userOptions().menu : null}\r\n                    <Link to=\"/login\" className={classes.link}>\r\n                      <ListItem onClick={logout}>\r\n                        <ListItemIcon>\r\n                          <ExitToAppRoundedIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Logout\" />\r\n                      </ListItem>\r\n                    </Link>\r\n                  </List>\r\n                </div>\r\n                <Divider />\r\n              </Drawer>\r\n            </Hidden>\r\n            <Hidden xsDown implementation=\"css\">\r\n              <Drawer\r\n                classes={{\r\n                  paper: classes.drawerPaper,\r\n                }}\r\n                variant=\"permanent\"\r\n                open\r\n              >\r\n                <Toolbar />\r\n                <div className={classes.drawerContainer}>\r\n                  <List>\r\n                    {userOptions() ? userOptions().menu : null}\r\n                    <Link to=\"/login\" className={classes.link}>\r\n                      <ListItem onClick={logout}>\r\n                        <ListItemIcon>\r\n                          <ExitToAppRoundedIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Logout\" />\r\n                      </ListItem>\r\n                    </Link>\r\n                  </List>\r\n                  <Divider />\r\n                </div>\r\n              </Drawer>\r\n            </Hidden>\r\n          </nav>\r\n          <main className={classes.content}>\r\n            <Toolbar />\r\n            {userOptions() ? userOptions().routes : null}\r\n          </main>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 1000,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n    color: \"#FFFFFF\",\r\n    background: \"rgba(200,16,46,1)\",\r\n    \"&:hover, &.Mui-focusVisible\": {\r\n      transition: \"0.3s\",\r\n      color: \"white\",\r\n      backgroundColor: \"#b0102a\",\r\n    },\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    marginTop: 20,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\n\r\n// Destructuring props\r\nconst FirstStep = ({\r\n  handleNext,\r\n  handleBack,\r\n  handleChange,\r\n  values: { issue_summary },\r\n  formErrors,\r\n}) => {\r\n  // Check if all values are not empty or if there are some error\r\n  const isValid =\r\n    issue_summary.length > 0 &&\r\n    !formErrors.issue_summary;\r\n\r\nconst classes = useStyles();\r\n  return (\r\n    <>\r\n      <React.Fragment>\r\n        <main className={classes.layout}>\r\n          <Paper className={classes.paper}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Summary of Issue:\r\n            </Typography>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"filled-multiline-static\"\r\n                  multiline\r\n                  rows={12}\r\n                  required\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  inputProps={{ maxLength: 750}}\r\n                  name=\"issue_summary\"\r\n                  placeholder=\"Please enter your issue *\"\r\n                  value={issue_summary || \"\"}\r\n                  onChange={handleChange}\r\n                  error={!!formErrors.issue_summary}\r\n                  helperText={`${issue_summary.length}/750`}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <div\r\n              // style={{ display: \"flex\", marginTop: 50, justifyContent: \"flex-end\" }}\r\n              className={classes.buttons}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={!isValid}\r\n                onClick={isValid ? handleNext : null}\r\n                className={classes.button}\r\n              >\r\n                Next\r\n              </Button>\r\n            </div>\r\n          </Paper>\r\n        </main>\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FirstStep;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 1000,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n    color: \"#FFFFFF\",\r\n    background: \"rgba(200,16,46,1)\",\r\n    \"&:hover, &.Mui-focusVisible\": {\r\n      transition: \"0.3s\",\r\n      color: \"white\",\r\n      backgroundColor: \"#b0102a\",\r\n    },\r\n  },\r\n  backButton: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n    color: \"#FFFFFF\",\r\n    background: \"#3d3d3d\",\r\n    \"&:hover, &.Mui-focusVisible\": {\r\n      transition: \"0.3s\",\r\n      color: \"white\",\r\n      backgroundColor: \"#292929\",\r\n    },\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    marginTop: 20,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\n// Destructuring props\r\nconst SecondStep = ({\r\n  handleBack,\r\n  handleNext,\r\n  handleChange,\r\n  values: { first_name, last_name, contact_email, contact_phone },\r\n  formErrors,\r\n}) => {\r\n  // Check if all values are not empty or if there are some error\r\n  const isValid =\r\n    first_name.length > 0 &&\r\n    !formErrors.firstName &&\r\n    last_name.length > 0 &&\r\n    !formErrors.lastName &&\r\n    contact_email.length > 0 &&\r\n    !formErrors.email &&\r\n    contact_phone.length > 0 &&\r\n    !formErrors.phone;\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <React.Fragment>\r\n        <main className={classes.layout}>\r\n          <Paper className={classes.paper}>\r\n            <Grid container spacing={2} noValidate>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"First Name\"\r\n                  name=\"first_name\"\r\n                  placeholder=\"Your first name\"\r\n                  margin=\"normal\"\r\n                  value={first_name || \"\"}\r\n                  onChange={handleChange}\r\n                  error={!!formErrors.first_name}\r\n                  helperText={formErrors.first_name}\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Last Name\"\r\n                  name=\"last_name\"\r\n                  placeholder=\"Your last name\"\r\n                  margin=\"normal\"\r\n                  value={last_name || \"\"}\r\n                  onChange={handleChange}\r\n                  error={!!formErrors.last_name}\r\n                  helperText={formErrors.last_name}\r\n                  required\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Email\"\r\n                  name=\"contact_email\"\r\n                  placeholder=\"Your email address\"\r\n                  type=\"email\"\r\n                  value={contact_email || \"\"}\r\n                  onChange={handleChange}\r\n                  margin=\"normal\"\r\n                  error={!!formErrors.contact_email}\r\n                  helperText={formErrors.contact_email}\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Phone\"\r\n                  name=\"contact_phone\"\r\n                  placeholder=\"Your phone number\"\r\n                  type=\"phone\"\r\n                  value={contact_phone || \"\"}\r\n                  onChange={handleChange}\r\n                  margin=\"normal\"\r\n                  error={!!formErrors.contact_phone}\r\n                  helperText={formErrors.contact_phone}\r\n                  required\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <div className={classes.buttons}>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={handleBack}\r\n                className={classes.backButton}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={!isValid}\r\n                onClick={isValid ? handleNext : null}\r\n                className={classes.button}\r\n              >\r\n                Next\r\n              </Button>\r\n            </div>\r\n          </Paper>\r\n        </main>\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SecondStep;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 1000,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n    color: \"#FFFFFF\",\r\n    background: \"rgba(200,16,46,1)\",\r\n    \"&:hover, &.Mui-focusVisible\": {\r\n      transition: \"0.3s\",\r\n      color: \"white\",\r\n      backgroundColor: \"#b0102a\",\r\n    },\r\n  },\r\n  backButton: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n    color: \"#FFFFFF\",\r\n    background: \"#3d3d3d\",\r\n    \"&:hover, &.Mui-focusVisible\": {\r\n      transition: \"0.3s\",\r\n      color: \"white\",\r\n      backgroundColor: \"#292929\",\r\n    },\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    marginTop: 20,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  grid: {\r\n    display: \"inline-block\",\r\n    overflow: \"auto\",\r\n  },\r\n}));\r\n\r\n// Destructure props\r\nconst Confirm = ({ handleNext, handleBack, values }) => {\r\n  const {\r\n    first_name,\r\n    last_name,\r\n    contact_email,\r\n    contact_phone,\r\n    issue_summary,\r\n  } = values;\r\n\r\n  const handleSubmit = () => {\r\n    axios\r\n      .post(\"/issue_report/create\", values)\r\n      .then((res) => {\r\n        console.log(values);\r\n        handleNext();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <React.Fragment>\r\n        <main className={classes.layout}>\r\n          <Paper className={classes.paper}>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12}>\r\n                <List disablePadding>\r\n                  <ListItem>\r\n                    <ListItemText\r\n                      primary=\"Issue Summary\"\r\n                      secondary={issue_summary}\r\n                      className={classes.grid}\r\n                    />\r\n                  </ListItem>\r\n\r\n                  <Divider />\r\n                  <ListItem>\r\n                    <ListItemText primary=\"First Name\" secondary={first_name} />\r\n                  </ListItem>\r\n\r\n                  <Divider />\r\n\r\n                  <ListItem>\r\n                    <ListItemText primary=\"Last Name\" secondary={last_name} />\r\n                  </ListItem>\r\n\r\n                  <Divider />\r\n\r\n                  <ListItem>\r\n                    <ListItemText\r\n                      primary=\"Email Address\"\r\n                      secondary={contact_email}\r\n                    />\r\n                  </ListItem>\r\n\r\n                  <Divider />\r\n\r\n                  <ListItem>\r\n                    <ListItemText\r\n                      primary=\"Phone\"\r\n                      secondary={\r\n                        contact_phone.length > 0\r\n                          ? contact_phone\r\n                          : \"Not Provided\"\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                </List>\r\n\r\n                <div className={classes.buttons}>\r\n                  <Button\r\n                    className={classes.backButton}\r\n                    variant=\"contained\"\r\n                    onClick={handleBack}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                  <Button\r\n                    className={classes.button}\r\n                    variant=\"contained\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Confirm & Continue\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </main>\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Confirm;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  title: {\r\n    marginTop: 30,\r\n  },\r\n}));\r\n\r\nconst Success = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.box}>\r\n      <Typography variant=\"h2\" align=\"center\">\r\n        Thank you!\r\n      </Typography>\r\n      <Typography component=\"p\" align=\"center\" className={classes.title}>\r\n        Your issue has been received. We greatly appreciate any reports for\r\n        issues & bugs and your submission will be sent to the development team.\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Success;\r\n","const isText = RegExp(/^[A-Z ]+$/i);\r\nconst isEmail = RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i);\r\nconst isPhone = RegExp(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4,6})$/); // us\r\n\r\nexport default function formValidation(name, value, schema) {\r\n  const { validate, minLength, maxLength } = schema[name];\r\n  let error = \"\";\r\n\r\n  if (minLength && value.length < minLength)\r\n    error = `Minimum of ${minLength} characters are required.`;\r\n  else if (maxLength && value.length > maxLength)\r\n    error = `Maximum length of ${maxLength} exceeded!`;\r\n  if (!validate) return;\r\n\r\n  switch (validate) {\r\n    case \"text\":\r\n      if (!isText.test(value)) error = \"This field accepts text only.\";\r\n      break;\r\n\r\n    case \"contact_email\":\r\n      if (!isEmail.test(value)) error = \"Please enter a valid email address.\";\r\n      break;\r\n\r\n    case \"contact_phone\":\r\n      if (!isPhone.test(value))\r\n        error = \"Please enter a valid phone number. i.e: xxx-xxx-xxxx\";\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return error;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport FirstStep from \"./IssueForm\";\r\nimport SecondStep from \"./ContactInfoForm\";\r\nimport ReviewSubmission from \"./ReviewSubmissionForm\";\r\nimport Success from \"./Success\";\r\nimport formValidation from \"./formValidation\";\r\n\r\n\r\nexport default function ReportBug() {\r\n  // Step titles\r\n  const labels = [\"Issue Summary\", \"Contact Info\", \"Review Submission\"];\r\n\r\n  const initialValues = {\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    contact_email: \"\",\r\n    contact_phone: \"\",\r\n    issue_summary: \"\",\r\n  };\r\n\r\n  const fieldsValidation = {\r\n    first_name: {\r\n      error: \"\",\r\n      validate: \"text\",\r\n      minLength: 2,\r\n      maxLength: 25,\r\n    },\r\n    last_name: {\r\n      error: \"\",\r\n      validate: \"text\",\r\n      minLength: 2,\r\n      maxLength: 25,\r\n    },\r\n    contact_email: {\r\n      error: \"\",\r\n      validate: \"contact_email\",\r\n      maxLength: 50,\r\n    },\r\n    contact_phone: {\r\n      error: \"\",\r\n      validate: \"contact_phone\",\r\n      maxLength: 15,\r\n    },\r\n    issue_summary: {\r\n      error: \"\",\r\n      validate: \"\",\r\n      maxLength: 750,\r\n    },\r\n  };\r\n\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [formValues, setFormValues] = useState(initialValues);\r\n  const [formErrors, setFormErrors] = useState({});\r\n\r\n  // Proceed to next step\r\n  const handleNext = () => setActiveStep((prev) => prev + 1);\r\n  // Go back to prev step\r\n  const handleBack = () => setActiveStep((prev) => prev - 1);\r\n\r\n  // Handle form change\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    // Set values\r\n    setFormValues((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n\r\n    // set errors\r\n    const error = formValidation(name, value, fieldsValidation) || \"\";\r\n\r\n    setFormErrors({\r\n      [name]: error,\r\n    });\r\n  };\r\n\r\n  const handleSteps = (step) => {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <FirstStep\r\n            handleNext={handleNext}\r\n            handleChange={handleChange}\r\n            values={formValues}\r\n            formErrors={formErrors}\r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <SecondStep\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            handleChange={handleChange}\r\n            values={formValues}\r\n            formErrors={formErrors}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <ReviewSubmission\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            values={formValues}\r\n          />\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {activeStep === labels.length ? (\r\n        // Last Component\r\n        <Success values={formValues} />\r\n      ) : (\r\n        <>\r\n          <Box style={{ margin: \"30px 0 50px\" }}>\r\n            <Typography variant=\"h4\" align=\"center\">\r\n              Report a Bug Form\r\n            </Typography>\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              align=\"center\"\r\n              style={{ margin: \"10px 0\" }}\r\n            >\r\n              Your feedback is greatly appreciated!\r\n            </Typography>\r\n          </Box>\r\n          <Stepper\r\n            activeStep={activeStep}\r\n            style={{ margin: \"30px 0 15px\" }}\r\n            alternativeLabel\r\n          >\r\n            {labels.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          {handleSteps(activeStep)}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport NavBar from \"../../components/Navbar/Navbar\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  main: {\r\n    background: \"#f5f5f5\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    width: \"95vw\",\r\n    margin: theme.spacing(3),\r\n    // background: \"#f5f5f5\",\r\n    background: \"#FFFFFF\",\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"100%\",\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    paddingTop: \"0.6em\",\r\n    marginTop: theme.spacing(10),\r\n    color: \"#C8102E\",\r\n    letterSpacing: \"2px\",\r\n    fontSize: \"50px\",\r\n    fontWeight: \"800\",\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\",\r\n  },\r\n  cover: {\r\n    minHeight: 256,\r\n    minWidth: 256,\r\n  },\r\n  icon: {\r\n    height: \"50%\",\r\n  },\r\n}));\r\n\r\nexport default function MediaControlCard() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.main}>\r\n      <div>\r\n        <NavBar />\r\n      </div>\r\n      <div>\r\n        <Typography className={classes.title}>ABOUT THE DEVELOPERS</Typography>\r\n      </div>\r\n      <div>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          {/* <NavBar /> */}\r\n          <Grid item xs={3}>\r\n            <Card className={classes.root}>\r\n              <div className={classes.details}>\r\n                <CardContent className={classes.content}>\r\n                  <Typography component=\"h5\" variant=\"h5\">\r\n                    Jerel Lopez\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    Senior, BS Computer Science (May 2021)\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    Minor: Mathematics\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    Fun Fact: I like to work on cars as a hobby\r\n                  </Typography>\r\n                  <Link href=\"https://www.linkedin.com/in/jerellopez/\">\r\n                    <LinkedInIcon className={classes.icon} />\r\n                  </Link>\r\n                </CardContent>\r\n              </div>\r\n              <CardMedia\r\n                className={classes.cover}\r\n                image=\"https://avatars2.githubusercontent.com/u/58873590?s=460&v=4\"\r\n                title=\"Live from space album cover\"\r\n              />\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={3}>\r\n            <Card className={classes.root}>\r\n              <div className={classes.details}>\r\n                <CardContent className={classes.content}>\r\n                  <Typography component=\"h5\" variant=\"h5\">\r\n                    Mayoor Shardha\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    Senior, BS Computer Science (May 2021)\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    Minor: Management Information System (MIS)\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    Fun Fact: I want to do skydiving even though I am scared of\r\n                    heights!\r\n                  </Typography>\r\n                  <Link href=\"https://www.linkedin.com/in/mayoor-shardha/\">\r\n                    <LinkedInIcon className={classes.icon} />\r\n                  </Link>\r\n                </CardContent>\r\n              </div>\r\n              <CardMedia\r\n                className={classes.cover}\r\n                image=\"https://media-exp1.licdn.com/dms/image/C4E03AQEtZYGpiDU7YQ/profile-displayphoto-shrink_400_400/0/1600906402673?e=1616025600&v=beta&t=6ysFxodU0jybsP3sXd6vgdd93cbIWUlCkhzdMpvkPIA\"\r\n              />\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={3}>\r\n            <Card className={classes.root}>\r\n              <div className={classes.details}>\r\n                <CardContent className={classes.content}>\r\n                  <Typography component=\"h5\" variant=\"h5\">\r\n                    Hai Vu\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    Junior, BS Computer Science (May 2022)\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    CS Undergrad at University of Houston.\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    Fun Fact:\r\n                  </Typography>\r\n                  <Link href=\"https://www.linkedin.com/in/haidvu/\">\r\n                    <LinkedInIcon className={classes.icon} />\r\n                  </Link>\r\n                </CardContent>\r\n              </div>\r\n              <CardMedia\r\n                className={classes.cover}\r\n                image=\"https://media-exp1.licdn.com/dms/image/C4E03AQE31aoPM2imkQ/profile-displayphoto-shrink_400_400/0/1595704770154?e=1616025600&v=beta&t=YOJpoU8sh0p0mA3HfEBHcu3RPS6lrJMMZJcFA3s_wLI\"\r\n              />\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={3}>\r\n            <Card className={classes.root}>\r\n              <div className={classes.details}>\r\n                <CardContent className={classes.content}>\r\n                  <Typography component=\"h5\" variant=\"h5\">\r\n                    Muhammad Usman\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    Sophomore, BS Computer Science (May 2023)\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    Minor: Finance\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    Fun Fact: I like potatoes (very much)\r\n                  </Typography>\r\n                  <Link href=\"https://www.linkedin.com/in/muhammad-u/\">\r\n                    <LinkedInIcon className={classes.icon} />\r\n                  </Link>\r\n                </CardContent>\r\n              </div>\r\n              <CardMedia\r\n                className={classes.cover}\r\n                image=\"https://media-exp1.licdn.com/dms/image/C4E03AQFWhWvfUXUbVQ/profile-displayphoto-shrink_400_400/0/1598304352545?e=1616025600&v=beta&t=_KnbKmIPtP3-5BVp7m8Sg4Yf8Qm7_ReMMy1cQ6c8hGw\"\r\n              />\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={3}>\r\n            <Card className={classes.root}>\r\n              <div className={classes.details}>\r\n                <CardContent className={classes.content}>\r\n                  <Typography component=\"h5\" variant=\"h5\">\r\n                    Sai Patibandla\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    BS Computer Science\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    CS Undergrad at University of Houston.\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    Fun Fact:\r\n                  </Typography>\r\n                  <Link href=\"https://www.linkedin.com/in/sai-patibandla-8b6b1715a/\">\r\n                    <LinkedInIcon className={classes.icon} />\r\n                  </Link>\r\n                </CardContent>\r\n              </div>\r\n              <CardMedia\r\n                className={classes.cover}\r\n                image=\"https://avatars2.githubusercontent.com/u/15235080?s=400&v=4\"\r\n              />\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={3}>\r\n            <Card className={classes.root}>\r\n              <div className={classes.details}>\r\n                <CardContent className={classes.content}>\r\n                  <Typography component=\"h5\" variant=\"h5\">\r\n                    Elisa Martinez\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    Junior, BS Computer Science and Mathematics (May 2022)\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    CS Undergrad at University of Houston.\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    Fun Fact: My favorite fictional character is Sherlock Holmes\r\n                  </Typography>\r\n                  <Link href=\"https://www.linkedin.com/in/elisa-martinez-fuentes/\">\r\n                    <LinkedInIcon className={classes.icon} />\r\n                  </Link>\r\n                </CardContent>\r\n              </div>\r\n              <CardMedia\r\n                className={classes.cover}\r\n                image=\"https://media-exp1.licdn.com/dms/image/C4E03AQGV5rhrl7tHYA/profile-displayphoto-shrink_400_400/0/1553719191230?e=1616025600&v=beta&t=SvhGj059AXGJkC-PD9n4VpwzkYUg2OY1jc7M7Vk1Tac\"\r\n              />\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={3}>\r\n            <Card className={classes.root}>\r\n              <div className={classes.details}>\r\n                <CardContent className={classes.content}>\r\n                  <Typography component=\"h5\" variant=\"h5\">\r\n                    Thanh Le\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    Senior, BS Computer Science (May 2021)\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    Minor: Mathematics\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    Fun Fact:\r\n                  </Typography>\r\n                  <Link href=\"https://www.linkedin.com/in/thanhtanle/\">\r\n                    <LinkedInIcon className={classes.icon} />\r\n                  </Link>\r\n                </CardContent>\r\n              </div>\r\n              <CardMedia\r\n                className={classes.cover}\r\n                image=\"https://media-exp1.licdn.com/dms/image/C4E03AQEu83drkqqoFw/profile-displayphoto-shrink_400_400/0/1597455837340?e=1616025600&v=beta&t=ruvWomJEmRqXI7_a4vsbcPlN_AgWu4LV69N4t7jVSPQ\"\r\n              />\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={3}>\r\n            <Card className={classes.root}>\r\n              <div className={classes.details}>\r\n                <CardContent className={classes.content}>\r\n                  <Typography component=\"h5\" variant=\"h5\">\r\n                    Lejing Huang\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    BS Computer Science\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    CS Undergrad at University of Houston.\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    Fun Fact:\r\n                  </Typography>\r\n                  <Link href=\"https://www.linkedin.com/in/lejing-huang-248467176/\">\r\n                    <LinkedInIcon className={classes.icon} />\r\n                  </Link>\r\n                </CardContent>\r\n              </div>\r\n              <CardMedia\r\n                className={classes.cover}\r\n                image=\"https://avatars1.githubusercontent.com/u/60712503?s=400&v=4\"\r\n              />\r\n            </Card>\r\n          </Grid>\r\n          <Footer />\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        localStorage.getItem(\"token\") && localStorage.getItem(\"slug\") ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Home from \"./pages/Home/Home\";\r\nimport Login from \"./components/Login/Login\";\r\nimport ResetPage from \"./components/ResetPassword/ResetPage\";\r\nimport Signup from \"./components/Signup/Signup\";\r\nimport AccountInfo from \"./components/AccountInfo/AccountInfo\";\r\nimport NotFound from \"./pages/NotFound/NotFound\";\r\nimport Dashboard from \"./pages/Dashboard/Dashboard\";\r\nimport ReportBug from \"./pages/ReportBug/ReportBug\"\r\nimport AboutDevelopers from \"./pages/AboutDevelopers/AboutDevelopers\";\r\nimport ProtectedRoute from \"./components/ProtectedRoute/ProtectedRoute\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/lost-password\" component={ResetPage} />\r\n        <Route path=\"/signup\" component={Signup} />\r\n        <Route path=\"/accountInfo\" component={AccountInfo} />\r\n        <Route path=\"/report-bug\" component={ReportBug} />\r\n        <Route path=\"/developers\" component={AboutDevelopers} />\r\n        <ProtectedRoute path=\"/dashboard\" component={Dashboard} />\r\n        <Route path=\"*\" component={NotFound} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\n// Only use for custom global styles\r\nconst customTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#424242\",\r\n    },\r\n    secondary: {\r\n      main: \"#c8102e\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default customTheme;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport DataContextProvider from \"./contexts/dataContext\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport customTheme from \"./customTheme\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://18.213.74.196:8000/api\";\r\n\r\nReactDOM.render(\r\n  <DataContextProvider>\r\n    <ThemeProvider theme={customTheme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </DataContextProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}